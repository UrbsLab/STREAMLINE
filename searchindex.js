Search.setIndex({"docnames": ["about", "citation", "codedocs/streamline", "codedocs/streamline.dataprep", "codedocs/streamline.dataprep.data_process", "codedocs/streamline.dataprep.exploratory_analysis", "codedocs/streamline.dataprep.kfold_partitioning", "codedocs/streamline.featurefns", "codedocs/streamline.featurefns.importance", "codedocs/streamline.featurefns.selection", "codedocs/streamline.modeling", "codedocs/streamline.modeling.basemodel", "codedocs/streamline.modeling.load_models", "codedocs/streamline.modeling.modeljob", "codedocs/streamline.modeling.parameters", "codedocs/streamline.modeling.utils", "codedocs/streamline.models", "codedocs/streamline.models.artificial_neural_network", "codedocs/streamline.models.decision_tree", "codedocs/streamline.models.elastic_net", "codedocs/streamline.models.genetic_programming", "codedocs/streamline.models.gradient_boosting", "codedocs/streamline.models.learning_based", "codedocs/streamline.models.linear_model", "codedocs/streamline.models.naive_bayes", "codedocs/streamline.models.neighbouring", "codedocs/streamline.models.random_forest", "codedocs/streamline.models.support_vector_machine", "codedocs/streamline.postanalysis", "codedocs/streamline.postanalysis.dataset_compare", "codedocs/streamline.postanalysis.gererate_report", "codedocs/streamline.postanalysis.model_replicate", "codedocs/streamline.postanalysis.statistics", "codedocs/streamline.runners", "codedocs/streamline.runners.clean_runner", "codedocs/streamline.runners.compare_runner", "codedocs/streamline.runners.dataprocess_runner", "codedocs/streamline.runners.eda_runner", "codedocs/streamline.runners.feature_runner", "codedocs/streamline.runners.model_runner", "codedocs/streamline.runners.replicate_runner", "codedocs/streamline.runners.report_runner", "codedocs/streamline.runners.stats_runner", "codedocs/streamline.utils", "codedocs/streamline.utils.checker", "codedocs/streamline.utils.cleanup", "codedocs/streamline.utils.cluster", "codedocs/streamline.utils.dataset", "codedocs/streamline.utils.evaluation", "codedocs/streamline.utils.job", "codedocs/streamline.utils.parser", "codedocs/streamline.utils.runners", "contributing", "data", "development", "index", "install", "modules", "more", "output", "parameters", "pipeline", "running", "tips"], "filenames": ["about.md", "citation.md", "codedocs/streamline.rst", "codedocs/streamline.dataprep.rst", "codedocs/streamline.dataprep.data_process.rst", "codedocs/streamline.dataprep.exploratory_analysis.rst", "codedocs/streamline.dataprep.kfold_partitioning.rst", "codedocs/streamline.featurefns.rst", "codedocs/streamline.featurefns.importance.rst", "codedocs/streamline.featurefns.selection.rst", "codedocs/streamline.modeling.rst", "codedocs/streamline.modeling.basemodel.rst", "codedocs/streamline.modeling.load_models.rst", "codedocs/streamline.modeling.modeljob.rst", "codedocs/streamline.modeling.parameters.rst", "codedocs/streamline.modeling.utils.rst", "codedocs/streamline.models.rst", "codedocs/streamline.models.artificial_neural_network.rst", "codedocs/streamline.models.decision_tree.rst", "codedocs/streamline.models.elastic_net.rst", "codedocs/streamline.models.genetic_programming.rst", "codedocs/streamline.models.gradient_boosting.rst", "codedocs/streamline.models.learning_based.rst", "codedocs/streamline.models.linear_model.rst", "codedocs/streamline.models.naive_bayes.rst", "codedocs/streamline.models.neighbouring.rst", "codedocs/streamline.models.random_forest.rst", "codedocs/streamline.models.support_vector_machine.rst", "codedocs/streamline.postanalysis.rst", "codedocs/streamline.postanalysis.dataset_compare.rst", "codedocs/streamline.postanalysis.gererate_report.rst", "codedocs/streamline.postanalysis.model_replicate.rst", "codedocs/streamline.postanalysis.statistics.rst", "codedocs/streamline.runners.rst", "codedocs/streamline.runners.clean_runner.rst", "codedocs/streamline.runners.compare_runner.rst", "codedocs/streamline.runners.dataprocess_runner.rst", "codedocs/streamline.runners.eda_runner.rst", "codedocs/streamline.runners.feature_runner.rst", "codedocs/streamline.runners.model_runner.rst", "codedocs/streamline.runners.replicate_runner.rst", "codedocs/streamline.runners.report_runner.rst", "codedocs/streamline.runners.stats_runner.rst", "codedocs/streamline.utils.rst", "codedocs/streamline.utils.checker.rst", "codedocs/streamline.utils.cleanup.rst", "codedocs/streamline.utils.cluster.rst", "codedocs/streamline.utils.dataset.rst", "codedocs/streamline.utils.evaluation.rst", "codedocs/streamline.utils.job.rst", "codedocs/streamline.utils.parser.rst", "codedocs/streamline.utils.runners.rst", "contributing.md", "data.md", "development.md", "index.rst", "install.md", "modules.rst", "more.md", "output.md", "parameters.md", "pipeline.md", "running.md", "tips.md"], "titles": ["About (FAQs)", "Citing STREAMLINE", "streamline package", "streamline.dataprep package", "streamline.dataprep.data_process module", "streamline.dataprep.exploratory_analysis module", "streamline.dataprep.kfold_partitioning module", "streamline.featurefns package", "streamline.featurefns.importance module", "streamline.featurefns.selection module", "streamline.modeling package", "streamline.modeling.basemodel module", "streamline.modeling.load_models module", "streamline.modeling.modeljob module", "streamline.modeling.parameters module", "streamline.modeling.utils module", "streamline.models package", "streamline.models.artificial_neural_network module", "streamline.models.decision_tree module", "streamline.models.elastic_net module", "streamline.models.genetic_programming module", "streamline.models.gradient_boosting module", "streamline.models.learning_based module", "streamline.models.linear_model module", "streamline.models.naive_bayes module", "streamline.models.neighbouring module", "streamline.models.random_forest module", "streamline.models.support_vector_machine module", "streamline.postanalysis package", "streamline.postanalysis.dataset_compare module", "streamline.postanalysis.gererate_report module", "streamline.postanalysis.model_replicate module", "streamline.postanalysis.statistics module", "streamline.runners package", "streamline.runners.clean_runner module", "streamline.runners.compare_runner module", "streamline.runners.dataprocess_runner module", "streamline.runners.eda_runner module", "streamline.runners.feature_runner module", "streamline.runners.model_runner module", "streamline.runners.replicate_runner module", "streamline.runners.report_runner module", "streamline.runners.stats_runner module", "streamline.utils package", "streamline.utils.checker module", "streamline.utils.cleanup module", "streamline.utils.cluster module", "streamline.utils.dataset module", "streamline.utils.evaluation module", "streamline.utils.job module", "streamline.utils.parser module", "streamline.utils.runners module", "Contributing", "Datasets", "Development Notes", "STREAMLINE", "Installation", "Code Documentation", "Doing More with STREAMLINE", "Navigating STREAMLINE Output", "Run Parameters", "Detailed Pipeline Walkthrough", "Running STREAMLINE", "Guidelines for Setting Parameters"], "terms": {"ye": 0, "an": [0, 1, 4, 9, 32, 36, 39, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63], "machin": [0, 1, 2, 27, 53, 54, 55, 56, 59, 60], "learn": [0, 2, 36, 39, 53, 54, 55, 56, 59, 60, 63], "user": [0, 4, 36, 47, 52, 53, 54, 55, 58, 59, 60, 61, 62], "easili": [0, 53, 54, 55, 58, 60, 61, 62], "": [0, 1, 6, 30, 31, 36, 52, 53, 54, 55, 58, 60, 61, 63], "entireti": [0, 62], "one": [0, 1, 4, 6, 9, 29, 31, 32, 36, 53, 54, 59, 60, 61, 62], "phase": [0, 4, 8, 9, 13, 29, 32, 36, 38, 40, 44, 45, 47, 53, 54, 55, 56, 57, 58, 59], "time": [0, 1, 11, 45, 53, 55, 59, 60, 61, 63], "we": [0, 1, 4, 9, 32, 47, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63], "have": [0, 1, 4, 9, 32, 36, 40, 41, 47, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63], "set": [0, 1, 4, 6, 9, 29, 32, 36, 39, 42, 47, 52, 53, 54, 56, 59, 61, 62], "up": [0, 52, 54, 56, 58, 59, 60, 61, 63], "includ": [0, 4, 9, 29, 32, 36, 40, 47, 48, 53, 54, 55, 56, 58, 59, 60, 61, 63], "reason": [0, 53, 60, 61], "reliabl": [0, 53, 60, 61], "default": [0, 4, 6, 9, 14, 35, 36, 38, 39, 40, 41, 42, 45, 54, 56, 58, 60, 61, 62], "paramet": [0, 2, 4, 6, 8, 9, 10, 11, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 32, 35, 36, 38, 39, 40, 41, 42, 47, 48, 54, 56, 58, 59, 61], "option": [0, 4, 11, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 36, 39, 40, 42, 45, 47, 53, 54, 55, 60, 61, 63], "chang": [0, 52, 53, 54, 58, 59, 61, 62], "suit": 0, "need": [0, 11, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 47, 52, 53, 54, 56, 60, 61, 62], "howev": [0, 36, 53, 56, 58, 59, 60, 61, 62, 63], "overal": [0, 1, 9, 29, 54, 55, 60, 61, 63], "ha": [0, 1, 4, 32, 52, 54, 59, 60, 61], "been": [0, 47, 53, 54, 59, 60, 61, 63], "design": [0, 55, 58, 59, 61], "oper": [0, 4, 6, 47, 54, 56, 59, 60, 61, 62, 63], "specif": [0, 1, 36, 48, 53, 54, 58, 59, 60, 61], "order": [0, 4, 32, 48, 53, 54, 56, 58, 59, 60, 61, 63], "util": [0, 1, 2, 4, 6, 10, 57, 60, 61, 62, 63], "fix": [0, 39, 54], "scienc": [0, 1, 53], "element": [0, 8, 9, 53, 54, 55, 59, 61], "step": [0, 4, 53, 54, 56, 59, 61, 62], "ensur": [0, 54, 61, 62], "consist": [0, 61], "adher": [0, 62], "best": [0, 1, 13, 29, 32, 52, 55, 59, 60, 61, 62], "practic": [0, 1, 52, 60, 61, 63], "A": [0, 53, 56, 58, 59, 60, 61, 62], "quickli": [0, 56], "rigor": [0, 55, 61], "ml": [0, 11, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 32, 35, 39, 41, 42, 54, 55, 58, 60, 63], "analysi": [0, 1, 4, 29, 30, 31, 36, 40, 41, 53, 54, 55, 63], "over": [0, 32, 38, 58, 59, 60, 61, 62], "dataset": [0, 2, 4, 6, 8, 9, 13, 29, 30, 31, 32, 35, 36, 38, 40, 41, 43, 44, 45, 54, 55, 58, 59, 60, 63], "model": [0, 1, 2, 29, 31, 32, 35, 38, 39, 41, 42, 47, 51, 53, 54, 55, 57], "algorithm": [0, 1, 4, 8, 9, 13, 29, 30, 31, 32, 35, 38, 39, 40, 41, 42, 55, 59, 61, 62, 63], "framework": [0, 36, 54, 58, 61], "compar": [0, 1, 29, 32, 35, 40, 41, 58, 59, 63], "establish": [0, 60, 61, 63], "scikit": [0, 1, 36, 39, 54, 55, 56, 60, 61, 63], "compat": [0, 1, 54, 58, 60, 61, 62], "each": [0, 1, 4, 9, 29, 31, 32, 40, 47, 52, 53, 54, 57, 58, 59, 60, 61, 62], "new": [0, 4, 9, 31, 36, 38, 39, 41, 52, 53, 54, 56, 59, 60, 61, 62], "baselin": [0, 60, 63], "standard": [0, 29, 32, 48, 53, 54, 56, 58, 59, 60, 61, 63], "comparison": [0, 1, 29, 32, 54, 60, 61], "e": [0, 1, 4, 9, 32, 36, 39, 47, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63], "posit": [0, 36, 48, 53, 60, 61], "control": [0, 1, 47, 52, 54, 60, 61], "evalu": [0, 1, 2, 8, 11, 13, 29, 31, 32, 39, 43, 54, 58, 60, 62, 63], "seek": [0, 53, 61], "optim": [0, 10, 11, 39, 54, 60, 63], "assembli": 0, "part": [0, 31, 47, 55, 60, 61], "methodologi": 0, "exploratori": [0, 4, 31, 36, 47, 54, 61], "process": [0, 1, 4, 9, 36, 54, 56, 59], "featur": [0, 4, 8, 9, 11, 13, 15, 31, 32, 36, 38, 39, 40, 41, 42, 47, 54, 55, 58, 59, 63], "import": [0, 2, 7, 9, 11, 31, 32, 38, 39, 54, 56, 58, 59, 63], "estim": [0, 31, 39, 54, 58, 59, 63], "select": [0, 2, 4, 7, 8, 32, 36, 38, 54, 59, 63], "prior": [0, 1, 38, 53, 56, 59, 60, 61, 62], "some": [0, 9, 47, 52, 53, 54, 58, 59, 60, 61, 62], "educ": [0, 1, 60, 61, 62], "exampl": [0, 1, 53, 55, 56, 58, 59, 61, 62], "integr": [0, 1, 54], "mani": [0, 53, 54, 55, 59, 60, 61], "amaz": 0, "python": [0, 54, 55, 56, 61, 62], "base": [0, 4, 6, 8, 9, 11, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 38, 39, 40, 41, 42, 45, 47, 49, 52, 53, 54, 55, 56, 58, 59, 60, 62], "current": [0, 1, 4, 9, 38, 53, 59, 60, 61, 62], "avail": [0, 15, 36, 39, 54, 56, 60, 61, 62], "particular": [0, 53, 61, 62], "panda": [0, 4, 54, 55, 56, 59, 60, 61], "scipi": [0, 54, 56], "optuna": [0, 11, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 39, 54, 58, 59, 60, 61], "creat": [0, 4, 8, 9, 32, 47, 52, 53, 54, 56, 58, 60, 62], "expand": [0, 53, 54, 55, 59], "adapt": [0, 54, 61, 62], "modifi": [0, 58, 62], "add": [0, 4, 52, 53, 54, 61], "see": [0, 36, 53, 56, 58, 59, 60, 62], "ad": [0, 4, 52, 53, 54, 59, 61], "offer": [0, 1, 32, 54, 60, 62, 63], "varieti": [0, 54, 55, 58, 59, 61, 62], "make": [0, 4, 52, 54, 55, 56, 58, 59, 60, 61, 62], "access": [0, 58, 60, 62], "those": [0, 9, 36, 53, 54, 60, 61, 62, 63], "littl": [0, 54, 61, 62], "code": [0, 52, 53, 54, 55, 58, 59, 60, 61, 62], "experi": [0, 4, 6, 9, 35, 36, 38, 39, 40, 41, 42, 45, 47, 53, 54, 58, 60, 61, 62, 63], "well": [0, 1, 4, 8, 32, 36, 47, 53, 54, 59, 60, 61, 62, 63], "season": 0, "programm": 0, "scientist": 0, "while": [0, 1, 4, 53, 56, 60, 61, 62, 63], "graphic": 0, "interfac": 0, "gui": 0, "most": [0, 1, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63], "naiv": [0, 24, 60, 61, 62, 63], "onli": [0, 9, 31, 32, 36, 38, 42, 47, 53, 54, 55, 56, 59, 60, 61, 62, 63], "know": [0, 52, 54, 60, 62], "navig": [0, 52, 54, 56, 62], "file": [0, 4, 6, 8, 9, 13, 32, 36, 45, 47, 52, 53, 54, 56, 58, 60, 61], "system": [0, 56, 60, 61, 62, 63], "specifi": [0, 4, 36, 39, 47, 54, 56, 59, 60, 61, 62], "folder": [0, 4, 6, 29, 32, 36, 38, 45, 47, 52, 54, 56, 58, 60, 61, 62], "path": [0, 4, 6, 8, 9, 12, 35, 36, 38, 39, 40, 41, 42, 45, 47, 59, 60, 62], "googl": [0, 54, 55, 59], "drive": [0, 56, 62], "account": [0, 52, 54, 56, 60, 61, 62], "serial": [0, 36, 40, 54, 62], "colab": [0, 54, 55, 59, 60], "veri": [0, 1, 56, 60, 62, 63], "basic": [0, 4, 47, 53, 59, 60, 62], "knowledg": [0, 53], "environ": [0, 52, 56, 62], "appli": [0, 1, 4, 8, 9, 29, 31, 32, 36, 38, 40, 53, 54, 55, 59, 60, 61, 62, 63], "local": [0, 36, 40, 52, 54, 60], "jupyt": [0, 36, 54, 58, 60], "notebook": [0, 36, 53, 54, 55, 60, 61], "comfort": [0, 62], "command": [0, 11, 52, 54, 60], "line": [0, 54, 56, 59, 60], "either": [0, 1, 8, 36, 39, 56, 59, 60, 61, 62], "cpu": [0, 56, 60], "core": [0, 60, 61, 62], "parallel": [0, 36, 40, 54, 60, 62], "cluster": [0, 2, 36, 40, 43, 54, 59, 60], "hpc": [0, 54, 56, 60, 62], "unlik": [0, 59], "wa": [0, 1, 4, 9, 32, 36, 53, 54, 55, 58, 59, 60, 61, 62], "end": [0, 1, 2, 53, 54, 55], "collect": [0, 9, 60, 61], "them": [0, 32, 52, 53, 54, 56, 57, 60, 61, 62], "oppos": 0, "identifi": [0, 1, 4, 9, 32, 47, 53, 54, 59, 60, 61, 62, 63], "perform": [0, 1, 29, 32, 38, 54, 55, 58, 59, 62], "attempt": [0, 60, 61], "configur": [0, 54, 56, 60, 61], "itself": [0, 61], "adopt": [0, 1, 61], "seri": [0, 53, 55], "purposefulli": 0, "It": [0, 30, 31, 32, 47, 53, 54, 55, 59, 60, 61, 62], "all": [0, 1, 4, 8, 9, 11, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 32, 36, 39, 40, 41, 42, 45, 47, 52, 53, 54, 56, 58, 59, 60, 61, 63], "domain": [0, 53, 55, 58], "generaliz": [0, 61], "focu": [0, 36, 53, 59, 62], "biomed": [0, 1, 53, 55, 61], "mine": [0, 1, 55, 61], "challeng": [0, 53, 61], "thi": [0, 1, 4, 13, 29, 30, 31, 32, 36, 40, 45, 47, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63], "number": [0, 1, 4, 6, 9, 11, 32, 36, 38, 39, 42, 47, 53, 54, 56, 58, 59, 60, 61, 62, 63], "wai": [0, 29, 32, 52, 53, 54, 55, 56, 59, 60, 61, 62], "problem": [0, 1, 53, 55, 56, 60, 61, 63], "complex": [0, 1, 56, 60, 61, 63], "furthermor": [0, 53, 61], "classifi": [0, 60, 61, 63], "lc": [0, 1, 39, 60, 61, 63], "rule": [0, 1, 39, 47, 54, 60, 61, 63], "interpret": [0, 1, 31, 32, 53, 54, 55, 58, 60, 61, 63], "associ": [0, 1, 4, 8, 32, 60, 61, 62, 63], "develop": [0, 1, 52, 55, 57, 60, 61, 63], "our": [0, 1, 52, 55, 60, 61, 62, 63], "lab": [0, 1], "exstrac": [0, 1, 15, 22, 54, 60, 61, 63], "implement": [0, 1, 4, 54, 55, 60, 61, 63], "address": [0, 52, 53, 54, 61], "follow": [0, 1, 45, 52, 53, 54, 55, 56, 59, 60, 61, 62], "aspect": [0, 53, 55, 60, 61, 62], "schemat": [0, 54, 55], "initi": [0, 4, 6, 8, 36, 47, 54, 58, 60], "clean": [0, 4, 36, 47, 53, 54, 55, 59, 60], "instanc": [0, 4, 8, 13, 36, 40, 47, 53, 54, 58, 59, 60, 61, 62, 63], "outcom": [0, 1, 4, 36, 47, 53, 55, 59, 60, 61, 62], "want": [0, 32, 56, 58, 60, 61, 62], "ignor": [0, 4, 36, 53, 62], "high": [0, 53, 54, 60], "missing": [0, 4, 47, 53, 54, 59, 60, 61], "miss": [0, 4, 36, 47, 53, 54, 59, 60, 61, 63], "valu": [0, 4, 32, 36, 39, 47, 48, 54, 58, 59, 60, 61, 62, 63], "pair": [0, 1, 4, 29, 32, 36, 53, 54, 59, 60, 61], "highli": [0, 54, 61], "correl": [0, 4, 36, 40, 47, 53, 54, 59, 60, 61], "engin": [0, 4, 54, 55, 59, 60], "encod": [0, 4, 36, 54, 59, 60], "hot": [0, 53, 54, 61], "categor": [0, 4, 36, 47, 54, 58, 59, 60, 61, 62], "cv": [0, 6, 8, 9, 11, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 32, 36, 38, 40, 45, 53, 54, 58, 59, 60, 62, 63], "partit": [0, 6, 36, 38, 47, 54, 58, 59, 60, 62, 63], "imput": [0, 53, 54, 59, 63], "scale": [0, 53, 54, 59, 63], "scalar": [0, 53], "filter": [0, 1, 9, 38, 60, 61], "mutual": [0, 8, 59, 60, 61], "inform": [0, 8, 9, 54, 56, 58, 59, 60, 61, 62], "multisurf": [0, 1, 8, 15, 60, 61, 63], "multi": [0, 53, 55, 60, 62], "approach": [0, 1, 53, 54, 61, 62], "hyperparamet": [0, 13, 39, 54, 59, 60, 63], "16": [0, 59, 61], "below": [0, 1, 4, 39, 40, 52, 53, 55, 56, 57, 58, 59, 60, 62, 63], "respect": [0, 36, 47, 53, 55, 58, 59, 60, 61, 62], "test": [0, 4, 6, 9, 29, 32, 40, 41, 45, 52, 53, 54, 56, 58, 60, 61, 62, 63], "classif": [0, 2, 32, 36, 48, 53, 54, 55, 59, 60, 61], "metric": [0, 1, 13, 29, 32, 36, 39, 40, 42, 48, 53, 58, 59, 60, 61], "gener": [0, 4, 9, 29, 30, 31, 32, 36, 39, 41, 47, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63], "organ": [0, 1, 32, 54, 55, 61], "result": [0, 4, 9, 30, 32, 36, 40, 54, 58, 59, 60, 61, 62, 63], "tabl": 0, "runtim": [0, 4, 8, 9, 13, 29, 30, 32, 61, 62], "etc": [0, 56, 59, 60], "public": [0, 1, 54], "readi": [0, 54, 55], "plot": [0, 4, 9, 11, 32, 35, 36, 39, 40, 42, 47, 53, 54, 58, 60, 61, 63], "figur": [0, 31, 32, 38, 42, 54, 58, 60, 61], "visual": [0, 1, 32, 47, 54, 58, 60, 61], "train": [0, 1, 6, 8, 9, 11, 13, 30, 31, 32, 39, 40, 41, 45, 53, 54, 55, 58, 59, 60, 62, 63], "store": [0, 9, 32, 52, 59, 60], "pickl": [0, 8, 58, 60, 61], "object": [0, 4, 6, 10, 11, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 34, 35, 36, 38, 39, 40, 41, 42, 45, 47, 49, 51, 58, 59, 61], "re": [0, 48, 52, 54, 56, 58, 60, 61, 62], "extern": [0, 54, 60], "non": [0, 4, 29, 32, 47, 52, 53, 54, 59, 60, 61, 62], "parametr": [0, 29, 32, 54, 59, 60, 61], "statist": [0, 2, 28, 29, 42, 47, 54, 58, 60, 61, 63], "across": [0, 1, 9, 29, 32, 36, 47, 53, 55, 56, 58, 59, 60, 61], "analyz": [0, 15, 36, 53, 54, 59, 60, 61, 62], "summari": [0, 11, 30, 32, 40, 41, 45, 54], "report": [0, 4, 9, 30, 47, 54, 55, 58], "pre": [0, 1, 54, 59, 60, 61, 62], "format": [0, 30, 36, 53, 54, 59, 60, 61, 62], "pdf": [0, 30, 41, 54, 60, 61, 62], "characterist": [0, 59, 61], "kei": [0, 30, 54, 58, 59, 60, 61, 62], "averag": [0, 9, 29, 32, 38, 40, 60, 61], "further": [0, 53, 54, 57, 58, 59, 60, 61, 62], "futur": [0, 1, 54, 55, 59, 61], "hold": [0, 31, 40, 41, 52, 54, 61], "out": [0, 1, 4, 30, 31, 36, 38, 40, 41, 54, 56, 58, 60, 61, 62], "replic": [0, 4, 31, 32, 39, 40, 41, 54, 58], "The": [0, 1, 4, 32, 36, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62], "ar": [0, 1, 4, 9, 29, 32, 36, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63], "bay": [0, 24, 60, 61, 62, 63], "nb": [0, 24, 60, 62], "logist": [0, 23, 60, 61, 62, 63], "regress": [0, 23, 54, 55, 60, 61, 62, 63], "lr": [0, 23, 54, 60, 61, 62], "elast": [0, 19, 54, 58, 60], "net": [0, 19, 54, 58, 60], "en": [0, 19, 54, 58, 60], "decis": [0, 18, 53, 54, 58, 60, 61, 62, 63], "tree": [0, 18, 54, 58, 60, 61, 62, 63], "dt": [0, 18, 60, 61, 62], "random": [0, 4, 6, 26, 36, 38, 54, 60, 61], "forest": [0, 26, 60, 61], "rf": [0, 26, 60, 61], "gradient": [0, 21, 60], "boost": [0, 21, 60], "gb": [0, 21, 36, 60, 61, 62], "xgboost": [0, 61], "xgb": [0, 21, 39, 60, 61], "lgboost": 0, "lgb": [0, 21, 60, 61], "catboost": [0, 54], "cgb": [0, 21, 60], "support": [0, 27, 42, 54, 60, 62], "vector": [0, 27, 60], "svm": [0, 27, 39, 60, 61, 63], "artifici": [0, 17, 60, 61], "neural": [0, 17, 60, 61], "network": [0, 17, 60, 61], "ann": [0, 17, 39, 60, 61, 63], "k": [0, 6, 25, 53, 59, 60], "nearest": [0, 25, 60], "neighbor": [0, 25, 60], "nn": 0, "genet": [0, 1, 20, 54, 58, 60, 61, 63], "program": [0, 1, 20, 54, 55, 56, 58, 60, 61, 62, 63], "gp": [0, 20, 54, 60], "elc": [0, 1, 22, 29, 30, 31, 35, 39, 40, 41, 42, 54, 60, 61, 63], "x": [0, 4, 29, 52, 60, 62], "xc": [0, 22, 29, 30, 31, 35, 39, 40, 41, 42, 54, 60, 61, 63], "extend": [0, 36, 54, 55, 60], "supervis": [0, 1, 2, 55, 60, 61], "track": [0, 60, 61], "relev": [0, 1, 36, 53, 54, 59, 60, 61, 62, 63], "rang": [0, 14, 39, 58, 60, 61], "carefulli": 0, "driven": [0, 1], "sweep": [0, 39, 54, 58, 60, 61], "thu": [0, 60, 61, 62], "ani": [0, 4, 39, 45, 47, 52, 53, 54, 58, 59, 60, 61, 62], "automat": [0, 4, 30, 36, 52, 53, 54, 56, 58, 59, 60, 61, 62], "intend": [0, 54, 55, 61], "give": [0, 32, 36, 53, 54, 60, 61], "brief": 0, "also": [0, 1, 4, 29, 31, 36, 47, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63], "contain": [0, 36, 40, 41, 58, 59, 60, 61, 62], "analys": [0, 58, 59, 61, 62], "save": [0, 4, 6, 8, 9, 13, 29, 32, 45, 47, 52, 54, 56, 59, 60, 61, 62], "allow": [0, 36, 52, 53, 54, 56, 58, 59, 60, 61, 62], "examin": [0, 1, 53, 58, 59, 61, 62], "transpar": [0, 1, 2], "manner": [0, 53, 60, 61], "notabl": [0, 32, 61], "NOT": 0, "thei": [0, 1, 32, 36, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63], "still": [0, 54, 61, 62], "human": [0, 1, 53, 60, 61, 63], "expert": 0, "1": [0, 1, 4, 29, 32, 36, 39, 53, 56, 58, 59, 63], "bia": [0, 1], "fair": 0, "2": [0, 1, 52, 53, 58, 59], "recommend": [0, 39, 42, 47, 53, 54, 55, 56, 58, 60, 61, 62, 63], "consid": [0, 1, 4, 9, 36, 53, 54, 60], "conduct": [0, 31, 36, 47, 53, 54, 60, 61, 63], "item": 0, "No": [0, 36, 56], "By": [0, 61, 62], "except": [0, 53, 54, 60, 61, 63], "7": [0, 1, 53, 54, 56], "when": [0, 30, 32, 36, 52, 53, 54, 56, 59, 60, 61, 62, 63], "than": [0, 4, 9, 29, 32, 53, 54, 58, 60, 61, 62, 63], "target": [0, 4, 8, 13, 29, 32, 36, 40, 41, 47, 53, 54, 58, 59, 60, 61, 62], "8": [0, 1, 53, 56, 59], "choos": 0, "often": [0, 53, 54, 60, 61, 63], "advantag": [0, 62], "For": [0, 15, 29, 52, 53, 55, 56, 60, 61, 62], "could": [0, 53, 61, 62], "just": [0, 53, 60], "Or": 0, "4": [0, 1, 8, 30, 35, 36, 38, 39, 40, 41, 42, 46, 53, 59], "outsid": [0, 54, 61], "One": [0, 1, 36, 53, 61], "caveat": 0, "sequenc": [0, 62], "assempl": 0, "even": [0, 54, 58, 60, 62, 63], "predict": [0, 1, 10, 11, 47, 48, 53, 54, 55, 58, 59, 60, 61, 63], "probabl": [0, 54, 58], "regener": [0, 58], "try": [0, 54, 61, 62], "effect": [0, 8, 53, 60, 61, 62, 63], "threshold": [0, 58, 60], "interact": [0, 1, 8, 54, 58, 60, 61, 63], "slider": 0, "rank": [0, 9, 29, 32, 54, 58, 59, 60, 61], "vizual": [0, 58], "addit": [0, 52, 54, 58, 59, 60, 61, 62], "assembl": [0, 55], "unfortun": 0, "afford": 0, "opportun": [0, 54, 61], "incorrectli": 0, "wouldn": 0, "t": [0, 1, 32, 52, 54, 56, 60, 62], "normal": [0, 1, 32, 53, 59, 61], "come": [0, 52], "first": [0, 1, 53, 54, 55, 56, 59, 60, 61, 62], "easi": [0, 52, 54], "exclud": [0, 29, 30, 31, 35, 36, 39, 40, 41, 42, 53, 54, 59, 61], "mai": [0, 9, 36, 39, 47, 53, 56, 60, 61, 62, 63], "contribut": [0, 55], "g": [0, 1, 36, 53, 55, 56, 59, 60, 61, 62, 63], "would": [0, 1, 4, 53, 54, 55, 56, 59, 60, 61, 62], "ignore_features_path": [0, 53, 61], "second": [0, 1, 39, 53, 54, 59, 60, 61], "might": [0, 32, 53, 56, 60], "eventu": 0, "done": [0, 52, 62], "alon": [0, 60, 62, 63], "same": [0, 32, 36, 40, 41, 42, 47, 53, 54, 56, 58, 59, 60, 61, 62], "strategi": [0, 1, 53, 54, 60, 61, 62], "remov": [0, 4, 8, 13, 36, 53, 54, 59, 60, 61], "And": [0, 58], "later": [0, 11, 47, 56, 59, 60, 61], "given": [0, 4, 29, 32, 36, 40, 47, 53, 54, 55, 57, 58, 59, 60, 61, 62], "origin": [0, 1, 4, 29, 32, 40, 41, 47, 52, 53, 54, 59, 60, 61, 62, 63], "were": [0, 32, 53, 54, 59, 61, 62], "dure": [0, 53, 54, 55, 59, 60, 61, 62, 63], "timeout": [0, 11, 13, 39, 54, 61, 63], "none": [0, 4, 6, 8, 11, 12, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 38, 39, 40, 41, 42, 44, 47, 50, 54, 58, 60, 61, 62], "assum": [0, 4, 53, 54, 60, 62], "being": [0, 4, 15, 36, 53, 54, 59, 60, 61], "random_st": [0, 4, 6, 8, 11, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 36, 38, 39, 58], "expect": [0, 60, 61, 63], "take": [0, 1, 4, 6, 9, 32, 39, 53, 59, 60, 61, 62, 63], "longer": [0, 39, 54, 60, 61, 62, 63], "multipl": [0, 36, 53, 54, 55, 56, 59, 60, 61, 62, 63], "resourc": [0, 1, 60, 62], "anyon": [0, 55, 62], "view": [0, 54, 59, 60, 61, 62], "within": [0, 1, 4, 30, 36, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62], "computation": [0, 60, 61, 63], "limit": [0, 9, 60, 61, 62, 63], "free": [0, 56, 62], "cloud": [0, 36, 54, 62], "demonstr": [0, 1, 54, 55, 56, 58, 59, 60, 61, 62, 63], "purpos": [0, 53, 62], "small": [0, 53, 59, 60, 62], "mostli": [0, 47, 59, 61], "reli": [0, 60, 61, 62, 63], "your": [0, 52, 53, 56, 58, 59, 60], "possibli": [0, 60], "faster": [0, 61, 62], "memori": [0, 36, 46, 61], "you": [0, 1, 52, 54, 56, 58, 59, 60, 62, 63], "anaconda": [0, 54], "troubleshoot": [0, 55, 62], "beginn": [0, 62], "who": [0, 60, 61], "wish": [0, 1, 53, 54, 60, 61, 62], "As": [0, 4, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63], "don": [0, 54, 60, 62], "care": [0, 1], "willing": [0, 60, 63], "work": [0, 1, 32, 38, 52, 55, 56, 58, 61, 62], "embarrassingli": [0, 62], "packag": [0, 1, 52, 54, 56, 57, 61, 62], "individu": [0, 4, 6, 29, 32, 40, 45, 55, 59, 60, 61, 62, 63], "job": [0, 2, 4, 6, 8, 9, 13, 28, 29, 30, 31, 32, 35, 36, 38, 39, 40, 41, 43, 51, 54, 56, 59, 60], "dask": [0, 60, 62], "fastest": [0, 60, 61, 62, 63], "effici": [0, 52, 62], "particularli": [0, 56, 60, 61, 62, 63], "larger": [0, 29, 32, 39, 53, 54, 60, 61, 62, 63], "detail": [0, 52, 53, 58, 62], "disadvantag": [0, 62], "pick": [0, 54, 58, 60, 61], "If": [1, 4, 9, 32, 36, 39, 52, 53, 54, 56, 59, 60, 61, 62, 63], "us": [1, 4, 6, 8, 9, 32, 36, 39, 42, 47, 52, 53, 54, 55, 56, 57, 59, 61, 63], "scientif": 1, "pleas": [1, 52, 54, 56], "paper": 1, "note": [1, 32, 36, 39, 52, 53, 58, 59, 60, 61, 62, 63], "releas": [1, 52, 55, 56, 59, 62], "manuscript": 1, "recent": [1, 54, 55, 56, 62], "beta": [1, 52, 55, 59], "0": [1, 4, 9, 13, 29, 31, 32, 35, 36, 39, 42, 52, 53, 56, 58, 59, 60, 61, 62, 63], "3": [1, 9, 11, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 53, 55, 56, 58, 59], "print": [1, 60], "urbanowicz": [1, 55], "ryan": [1, 55], "et": 1, "al": 1, "autom": [1, 2, 53, 54, 55, 59, 60, 61], "biomedicin": 1, "photographi": 1, "phenotyp": 1, "osa": 1, "intern": [1, 54, 58, 59, 60, 61], "sleep": 1, "center": [1, 55, 61], "arxiv": 1, "preprint": 1, "2312": 1, "05461": 1, "bibtex": 1, "citat": [1, 54], "articl": 1, "urbanowicz2023streamlineosa": 1, "titl": 1, "author": 1, "j": 1, "bandhei": [1, 52, 55], "harsh": [1, 52, 55], "keenan": [1, 55], "brendan": [1, 55], "maislin": 1, "greg": 1, "hwang": [1, 55], "sy": [1, 55], "moweri": [1, 55], "daniel": [1, 55], "l": 1, "lynch": [1, 55], "shannon": [1, 55], "m": [1, 6, 8, 15, 36, 38, 52, 60], "mazzotti": [1, 55], "diego": [1, 55], "r": [1, 6, 52, 56], "han": 1, "fang": 1, "li": 1, "qu": 1, "yun": 1, "penzel": 1, "thoma": 1, "tufik": 1, "sergio": 1, "bittencourt": 1, "lia": 1, "gislason": 1, "thorarinn": 1, "de": 1, "chazal": 1, "philip": 1, "singh": 1, "bhajan": 1, "mcardl": 1, "nigel": 1, "chen": 1, "ning": 1, "hung": 1, "pack": [1, 55], "allan": [1, 55], "schwab": 1, "richard": [1, 55], "cistulli": 1, "peter": 1, "magalang": [1, 55], "ulyss": [1, 55], "journal": 1, "year": 1, "2023": 1, "simpl": [1, 2, 4, 47, 53, 54, 55, 56, 59, 60, 62, 63], "To": [1, 2, 9, 52, 53, 56, 58, 60, 61, 62], "facilit": 1, "data": [1, 2, 4, 6, 9, 11, 29, 32, 36, 39, 40, 47, 54, 55, 56, 58, 59, 63], "theori": 1, "xix": 1, "singapor": 1, "springer": 1, "natur": [1, 53], "201": 1, "231": 1, "incollect": 1, "urbanowicz2023streamlin": 1, "zhang": [1, 55], "robert": [1, 55], "cui": [1, 55], "yuhan": [1, 55], "suri": [1, 55], "pranshu": [1, 55], "booktitl": 1, "page": [1, 30, 52, 54, 56, 62], "publish": [1, 54, 58], "codebas": [1, 54, 62], "instead": [1, 32, 39, 54, 60, 61, 62, 63], "indic": [1, 4, 36, 41, 53, 54, 56, 58, 59, 60, 61, 62], "link": [1, 56, 60, 62], "v0": 1, "misc": 1, "streamline2023": 1, "github": [1, 52, 56, 58, 62], "repositori": [1, 52, 53, 54, 56, 58, 62], "howpublish": 1, "url": 1, "http": [1, 56, 60, 62], "com": [1, 52, 56, 62], "urbslab": [1, 56], "tag": [1, 8], "section": [1, 54, 59, 60, 61, 62], "provid": [1, 4, 54, 60, 61, 62, 63], "explor": [1, 59], "cognit": 1, "from": [1, 4, 8, 9, 13, 29, 32, 36, 38, 39, 40, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63], "multimod": 1, "brain": 1, "imag": [1, 53, 55, 59], "wang2023explor": 1, "wang": 1, "xinkai": 1, "feng": 1, "yanbo": 1, "tong": 1, "bone": 1, "bao": 1, "jingxuan": 1, "ritchi": 1, "marylyn": 1, "d": [1, 59, 60, 62], "saykin": 1, "andrew": 1, "moor": [1, 55], "jason": [1, 55], "h": 1, "shen": 1, "amia": 1, "summit": 1, "translat": 1, "proceed": 1, "volum": 1, "544": 1, "american": 1, "medic": [1, 55], "informat": 1, "amyloid": 1, "alzheim": 1, "diseas": 1, "tong2023compar": 1, "risach": 1, "525": 1, "toward": 1, "30": [1, 53], "dai": 1, "readmiss": 1, "among": [1, 61], "oncologi": 1, "patient": 1, "action": [1, 52], "risk": 1, "factor": 1, "hwang2023toward": 1, "selah": 1, "vernon": 1, "tawnya": 1, "bresz": 1, "kelli": 1, "giraldo": 1, "carolina": 1, "kennedi": 1, "erin": 1, "leabhart": 1, "max": [1, 9, 38, 54, 60], "bleacher": 1, "troi": 1, "ripchinski": 1, "michael": 1, "jco": 1, "clinic": 1, "cancer": [1, 55], "e2200097": 1, "wolter": 1, "kluwer": 1, "health": [1, 62], "ward": 1, "capac": 1, "strain": 1, "That": 1, "survivor": 1, "acut": 1, "respiratori": 1, "failur": [1, 54], "kohn": 1, "harhai": 1, "o": 1, "weissman": 1, "med": 1, "syst": 1, "47": 1, "83": 1, "barrier": 1, "post": [1, 54, 59], "referr": 1, "character": [1, 60, 61], "neg": [1, 36, 48, 53, 60, 61], "prefer": [1, 52], "hospit": 1, "older": [1, 45], "adult": 1, "languag": [1, 53], "inproceed": 1, "kennedy2022identifi": 1, "davoudi": 1, "anahita": 1, "freda": 1, "bowl": 1, "kathryn": 1, "annual": 1, "symposium": 1, "2022": 1, "606": 1, "In": [1, 4, 32, 52, 53, 56, 59, 60, 61, 62, 63], "method": [1, 6, 36, 39, 60, 61, 62], "lesson": 1, "previou": [1, 56, 60, 62], "briefli": [1, 61], "summar": [1, 32, 38, 54, 55, 59, 60, 61, 62], "describ": [1, 58, 59, 60, 61, 62], "earli": 1, "version": [1, 45, 47, 52, 54, 56, 59, 60, 61, 62], "what": [1, 54, 55, 58, 60, 61, 62], "becom": [1, 56], "pancreat": 1, "urbanowicz2020rigor": 1, "nest": [1, 61], "case": [1, 47, 54, 59, 60, 61, 62], "studi": [1, 31], "implic": 1, "assess": [1, 61], "ruth": 1, "karen": 1, "stolzenberg": [1, 55], "solomon": [1, 55], "rachael": [1, 55], "2008": 1, "12829v2": 1, "2020": 1, "urbanowicz2022streamlin": 1, "2206": 1, "12002v1": 1, "two": [1, 53, 59, 60, 62], "i": [1, 4, 9, 29, 30, 31, 32, 36, 38, 39, 45, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "can": [1, 32, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "priorit": 1, "involv": [1, 52, 53, 60, 61], "univari": [1, 4, 8, 30, 54, 60, 61], "multivari": [1, 61], "believ": [1, 54], "least": [1, 40, 41, 60, 61], "sensit": [1, 60, 61, 62], "introduct": 1, "review": [1, 52, 55, 60, 61, 62], "urbanowicz2018relief": 1, "meeker": 1, "melissa": 1, "la": 1, "cava": 1, "william": 1, "olson": 1, "randal": 1, "85": 1, "189": 1, "203": 1, "2018": 1, "elsevi": 1, "next": [1, 54, 56, 61, 62], "introduc": [1, 54], "rebat": [1, 61], "releif": 1, "urbanowicz2018benchmark": 1, "benchmark": [1, 61], "bioinformat": 1, "schmitt": 1, "168": 1, "188": 1, "ensembl": [1, 54], "determin": [1, 29, 32, 59, 60, 61, 63], "which": [1, 4, 29, 30, 32, 36, 45, 53, 54, 56, 57, 59, 60, 61, 62], "kind": 1, "verma2018collect": 1, "crucial": 1, "epistat": [1, 61], "variant": [1, 60, 62], "verma": 1, "shefali": 1, "luca": 1, "anastasia": 1, "xinyuan": 1, "veturi": 1, "yogasudha": 1, "dudek": 1, "scott": 1, "binglan": 1, "ruowang": 1, "kim": 1, "dokyoon": 1, "biodata": 1, "11": [1, 45], "22": 1, "incorpor": 1, "15": [1, 39, 60], "run": [1, 3, 4, 6, 7, 8, 9, 10, 11, 13, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63], "own": [1, 53, 54, 58, 60], "close": [1, 56, 62], "subfield": 1, "evolutionari": [1, 54], "discov": 1, "constitut": [1, 60], "appeal": 1, "gear": 1, "abl": [1, 8, 54, 56, 60, 61, 63], "tackl": [1, 53, 60, 63], "long": [1, 39, 60, 61, 62], "stand": 1, "135": 1, "bit": 1, "multiplex": [1, 62], "directli": [1, 58, 60, 61, 62], "larg": [1, 47, 54, 60, 61, 62, 63], "due": [1, 47, 54], "abil": [1, 53, 54, 60, 61, 62, 63], "guid": [1, 56, 62], "search": 1, "urbanowicz2015exstrac": 1, "descript": [1, 36, 47, 54, 60], "scalabl": [1, 61], "intellig": [1, 54], "89": 1, "116": 1, "2015": 1, "dive": [1, 59], "output": [1, 4, 8, 13, 35, 36, 38, 39, 40, 41, 42, 44, 45, 47, 54, 56, 58, 61, 62], "differ": [1, 29, 32, 53, 54, 56, 58, 59, 60, 61, 62, 63], "pattern": [1, 60, 61, 63], "between": [1, 4, 9, 29, 32, 53, 59, 60, 61, 62], "how": [1, 53, 55, 58, 59, 61, 62], "better": [1, 32, 60, 63], "understand": [1, 55, 61], "relationship": [1, 59], "captur": 1, "zhang2021lc": 1, "2104": 1, "12844": 1, "2021": 1, "direct": [1, 39, 58, 60, 61, 62], "descend": [1, 32], "uc": 1, "zhang2020scikit": 1, "f": 1, "comput": [1, 36, 47, 52, 54, 56, 59, 60, 61, 63], "confer": 1, "companion": 1, "1816": 1, "1823": 1, "primarili": [1, 8, 60], "textbook": 1, "book": 1, "urbanowicz2017introduct": 1, "brown": [1, 53], "Will": 1, "n": [1, 22, 30, 60, 63], "2017": 1, "pipelin": [2, 4, 8, 29, 30, 32, 36, 41, 45, 47, 53, 54, 55, 58, 60, 62, 63], "tabular": [2, 47, 53, 55], "binari": [2, 4, 36, 54, 55, 59, 60, 61], "dataprep": [2, 57, 60, 62], "submodul": [2, 57], "data_process": [2, 3], "modul": [2, 3, 7, 10, 16, 28, 33, 43, 52, 56, 60], "dataprocess": [2, 3, 4], "exploratory_analysi": [2, 3], "kfold_partit": [2, 3], "kfoldpartition": [2, 3, 4, 6], "featurefn": [2, 57], "featureimport": [2, 7, 8], "featureselect": [2, 7, 9], "basemodel": [2, 10, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 58], "load_model": [2, 10], "load_class_from_fold": [2, 10, 12], "modeljob": [2, 10], "get_paramet": [2, 10, 14], "get_fi_for_exstrac": [2, 10, 15], "is_supported_model": [2, 10, 15], "model_str_to_obj": [2, 10, 15], "artificial_neural_network": [2, 16], "mlpclassifi": [2, 16, 17], "decision_tre": [2, 16], "decisiontreeclassifi": [2, 16, 18], "elastic_net": [2, 16], "elasticnetclassifi": [2, 16, 19, 58], "genetic_program": [2, 16], "gpclassifi": [2, 16, 20], "gradient_boost": [2, 16], "cgbclassifi": [2, 16, 21], "gbclassifi": [2, 16, 21], "lgbclassifi": [2, 16, 21], "xgbclassifi": [2, 16, 21], "learning_bas": [2, 16], "exstracsclassifi": [2, 16, 22], "xcsclassifi": [2, 16, 22], "elcsclassifi": [2, 16, 22], "linear_model": [2, 16, 58], "logisticregress": [2, 16, 23], "naive_bay": [2, 16], "naivebayesclassifi": [2, 16, 24], "neighbour": [2, 16], "knnclassifi": [2, 16, 25], "random_forest": [2, 16], "randomforestclassifi": [2, 16, 26], "support_vector_machin": [2, 16], "supportvectorclassifi": [2, 16, 27], "postanalysi": [2, 57], "dataset_compar": [2, 28], "comparejob": [2, 28, 29], "gererate_report": [2, 28], "reportjob": [2, 28, 30], "list_to_str": [2, 28, 30], "ngi": [2, 28, 30], "model_repl": [2, 28, 54], "replicatejob": [2, 28, 31], "statsjob": [2, 28, 32, 54], "runner": [2, 43, 57], "clean_runn": [2, 33], "cleanrunn": [2, 33, 34], "compare_runn": [2, 33], "comparerunn": [2, 33, 35], "dataprocess_runn": [2, 33], "dataprocessrunn": [2, 33, 36], "eda_runn": [2, 33], "feature_runn": [2, 33], "featureimportancerunn": [2, 33, 38], "featureselectionrunn": [2, 33, 38], "model_runn": [2, 33], "modelexperimentrunn": [2, 33, 39], "replicate_runn": [2, 33], "replicationrunn": [2, 33, 40], "report_runn": [2, 33], "reportrunn": [2, 33, 41], "stats_runn": [2, 33], "statsrunn": [2, 33, 42], "checker": [2, 43, 62], "check_phas": [2, 43, 44], "check_phase_1": [2, 43, 44], "check_phase_10": [2, 43, 44], "check_phase_11": [2, 43, 44], "check_phase_2": [2, 43, 44], "check_phase_3": [2, 43, 44], "check_phase_4": [2, 43, 44], "check_phase_5": [2, 43, 44], "check_phase_6": [2, 43, 44], "check_phase_7": [2, 43, 44], "check_phase_8": [2, 43, 44], "check_phase_9": [2, 43, 44], "cleanup": [2, 43], "cleaner": [2, 43, 45], "get_clust": [2, 43, 46], "class_ev": [2, 43, 48], "parser": [2, 43, 52], "parser_funct": [2, 43, 50], "process_param": [2, 43, 50], "single_pars": [2, 43, 50], "check_if_single_phas": [2, 43, 51], "model_runner_fn": [2, 43, 51], "parallel_eda_cal": [2, 43, 51], "run_job": [2, 43, 51], "runner_fn": [2, 43, 51], "sub_job": [2, 43, 51], "categorical_feature_encod": [3, 4], "categorical_feature_encoding_panda": [3, 4], "counts_summari": [3, 4, 43, 47], "data_manipul": [3, 4], "drop_highly_correlated_featur": [3, 4], "drop_ignored_rowcol": [3, 4], "drop_invari": [3, 4], "feature_engin": [3, 4], "feature_remov": [3, 4], "graph_selector": [3, 4], "identify_feature_typ": [3, 4], "instance_remov": [3, 4], "join": [3, 4, 51], "label_encod": [3, 4], "make_log_fold": [3, 4], "run_process": [3, 4], "save_runtim": [3, 4, 7, 8, 9, 10, 13, 28, 29, 32], "second_eda": [3, 4], "start": [3, 4, 39, 51, 52, 53, 55, 60, 62], "test_selector": [3, 4], "univariate_analysi": [3, 4], "univariate_plot": [3, 4, 36, 60], "cv_partition": [3, 6], "save_dataset": [3, 6], "class": [4, 6, 8, 9, 11, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 38, 39, 40, 41, 42, 45, 47, 49, 54, 55, 58, 59, 60, 61, 62], "experiment_path": [4, 6, 8, 29, 30, 35, 38, 41, 47], "ignore_featur": [4, 31, 36, 47, 60, 62], "categorical_featur": [4, 36], "quantitative_featur": [4, 36], "exclude_eda_output": [4, 36], "categorical_cutoff": [4, 31, 36, 53, 61, 62], "10": [4, 6, 31, 36, 39, 53, 60, 61, 63], "sig_cutoff": [4, 29, 31, 32, 35, 36, 42, 59, 61], "05": [4, 29, 31, 32, 35, 36, 42, 58, 60], "featureeng_missing": [4, 36, 54, 59, 61], "5": [4, 32, 36, 44, 52, 53, 58, 59, 63], "cleaning_missing": [4, 36, 54, 59, 61], "correlation_removal_threshold": [4, 36, 54, 59, 61], "partition_method": [4, 6, 36, 61], "stratifi": [4, 6, 36, 60, 61], "n_split": [4, 6, 9, 36, 60, 62], "show_plot": [4, 9, 29, 31, 32, 35, 36, 38, 40, 42, 47], "fals": [4, 6, 9, 13, 29, 31, 32, 35, 36, 38, 39, 40, 41, 42, 47, 48, 53, 54, 59, 60, 61, 62, 63], "sourc": [4, 6, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53], "eda": [4, 36, 43, 47, 51, 54, 59, 60, 62], "function": [4, 9, 11, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 47, 51, 53, 54, 58, 59, 60], "defin": [4, 54, 58], "text": [4, 6, 36, 54, 55, 59, 60, 62], "log": [4, 6, 9, 47, 52, 58, 59], "directori": [4, 6, 32, 35, 36, 39, 40, 41, 42, 45, 52, 56, 58, 62], "list": [4, 6, 9, 13, 30, 32, 35, 36, 39, 41, 42, 47, 48, 51, 54, 56, 59, 60, 61, 62], "string": [4, 15, 30, 36, 60, 62], "column": [4, 6, 36, 40, 47, 53, 59, 60, 61, 62], "name": [4, 6, 8, 9, 11, 14, 32, 35, 36, 38, 39, 40, 41, 42, 45, 47, 53, 54, 58, 59, 60, 61, 62], "csv": [4, 6, 9, 32, 36, 47, 53, 54, 60, 61, 62], "label": [4, 6, 8, 9, 11, 13, 36, 40, 41, 47, 48, 60, 61, 62], "treat": [4, 36, 53, 54, 59, 60, 61, 62], "where": [4, 36, 54, 56, 59, 60, 61, 62, 63], "possibl": [4, 36, 40, 42, 53, 54, 55, 60, 61, 62, 63], "uniqu": [4, 36, 47, 53, 59, 60, 61, 62, 63], "variabl": [4, 36, 47, 53, 54, 58, 60], "quantit": [4, 36, 47, 53, 54, 59, 60, 61, 62], "v": [4, 9, 36, 47, 53, 54, 59, 60, 61], "do": [4, 39, 52, 53, 54, 56, 59, 60, 62, 63], "must": [4, 6, 36, 40, 41, 52, 53, 60, 61, 62], "cut": 4, "off": [4, 58, 60, 61, 62, 63], "signific": [4, 29, 32, 35, 36, 42, 54, 58, 60, 61, 63], "cutoff": [4, 35, 36, 42, 59, 60], "continu": [4, 54, 56, 58, 60], "proport": [4, 36, 53, 60, 61], "abov": [4, 36, 52, 53, 56, 58, 59, 60, 61, 62, 63], "pearson": [4, 36, 47, 59, 60, 61], "randomli": [4, 36, 53, 54, 60, 61], "state": [4, 60, 61], "seed": [4, 6, 36, 38, 54, 60], "reproduc": [4, 6, 36, 38, 54, 58, 61, 62], "sklearn": [4, 58], "onehot": 4, "get_dummi": 4, "total_miss": [4, 47], "true": [4, 6, 8, 9, 30, 31, 32, 34, 36, 38, 39, 40, 41, 42, 44, 45, 47, 48, 53, 54, 56, 60, 61, 62, 63], "variou": [4, 47, 53], "count": [4, 9, 47, 54, 59, 61, 62], "total": [4, 32, 47, 53, 60, 61, 62, 63], "bar": [4, 32, 47, 59, 60, 61], "graph": [4, 47], "again": [4, 47, 60], "flag": [4, 6, 9, 35, 36, 42, 47, 60, 62], "return": [4, 6, 8, 9, 11, 13, 14, 38, 47, 48, 58, 62], "wrapper": [4, 60, 61], "manipul": [4, 61], "ignored_featur": 4, "drop": [4, 47, 60, 62], "invari": [4, 53, 54, 61], "found": [4, 32, 53, 54, 56, 58, 59, 60, 61, 62], "minimum": 4, "mean": [4, 32, 54, 59, 60, 61, 63], "50": [4, 60], "correspond": 4, "insert": 4, "miss_": 4, "originalfeaturenam": [4, 59], "construct": 4, "self": [4, 58], "engineered_featur": 4, "build": [4, 52, 61], "similar": [4, 53, 59, 60, 61, 62], "feature_nam": [4, 11], "barplot": [4, 9, 59, 60, 61], "boxplot": [4, 29, 32, 58, 59, 60, 61], "x_data": [4, 47], "datafram": [4, 6, 47], "independ": [4, 53, 57, 59, 61], "greater": [4, 9, 53, 54, 60, 61], "percentag": 4, "numer": [4, 36, 53, 54, 59, 60, 63], "other": [4, 29, 32, 36, 38, 53, 54, 55, 56, 58, 59, 61, 62], "instanceid": [4, 60, 62], "should": [4, 36, 53, 56, 58, 60, 61, 62, 63], "so": [4, 9, 32, 52, 53, 54, 58, 61], "check": [4, 36, 52, 54, 55, 59], "alphabet": [4, 53, 54, 58, 59], "call": [4, 29, 30, 61, 62], "numerical_encoding_map": [4, 54, 59], "row": [4, 36, 53, 60], "subsequ": [4, 60, 61, 62], "map": [4, 54, 59], "top_featur": [4, 9, 32, 36, 38, 42], "20": [4, 9, 36, 60], "run_explor": 4, "top": [4, 9, 32, 38, 42, 52, 54, 59, 60, 61], "accordingli": [4, 54, 62], "export": [4, 9, 13, 32, 38, 39, 40, 47, 60], "appropri": [4, 53, 54, 56], "p": [4, 54, 59, 61], "calcul": [4, 47, 48, 54, 61], "chi": [4, 59, 61], "squar": [4, 54, 59, 61], "mann": [4, 29, 32, 59, 61], "whitnei": [4, 29, 32, 59, 61], "show": [4, 9, 32, 35, 42, 47, 54, 58], "sorted_p_list": 4, "whether": [4, 41, 60, 61, 62], "less": [4, 39, 61], "equal": [4, 32, 59, 61], "sort": [4, 8, 9, 54], "kfold": 6, "crossvalid": 6, "group": [6, 36, 47, 53, 54, 60, 61, 62, 63], "split": [6, 9, 36, 38, 39, 61], "fold": [6, 53, 54, 59, 60, 62], "cross": [6, 8, 9, 36, 38, 39, 47, 59, 60, 62], "valid": [6, 8, 9, 36, 38, 39, 47, 59, 60, 62], "return_df": 6, "save_df": 6, "frame": [6, 60], "match": [6, 36, 40, 47, 53, 60, 61, 62], "empti": [6, 36, 59], "overrid": [6, 39, 53, 60], "train_df": 6, "test_df": 6, "both": [6, 8, 36, 54, 56, 59, 60, 61, 62, 63], "pickle_scor": [7, 8], "prepare_data": [7, 8], "run_multi_surf": [7, 8], "run_mutual_inform": [7, 8], "sort_save_fi_scor": [7, 8], "gen_filtered_dataset": [7, 9], "report_ave_f": [7, 9], "report_informative_featur": [7, 9], "select_featur": [7, 9], "cv_train_path": [8, 38], "class_label": [8, 9, 13, 15, 29, 31, 32, 35, 36, 38, 39, 40, 42, 47, 53, 62], "instance_label": [8, 9, 13, 15, 29, 31, 32, 35, 36, 38, 39, 40, 42, 47, 53, 62], "instance_subset": [8, 38, 61, 63], "2000": [8, 9, 38, 39, 58, 60, 61, 63], "use_turf": [8, 38, 61, 63], "turf_pct": [8, 38, 61, 63], "n_job": [8, 11, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 38, 39, 58], "output_nam": 8, "score": [8, 9, 13, 15, 29, 32, 38, 39, 48, 54, 59, 60, 61], "score_dict": 8, "score_sorted_featur": 8, "dictionari": [8, 9], "load": [8, 9, 13, 32, 47, 53, 54, 61, 62], "separ": [8, 13, 29, 32, 36, 53, 54, 59, 60, 61, 62], "relief": 8, "detect": [8, 54, 60, 61], "param": [8, 9, 11, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 38, 39, 45, 50, 51, 58], "ordered_feature_nam": 8, "alg_nam": 8, "decreas": [8, 61], "full_path": [9, 13, 31, 32, 38, 39, 42], "export_scor": [9, 38], "max_features_to_keep": [9, 38, 61, 63], "filter_poor_featur": [9, 15, 38, 61, 63], "overwrite_cv": [9, 38, 59, 61], "maximum": [9, 11, 30, 32, 39, 60, 61, 63], "keep": [9, 38, 47, 53, 54, 60, 61, 62, 63], "poor": [9, 53], "overwrit": [9, 38, 60, 61, 62], "last": [9, 38, 39, 53, 61], "cv_selected_list": 9, "path_to_csv": 9, "dataset_nam": [9, 15], "final": [9, 45, 52, 54, 59, 60, 61], "kept": [9, 58, 59, 61], "renam": [9, 62], "old": [9, 54, 60, 61, 62], "algorithmlabel": 9, "selected_feature_list": 9, "meta_feature_rank": 9, "evid": [9, 56], "storag": [9, 60], "informative_feature_count": 9, "uninformative_feature_count": 9, "uninform": [9, 59, 61], "full": [9, 54, 59, 61, 62], "more": [9, 31, 32, 36, 53, 54, 55, 56, 59, 60, 61, 62, 63], "union": 9, "preserv": [9, 45, 60], "reduc": [9, 45, 61, 62], "altern": [9, 53, 54, 60, 61, 62], "grab": 9, "until": [9, 39, 60, 61, 62], "reach": [9, 54, 60, 61], "fpr": [9, 13], "feature_import": [10, 11], "fit": [10, 11], "hyper_ev": [10, 11, 58], "model_evalu": [10, 11, 60], "data_prep": [10, 13], "export_best_param": [10, 13], "run_model": [10, 13], "model_nam": [11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 58], "cv_fold": [11, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 58], "scoring_metr": [11, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 32, 39, 42, 58], "balanced_accuraci": [11, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 32, 39, 42, 58, 60], "metric_direct": [11, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 39, 58, 61], "maxim": [11, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 39, 58, 60, 61], "sampler": [11, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], "unimpl": [11, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], "stub": [11, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], "x_train": 11, "y_train": 11, "n_trail": 11, "caller": 11, "hyper": [11, 39, 54, 58, 60], "eval": 11, "x_test": [11, 31], "y_test": [11, 31], "gather": [11, 54, 60, 61], "trial": [11, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 39, 54, 58, 60, 61], "overridden": [11, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 62], "dict": [11, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], "common": [11, 53, 55, 56, 61, 62], "header": [11, 36, 47, 53, 60, 62], "x_in": 11, "input": [11, 59, 62], "y_pred": [11, 48], "output_path": [13, 15, 29, 30, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 59, 62], "experiment_nam": [13, 15, 29, 30, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 59, 62], "cv_count": [13, 31, 39], "n_trial": [13, 39, 61, 63], "200": [13, 39, 60], "900": [13, 39, 60], "training_subsampl": [13, 39, 61, 63], "uniform_fi": 13, "save_plot": [13, 39], "static": [13, 32, 45], "file_nam": 13, "param_grid": [13, 58], "metric_list": 13, "tpr": [13, 32], "roc_auc": [13, 42, 54, 60], "prec": [13, 32], "recal": [13, 48, 59, 61], "prec_rec_auc": 13, "ave_prec": 13, "fi": [13, 15, 32, 38, 42, 54, 60, 62], "proba": 13, "algorithm_nam": 14, "get": [14, 15, 32, 47, 54, 56, 58], "grid": 14, "mi": [15, 38, 60, 61], "subset": [15, 38, 59, 60, 61, 62, 63], "here": [15, 32, 53, 54, 55, 56, 58, 60, 61, 62, 63], "color": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 53, 54, 58], "small_nam": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 58], "abc": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 58], "red": [17, 52, 53], "yellow": 18, "aquamarin": [19, 58], "purpl": 20, "magenta": 21, "categori": [21, 53, 60], "cornflowerblu": 21, "pink": 21, "light": [21, 60, 62], "cyan": 21, "extrem": 21, "iter": [22, 39, 60, 61, 63], "nu": [22, 39, 60, 61, 63], "expert_knowledg": 22, "lawngreen": 22, "oliv": 22, "green": 22, "dimgrei": 23, "silver": 24, "chocol": 25, "knn": [25, 39, 60, 63], "blue": 26, "orang": 27, "best_kruscall_w": [28, 29], "best_mann_whitney_u": [28, 29], "best_wilcoxon_rank": [28, 29], "data_compare_bp": [28, 29], "data_compare_bp_al": [28, 29], "inter_set_best_fn": [28, 29], "inter_set_fn": [28, 29], "kruscall_w": [28, 29], "mann_whitney_u": [28, 29, 32], "temp_summari": [28, 29], "wilcoxon_rank": [28, 29, 32], "footer": [28, 30], "format_fn": [28, 30], "pub_model_mean_stat": [28, 30], "pub_model_median_stat": [28, 30], "pub_runtim": [28, 30], "pub_univari": [28, 30], "eval_model": [28, 31], "impute_rep_data": [28, 31], "scale_rep_data": [28, 31], "composite_fi_plot": [28, 32], "do_fi_boxplot": [28, 32], "do_fi_histogram": [28, 32], "do_model_prc": [28, 32], "do_model_roc": [28, 32], "do_plot_prc": [28, 32], "do_plot_roc": [28, 32], "fi_stat": [28, 32, 54], "frac_fi": [28, 32], "get_fi_to_viz_sort": [28, 32], "kruskal_w": [28, 32], "metric_boxplot": [28, 32], "parse_runtim": [28, 32], "prep_fi": [28, 32], "prepar": [28, 32, 47, 61], "primary_stat": [28, 32], "save_fi": [28, 32], "save_metric_stat": [28, 32], "select_for_composite_viz": [28, 32], "weight_fi": [28, 32], "weight_frac_fi": [28, 32], "script": [29, 30, 31, 32, 36, 40, 45, 52, 54, 56, 62], "datacomparemain": 29, "py": [29, 30, 36, 54, 58, 62], "onc": [29, 30, 31, 52, 54, 59, 60, 61, 63], "entir": [29, 32, 36, 53, 61], "kruskal": [29, 32, 59, 61], "walli": [29, 32, 59, 61], "anova": [29, 32], "global_data": 29, "u": [29, 32, 52, 54, 59, 61], "pairwis": [29, 32, 61], "zero": [29, 32, 61], "fn": [29, 48, 58], "complet": [29, 32, 39, 54, 55, 56, 58, 59, 60, 61], "set1": 29, "set2": 29, "y": [29, 62], "wilcoxon": [29, 32, 59, 61], "sum": [29, 32, 59], "data_path": [30, 32, 36, 60, 62], "rep_data_path": [30, 31, 40, 41, 44, 61, 62], "load_algo": [30, 40], "pdf_reportmain": 30, "whole": [30, 54, 61, 62], "stats_d": 30, "best_metric_list": 30, "metric_name_list": 30, "ds2": 30, "result_limit": 30, "page_count": 30, "singl": [30, 32, 54, 56, 59, 60, 61, 62], "move": [30, 54], "anoth": [30, 53, 60], "space": [30, 35, 36, 39, 40, 41, 42, 45, 60, 61, 62, 63], "convert": [30, 54], "list1": 30, "find": [30, 56, 59, 61, 62], "greatest": 30, "integ": [30, 39, 58, 60], "dataset_filenam": [31, 40], "dataset_for_rep": [31, 40, 41, 44, 61, 62], "match_label": [31, 36, 40, 47, 53, 61, 62], "cv_partit": [31, 32, 61, 63], "exclude_plot": [31, 32, 40, 42, 61], "scale_data": [31, 32, 42, 53, 61], "impute_data": [31, 54, 61, 63], "multi_imput": [31, 61, 63], "previous": [31, 54, 58, 59, 60, 61, 62], "unseen": [31, 54], "doe": [31, 36, 53, 54, 55, 56, 60, 61, 62], "deal": 31, "cv_rep_data": 31, "all_train_feature_list": 31, "cat_featur": 31, "quant_featur": 31, "40": [32, 38, 42, 60], "metric_weight": [32, 42, 59, 61], "deviat": [32, 54, 59, 61], "roc": [32, 58, 59, 60, 61], "prc": [32, 36, 40, 53, 58, 59, 60, 61], "composit": [32, 42, 54, 58, 59, 60, 61], "stat": [32, 60, 62], "fi_list": 32, "all_feature_list_to_viz": 32, "fig_nam": 32, "y_label_text": 32, "metric_rank": 32, "transform": [32, 61], "fi_df_list": 32, "fi_med_list": 32, "histogram": [32, 47, 59, 61], "distribut": [32, 59], "median": [32, 54, 59, 60, 61], "prauc": 32, "mean_recal": 32, "alg_result_t": 32, "rep_data": 32, "auc": [32, 59], "mean_fpr": 32, "result_t": 32, "metric_dict": 32, "top_fi_med_norm_list": 32, "fracion": 32, "area": [32, 61], "everi": [32, 53, 59, 61], "intuit": [32, 53], "won": 32, "overli": 32, "repres": [32, 53, 59, 61], "lead": [32, 36, 54, 60, 63], "impress": 32, "real": 32, "estat": 32, "divid": [32, 57], "potenti": [32, 36, 55, 60, 61, 63], "alter": 32, "height": 32, "features_to_viz": 32, "all_feature_list": 32, "fi_med_norm_list": 32, "visualis": 32, "index": [32, 52], "weight": [32, 42, 54, 59, 60, 61, 62], "becaus": [32, 59, 60, 61], "perfectli": [32, 60, 61], "kruskal_summari": 32, "pars": 32, "decod": 32, "master_list": 32, "combin": [32, 54, 59, 61], "fi_al": 32, "global_feature_list": 32, "std": 32, "dev": [32, 52], "non_zero_union_featur": 32, "non_zero_union_index": 32, "ave_metric_list": 32, "fi_ave_norm_list": 32, "chosen": [32, 60], "frac": 32, "plai": 32, "role": [32, 62], "viz": 32, "fewer": [32, 60, 61, 63], "top_model_featur": 32, "balanc": [32, 48, 54, 58, 59, 60, 61], "accuraci": [32, 48, 54, 60, 61, 63], "med_metric_list": 32, "place": [32, 54, 60, 61], "frac_list": 32, "fraction": 32, "sign": [32, 59], "get_cluster_param": [33, 35, 36, 38, 39, 40, 41, 42], "submit_lsf_cluster_job": [33, 35, 36, 38, 39, 40, 41, 42], "submit_slurm_cluster_job": [33, 35, 36, 38, 39, 40, 41, 42], "make_dir_tre": [33, 36], "save_metadata": [33, 36, 38, 39, 40, 42], "save_alginfo": [33, 39], "get_algorithm": [33, 40], "del_tim": [34, 45], "del_old_cv": [34, 45, 59], "run_parallel": [34, 35, 36, 38, 39, 40, 41, 42, 62], "run_clust": [35, 36, 38, 39, 40, 41, 42, 43, 49, 62], "queue": [35, 36, 38, 39, 40, 41, 42, 46], "defq": [35, 36, 38, 39, 40, 41, 42, 46, 60, 62], "reserved_memori": [35, 36, 38, 39, 40, 41, 42, 62], "collat": [35, 41, 42], "str": [35, 39, 41, 42, 60], "main": [36, 40, 45, 52, 56, 58], "manag": [36, 40, 52], "updat": [36, 55, 56, 59, 60, 61, 62], "metadata": [36, 59], "submit": [36, 40, 54, 56, 60, 62], "linux": [36, 54], "exploratoryanalysisjob": 36, "ipynb": [36, 53, 56, 58], "warn": [36, 54, 56, 60], "befor": [36, 53, 55, 58, 61, 62], "sure": [36, 52, 56, 60, 62], "desir": [36, 53, 56, 58, 62], "comma": [36, 53, 60], "txt": [36, 47, 52, 53, 54, 56, 59], "na": [36, 53, 60], "accept": [36, 52, 60], "critic": 36, "filenam": [36, 54, 59, 62], "invalid": [36, 54], "liter": 36, "export_exploratory_analysi": 36, "present": [36, 53, 54, 55, 60, 61], "describe_csv": 36, "correlation_plot": [36, 60], "id": [36, 40, 53, 60, 61, 62], "throughout": [36, 54, 60, 61], "reserv": [36, 52, 60, 62], "dataset_path": [36, 42, 47, 59], "exist": [36, 52, 53, 54, 56, 60, 62], "alreadi": [36, 56, 59, 60, 62], "Then": [36, 60, 61, 62], "hierarchi": [36, 54], "worst": 38, "illustr": [38, 42, 59, 60, 61], "multiprocess": [38, 62], "n_dataset": 38, "use_uniform_fi": [39, 61, 63], "do_lcs_sweep": [39, 61, 63], "lcs_nu": [39, 61], "lcs_n": [39, 61], "lcs_iter": [39, 61], "200000": [39, 60, 63], "lcs_timeout": [39, 61], "1200": [39, 60], "resubmit": [39, 60], "primari": [39, 61], "permut": [39, 60, 61], "minim": [39, 60, 61, 62], "algo": 39, "subsampl": [39, 60], "permutation_import": 39, "uniformli": [39, 60], "bayesian": [39, 61], "stop": [39, 60], "finish": 39, "sec": 39, "minut": [39, 60, 61, 62], "tune": 39, "nois": [39, 53, 54, 60, 61, 63], "popul": [39, 54, 60, 61], "size": [39, 54, 59, 60, 61, 62], "9": [40, 53, 55, 59], "export_feature_correl": [40, 63], "yield": [40, 54, 55, 60, 61, 63], "heatmap": [40, 47, 54, 58, 59, 60, 61], "plot_roc": [40, 60, 63], "curv": [40, 59, 61], "plot_prc": [40, 60, 63], "plot_metric_boxplot": [40, 60, 63], "box": [40, 56, 59, 61], "followup": 41, "applic": [41, 54, 55, 60, 62], "primary_metr": [42, 61], "len_cv": 42, "rm_tree": [43, 45], "clean_data": [43, 47], "describe_data": [43, 47], "feature_correl": [43, 47, 60], "feature_only_data": [43, 47], "get_head": [43, 47], "get_outcom": [43, 47], "initial_eda": [43, 47], "load_data": [43, 47], "missing_count_plot": [43, 47], "missingness_count": [43, 47], "non_feature_data": [43, 47], "set_original_head": [43, 47], "set_processed_head": [43, 47], "len_onli": 44, "delet": [45, 59, 60, 62], "temporari": [45, 61, 62], "necessari": [45, 52, 61, 62], "serv": [45, 60], "conveni": [45, 59, 60, 61, 62], "clutter": 45, "overwritten": [45, 61], "cluster_typ": 46, "slurm": [46, 56, 60, 62], "tsv": [47, 53], "co": 47, "variat": [47, 58], "realli": 47, "learner": 47, "trace": 47, "back": [47, 52, 54, 62], "heterogen": [47, 60, 61, 63], "subgroup": [47, 60], "type": [47, 54, 56, 58, 59, 60, 61, 62], "int64": 47, "float64": 47, "via": [47, 52, 54, 61], "expens": [47, 60, 61, 63], "unless": [47, 54, 60, 61], "difficult": 47, "read": 47, "form": [47, 58, 60, 61], "y_data": 47, "refer": [47, 54, 61], "y_true": 48, "precis": [48, 59, 61], "f1": [48, 60, 61], "likelihood": [48, 56], "ratio": [48, 61], "bac": 48, "ac": 48, "sp": 48, "pr": [48, 52], "tp": [48, 58], "tn": [48, 58], "fp": [48, 58], "npv": 48, "lrp": 48, "lrm": 48, "argv": 50, "mode_param": 50, "config_dict": 50, "eda_job": 51, "job_list": 51, "welcom": [52, 54, 55], "issu": [52, 55, 62], "bug": [52, 54, 55], "enhanc": 52, "idea": [52, 55], "extens": [52, 62], "streamlin": [52, 54, 56, 57, 60, 61, 63], "email": 52, "csh": [52, 55], "org": [52, 55, 60], "discuss": [52, 55, 62], "latest": [52, 54], "branch": [52, 54, 56], "wherea": 52, "legaci": [52, 54, 60, 62], "look": [52, 53, 54, 61, 62], "correct": [52, 60, 61], "term": 52, "structur": [52, 53], "doc": 52, "unit": [52, 61], "familiar": 52, "yourself": 52, "major": 52, "fork": 52, "click": [52, 56, 59, 62], "button": 52, "copi": [52, 59, 61, 62], "under": [52, 54, 60, 61, 62, 63], "server": 52, "clone": [52, 56], "disk": [52, 60, 62], "git": 52, "yourlogin": 52, "cd": [52, 56], "checkout": 52, "b": [52, 62], "my": 52, "correctli": [52, 53, 54, 56, 58, 60], "instal": [52, 54, 55, 62], "instruct": [52, 53, 54, 56, 59, 62], "almost": [52, 54, 60], "ident": [52, 61], "pip": [52, 56], "requir": [52, 54, 55, 56, 59, 60, 61, 62], "newli": [52, 59, 60], "rememb": 52, "never": 52, "tweak": 52, "haven": 52, "broken": 52, "ve": [52, 54, 62], "pass": [52, 60, 62, 63], "pytest": 52, "cli": 52, "level": [52, 59, 60], "info": [52, 58, 60], "edit": [52, 56, 59, 62], "modified_fil": 52, "commit": [52, 62], "messag": 52, "record": 52, "push": 52, "go": [52, 58, 60, 62], "web": [52, 56, 62], "repo": 52, "send": [52, 60], "maintain": [52, 61], "stabl": [52, 54, 56, 60, 61], "ci": 52, "through": [52, 54, 56, 58, 59, 61, 62], "checklist": 52, "everyth": [52, 61], "reflect": [52, 53, 54, 61], "readm": [52, 54], "anyth": [52, 62], "properli": [52, 54, 56, 60], "comment": [52, 54, 62], "docstr": 52, "explain": [52, 54, 59, 61, 62], "rational": 52, "behind": 52, "obviou": 52, "librari": [52, 55], "depend": [52, 53, 59, 60, 61, 62], "doubl": [52, 61], "sphinx": 52, "write": 52, "markdown": [52, 59], "compil": 52, "html": [52, 58, 60], "few": 52, "tip": [52, 60, 62, 63], "sphinx_rtd_them": 52, "myst": 52, "rest": 52, "toctre": 52, "rst": 52, "fresh": 52, "alwai": [52, 53, 54, 56, 60, 61], "deploi": 52, "shortli": 52, "error": [52, 54, 56, 59, 60, 62, 63], "tab": [53, 62], "delimit": 53, "sampl": [53, 59, 60, 61, 63], "left": [53, 59, 62], "blank": [53, 62], "nan": [53, 54], "leav": [53, 60, 61, 62], "placehold": 53, "99": 53, "matter": 53, "togeth": [53, 57, 60], "stratif": 53, "soon": 53, "quanti": [53, 60], "match_id": 53, "strongli": [53, 60, 61, 62, 63], "encourag": [53, 60, 61], "quantitative_feature_path": [53, 54, 61], "categorical_feature_path": [53, 54, 61], "assign": [53, 59, 60, 62], "quanat": 53, "entri": [53, 61, 62], "awar": [53, 62], "commonli": [53, 62], "observ": [53, 60, 61], "concern": 53, "imagin": 53, "hypothet": 53, "hair": 53, "datset": [53, 59], "black": 53, "blond": 53, "grei": 53, "ocurr": 53, "exactli": 53, "mode": [53, 54, 56, 60, 61], "impact": [53, 58, 63], "accur": [53, 60, 61], "interest": 53, "addition": [53, 56, 59, 62], "postit": [53, 61], "ones": [53, 60, 61], "recommmend": 53, "conclus": 53, "distanc": 53, "known": [53, 61], "sinc": [53, 54, 56, 59, 60, 61, 63], "quanatit": 53, "seem": [53, 60, 62], "answer": 53, "survei": 53, "question": [53, 55], "disagre": 53, "weakli": 53, "neutral": 53, "agre": 53, "These": [53, 56, 59, 60, 61, 62, 63], "break": [53, 60], "assumpt": [53, 61], "made": [53, 60, 63], "sick": 53, "avoid": [53, 54, 56, 60, 61, 62, 63], "missinterpret": 53, "ahead": [53, 61], "labl": 53, "Of": [53, 61], "anomol": 53, "qualiti": [53, 60], "extream": [53, 60], "judgement": 53, "replac": [53, 54, 61], "imposs": [53, 61], "ag": [53, 60, 61], "235": 53, "raw": 53, "unstructur": [53, 55], "video": [53, 55, 60], "tradition": 53, "good": [53, 60], "about": [53, 60, 61, 62], "coupl": [53, 62], "date": [53, 56], "drug": 53, "treatment": 53, "durat": [53, 62], "turn": [53, 54, 58, 60, 61, 62, 63], "quick": [53, 56], "demodata": [53, 60, 62], "demorepdata": [53, 60, 62], "whatev": [53, 62], "demo": [53, 54, 58, 59, 61], "hcc_data": [53, 54, 59], "task": [53, 60, 61, 62], "hepatocellular": 53, "carcinoma": 53, "taken": 53, "uci": 53, "165": 53, "49": 53, "mix": [53, 54], "imbal": [53, 59, 61], "63": 53, "deceas": 53, "102": 53, "surviv": 53, "hcc_data_custom": [53, 54, 59, 60, 62], "modif": [53, 62], "covari": [53, 60, 61], "gender": 53, "diagnosi": 53, "three": [53, 59, 61, 62], "quanati": [53, 60, 62], "6": [53, 59], "clearli": [53, 54], "hcc_data_custom_rep": [53, 54, 59], "mock": 53, "took": 53, "realist": 53, "yet": [53, 54, 60, 61, 62, 63], "happen": [53, 56, 61], "generate_expanded_hcc_dataset": [53, 54], "past": 54, "displai": [54, 59], "edg": 54, "c2": 54, "similarli": [54, 61, 62], "simplifi": 54, "handl": [54, 55, 60, 61, 63], "now": [54, 56, 60, 61], "point": [54, 60, 62], "without": [54, 60, 61, 62, 63], "argument": [54, 60], "passag": 54, "wait": [54, 62], "statu": [54, 62], "document": [54, 55, 56, 58, 59, 60, 62], "special": [54, 55], "occur": [54, 61], "legend": [54, 58], "dask_jobqueu": [54, 56], "round": 54, "after": [54, 56, 58, 59, 60, 61, 62], "mnar": [54, 61], "along": [54, 60, 61, 62], "missingness_engineered_featur": [54, 59], "missingness_feature_clean": [54, 59], "correlation_feature_clean": [54, 59], "dataprocesssummari": [54, 59], "secondari": [54, 60, 61], "had": [54, 59, 60, 61], "commandlin": 54, "modular": 54, "rel": 54, "streamin": [54, 56, 61], "templat": 54, "savi": [54, 58], "16th": 54, "download": [54, 55, 56, 59, 62], "manual": [54, 60, 61], "prompt": [54, 60, 62], "essenti": [54, 56, 62], "window": [54, 62], "open": [54, 56, 59, 62], "screen": [54, 56], "permiss": [54, 62], "revert": 54, "rather": [54, 58, 60, 62], "prevent": [54, 56, 62], "confus": [54, 58, 61], "elimin": 54, "hard": [54, 58, 61], "outputfil": [54, 62], "scheme": 54, "clariti": 54, "redund": [54, 60], "triangl": 54, "overlap": 54, "unread": 54, "featurecorrel": [54, 59], "reformat": 54, "bottom": 54, "simul": 54, "explicitli": [54, 56, 60], "custom": [54, 58, 61], "catch": 54, "situat": [54, 60, 63], "datacomparejob": 54, "loop": 54, "fail": [54, 60, 62, 63], "At": [54, 55, 59, 61, 62], "collabor": [54, 55], "switch": [54, 62], "confirm": [54, 56, 61, 62], "fulli": [54, 60], "feedback": [54, 55], "certain": [54, 60, 61, 63], "enforc": 54, "linger": 54, "guarante": 54, "decim": 54, "float": [54, 60], "beyond": [54, 59, 61], "colleagu": 54, "platform": 54, "unforeseen": 54, "let": [54, 62], "encount": 54, "ey": 54, "upcom": 54, "month": 54, "newest": 54, "whenev": 54, "much": [54, 60, 61, 63], "softwar": [54, 55, 60, 61], "investig": 54, "research": [54, 55, 56, 57, 60, 61, 62, 63], "ask": [54, 62], "assist": 54, "hope": 54, "tool": [54, 55], "regard": 54, "depreci": 54, "interp": 54, "numpi": 54, "bulk": [54, 55], "underli": [54, 59, 62], "inherit": 54, "automlpip": 54, "bc": 54, "mac": 54, "devic": 54, "repair": 54, "intention": 54, "inher": 54, "like": [54, 55, 56, 60, 62, 63], "aw": 54, "azur": 54, "docker": 54, "multiclass": 54, "endpoint": 54, "shaplei": 54, "smarter": 54, "seen": 54, "benefit": [54, 55, 62], "cycl": 54, "slow": [54, 61], "down": [54, 60], "gain": [54, 55], "refin": 54, "flexibl": 54, "automl": 55, "empow": 55, "customiz": [55, 62], "deeper": [55, 59], "highlight": [55, 61], "differenti": 55, "extract": [55, 59], "advanc": [55, 61], "expertis": 55, "its": [55, 62], "activ": [55, 60], "receiv": 55, "claim": 55, "viabl": [55, 60], "nor": 55, "expans": 55, "improv": [55, 59, 61, 62], "suggest": [55, 58, 61], "univers": 55, "pennsylvania": 55, "fox": 55, "chase": 55, "cedar": [55, 62], "sinai": 55, "kansa": 55, "thank": 55, "patryk": 55, "orzechowski": 55, "trang": 55, "le": 55, "wilson": 55, "pedro": 55, "ribeiro": 55, "14aefq5hupihm9jb2g730fu3liq15hhj2": [56, 62], "usp": [56, 62], "share": [56, 62], "noteook": 56, "anaconda3": [56, 62], "python3": [56, 62], "conda": 56, "downstream": [56, 60, 61], "nativ": 56, "recomend": 56, "resolut": 56, "especi": 56, "maco": 56, "root": [56, 62], "relat": [56, 61], "retri": 56, "extra": 56, "setup": 56, "home": 56, "ll": 56, "lsf": [56, 60, 62], "pb": [56, 60, 62], "oar": [56, 60, 62], "moab": [56, 60, 62], "sge": [56, 60, 62], "htcondor": [56, 60, 62], "help": [56, 60, 61], "big": [56, 62], "tmux": 56, "nano": 56, "vim": 56, "achiev": [56, 60, 62, 63], "head": [56, 62], "node": [56, 62], "submiss": [56, 59, 60, 62], "monitor": [56, 62], "typic": [56, 60, 61, 62, 63], "interupt": 56, "sever": [56, 62], "pseudo": 56, "decoupl": 56, "protect": [56, 62], "accident": 56, "disconnect": [56, 62], "detach": [56, 62], "login": 56, "safe": [56, 61], "background": [56, 62], "reattach": [56, 62], "connect": 56, "remot": [56, 62], "secur": 56, "shell": [56, 62], "ssh": [56, 62], "upgrad": 56, "lightgbm": 56, "pypi": 56, "doesn": [56, 62], "solv": [56, 60], "c": [56, 60, 62], "forg": 56, "skrebat": 56, "architectur": 57, "api": [57, 58], "complement": 57, "subpackag": 57, "thing": 58, "usefulnotebook": 58, "overview": [58, 59], "impor": [58, 60], "decisionthreshold_interact": 58, "matrix": 58, "decisionthreshold_testev": 58, "decisionthreshold_trainev": 58, "genplots_compositefi": 58, "genplots_fi_heatmap": 58, "genplots_roc_prc": 58, "insid": 58, "upper": 58, "right": [58, 62], "modelviz_dt_gp": 58, "predictionprobs_repl": 58, "predictionprobs_test_evalmetricaccess": 58, "ran": 58, "adjust": [58, 60, 61, 62], "stongli": 58, "wrap": 58, "warp": 58, "deriv": 58, "sgdclassifi": 58, "sgd": 58, "def": 58, "__init__": 58, "super": 58, "penalti": 58, "elasticnet": 58, "loss": [58, 61], "log_loss": 58, "modified_hub": 58, "alpha": 58, "04": 58, "max_it": 58, "1000": 58, "l1_ratio": 58, "001": 58, "class_weight": 58, "suggest_categor": 58, "suggest_float": 58, "suggest_int": 58, "mean_cv_scor": 58, "dynam": 58, "arbitrarili": 58, "init": 58, "written": 58, "proper": 58, "discret": 58, "linear": 58, "cover": 59, "inspect": 59, "cell": [59, 60, 62], "collaps": 59, "arrowhead": 59, "side": [59, 62], "direclti": 59, "plu": 59, "notif": 59, "mention": [59, 62], "zip": [59, 62], "arrang": 59, "subdirectori": 59, "pane": 59, "content": [59, 60, 62], "demooutput": [59, 60, 62], "demo_experi": [59, 60, 62], "intermedi": 59, "univariate_analys": 59, "combo": 59, "pickledmodel": 59, "jobscomplet": 59, "notic": [59, 62], "conform": 59, "demo_experiment_ml_pipeline_report": 59, "simpler": 59, "demo_experiment_ml_pipeline_replication_report": 59, "irrelev": 59, "alginfo": 59, "begin": [59, 60, 61, 62], "abbrevi": 59, "d1": 59, "d2": 59, "varianc": [59, 61], "aka": [59, 61], "wicoxon": 59, "wise": [59, 60], "bestcompar": 59, "evalut": 59, "kruskalw": 59, "mannwhitnei": 59, "wilcoxonrank": 59, "datacompar": 59, "whisker": 59, "datacompareallmodel": 59, "overlaid": 59, "walk": 59, "remain": [59, 60, 61], "analyi": 59, "datanam": 59, "_cv_": 59, "_": 59, "undergon": [59, 61], "cvonli": 59, "cvpre": 59, "intermediari": [59, 60, 61], "saniti": 59, "classcountsbarplot": 59, "datamissingnesshistogram": 59, "frequenc": 59, "classcount": 59, "met": 59, "retain": [59, 60, 61], "datacount": 59, "datamissing": 59, "increment": 59, "describedataset": 59, "dtypesdataset": 59, "dtype": [59, 60, 61], "numuniquedataset": 59, "nuniqu": [59, 60, 61], "processed_categorical_featur": 59, "processed_quantitative_featur": 59, "processedfeaturenam": 59, "subfold": 59, "focus": [59, 60, 61], "univariate_signifi": 59, "informativefeaturesummari": 59, "topaveragescor": 59, "top_fi_featur": [59, 61], "parit": 59, "_roc": 59, "reciev": 59, "_prc": 59, "summary_roc": 59, "summary_prc": 59, "_perform": 59, "summary_performance_mean": 59, "summary_performance_median": 59, "summary_performance_std": 59, "compare_fi_norm": 59, "compare_fi_norm_weight": 59, "_boxplot": 59, "_histogram": 59, "_fi": 59, "boxplox": 59, "mannwhitneyu": 59, "upon": 59, "unpickl": 59, "unlabl": 59, "spent": [59, 60, 63], "accord": [60, 62], "guidanc": 60, "lastli": 60, "steamlin": 60, "distinguish": 60, "paramt": 60, "ocassion": 60, "incid": 60, "exp": [60, 62], "inst": [60, 62], "cf": [60, 62], "categorical_feature_head": [60, 62], "qf": [60, 62], "quantitiative_feature_head": [60, 62], "rep": [60, 62], "till": [60, 62], "dtr": 60, "feat": [60, 62], "imp": [60, 62], "sel": [60, 62], "cat": 60, "sig": 60, "rand": 60, "42": 60, "uni": 60, "feat_miss": 60, "clean_miss": 60, "corr_thresh": 60, "turf": [60, 61], "pct": 60, "sub": [60, 61], "uniformfi": 60, "There": 60, "del": [60, 62], "mem": [60, 62], "depth": [60, 61], "enter": [60, 62], "quotat": 60, "mark": 60, "cla": 60, "meet": 60, "lowest": 60, "short": 60, "revers": 60, "capabl": 60, "necessesari": 60, "matchid": 60, "sex": [60, 61], "race": [60, 61], "immedi": 60, "ignoredfeature1": 60, "ignoredfeature2": 60, "madeup": 60, "ignorefeat": 60, "leakag": [60, 61], "feature1": 60, "feature7": 60, "demofeaturetyp": [60, 62], "hcc_cat_feat": [60, 62], "quantiative_feature_path": 60, "theses": 60, "run_config": [60, 62], "cfg": [60, 62], "boolean": 60, "tell": [60, 62], "bool": 60, "int": 60, "smaller": [60, 61, 62, 63], "shorter": 60, "automatci": 60, "hasn": 60, "sometim": 60, "decid": [60, 61, 62], "consider": 60, "themselv": 60, "fine": 60, "obtain": 60, "ncar": 60, "safest": 60, "perfect": [60, 63], "neccessari": 60, "iterativeimput": 60, "slowli": [60, 61], "alot": [60, 61], "around": 60, "000": [60, 61, 63], "propot": 60, "dictat": 60, "iteract": 60, "nubmer": 60, "01": 60, "twice": 60, "half": 60, "low": [60, 63], "rescor": 60, "lower": [60, 63], "increas": [60, 61], "500": [60, 62], "trade": 60, "quadrat": [60, 61], "linearli": 60, "necessarili": [60, 61], "simpli": 60, "dedic": 60, "scorign": 60, "burden": 60, "judgment": 60, "hand": 60, "lbg": 60, "symbol": 60, "fairli": 60, "comprehens": [60, 61], "kn": 60, "otherwis": [60, 61, 63], "worri": 60, "permuat": 60, "prioriti": 60, "broader": 60, "forc": 60, "spend": [60, 63], "watch": 60, "higher": [60, 61], "pressur": [60, 61, 63], "overfit": [60, 63], "noisi": [60, 63], "100": [60, 63], "ideal": 60, "plot_fi_box": [60, 63], "weigh": 60, "lsfcluster": [60, 62], "slurmclust": [60, 62], "htcondorclust": [60, 62], "moabclust": [60, 62], "oarclust": [60, 62], "pbscluster": [60, 62], "sgeclust": [60, 62], "ug": [60, 62], "institut": [60, 62], "localclust": [60, 62], "slurmold": [60, 62], "lsfold": [60, 62], "hardwar": [60, 62], "gigabyt": 60, "consult": 60, "administr": [60, 62], "indiat": 60, "schedul": 60, "loggin": 60, "vari": [60, 61], "slightli": [60, 62], "demand": [60, 63], "amount": [60, 62, 63], "power": [60, 62, 63], "longest": [60, 63], "far": [60, 62, 63], "speed": [60, 63], "too": [60, 63], "enough": [60, 63], "speak": [60, 63], "opposit": [60, 63], "newer": [60, 63], "contrast": [60, 61, 63], "wide": [60, 63], "readabl": [60, 63], "IF": [60, 61, 63], "THEN": [60, 61, 63], "significantli": [60, 61, 63], "exponenti": [60, 63], "coeffici": [60, 63], "cannot": [60, 63], "dur": 61, "why": 61, "encapsul": 61, "terminologi": 61, "definit": 61, "minu": 61, "product": 61, "withheld": 61, "verifi": 61, "replicat": 61, "site": 61, "paralleliz": 61, "fast": 61, "orign": 61, "dimens": 61, "labelencod": 61, "afterward": 61, "chanc": 61, "aim": 61, "membership": 61, "epidemiolog": 61, "undergo": 61, "infer": 61, "guess": 61, "manufactur": 61, "evil": 61, "influenc": 61, "therefor": 61, "deactiv": 61, "standardscalar": 61, "hinder": 61, "drawback": 61, "un": 61, "context": 61, "do_mutual_info": 61, "do_multisurf": 61, "shown": 61, "largest": 61, "smallest": 61, "deem": 61, "retent": 61, "easier": 61, "heart": 61, "epistasi": 61, "slowest": [61, 62], "sped": 61, "14": 61, "built": 61, "experiment": 61, "implicit": 61, "explicit": 61, "solut": 61, "simplest": [61, 62], "wider": 61, "arrai": 61, "complementari": 61, "strength": 61, "weak": 61, "famili": 61, "sought": 61, "retrain": 61, "distinct": 61, "explan": 61, "employ": 61, "uniform": 61, "likeliehood": 61, "top_model_fi_featur": 61, "moder": [61, 62], "basi": 61, "confid": 61, "filepath": 61, "folderpath": 61, "repeat": [61, 62], "pc": 62, "guidelin": 62, "tutori": 62, "lean": 62, "viewabl": 62, "menu": 62, "clear": 62, "ram": 62, "chose": 62, "breviti": 62, "workspac": 62, "parmamet": 62, "demo_run": 62, "use_data_prompt": 62, "md": 62, "repli": 62, "request": 62, "ouput": 62, "applytorepl": 62, "useroutput": 62, "pictur": 62, "userdata": 62, "phi": 62, "session": 62, "incorrect": 62, "success": 62, "browser": 62, "ipypnb": 62, "kernel": 62, "restart": 62, "hour": 62, "exhaust": 62, "scenario": 62, "sequenti": 62, "skip": 62, "editor": 62, "termin": 62, "do_till_report": 62, "do_repl": 62, "do_rep_report": 62, "do_cleanup": 62, "do_eda": 62, "do_dataprep": 62, "do_feat_imp": 62, "do_feat_sel": 62, "upfront": 62, "unspecifi": 62, "subsect": 62, "hcc_quant_feat": 62, "gnu": 62, "unix": 62, "incredibli": 62, "handi": 62, "gist": 62, "press": 62, "ctrl": 62, "emul": 62, "kill": 62, "stai": 62, "mysess": 62, "config": 62, "ride": 62, "per": 62, "jobqueu": 62, "earlier": 62, "cedars_old": 62, "upenn": 62, "locat": 62, "lightweight": 62, "headnod": 62, "successfulli": 62, "overhead": 62, "ininti": 62, "accomplish": 62, "sai": 62, "quickest": 62, "easiest": 62, "anywher": 62, "nearli": 62, "slower": 62, "minor": 62, "versatil": 62, "mind": 63, "formanc": 63, "export_univariate_plot": 63, "feature_select": 63, "datapreprocess": 63}, "objects": {"": [[2, 0, 0, "-", "streamline"]], "streamline": [[3, 0, 0, "-", "dataprep"], [7, 0, 0, "-", "featurefns"], [10, 0, 0, "-", "modeling"], [16, 0, 0, "-", "models"], [28, 0, 0, "-", "postanalysis"], [33, 0, 0, "-", "runners"], [43, 0, 0, "-", "utils"]], "streamline.dataprep": [[4, 0, 0, "-", "data_process"], [6, 0, 0, "-", "kfold_partitioning"]], "streamline.dataprep.data_process": [[4, 1, 1, "", "DataProcess"]], "streamline.dataprep.data_process.DataProcess": [[4, 2, 1, "", "categorical_feature_encoding"], [4, 2, 1, "", "categorical_feature_encoding_pandas"], [4, 2, 1, "", "counts_summary"], [4, 2, 1, "", "data_manipulation"], [4, 2, 1, "", "drop_highly_correlated_features"], [4, 2, 1, "", "drop_ignored_rowcols"], [4, 2, 1, "", "drop_invariant"], [4, 2, 1, "", "feature_engineering"], [4, 2, 1, "", "feature_removal"], [4, 2, 1, "", "graph_selector"], [4, 2, 1, "", "identify_feature_types"], [4, 2, 1, "", "instance_removal"], [4, 2, 1, "", "join"], [4, 2, 1, "", "label_encoder"], [4, 2, 1, "", "make_log_folders"], [4, 2, 1, "", "run"], [4, 2, 1, "", "run_process"], [4, 2, 1, "", "save_runtime"], [4, 2, 1, "", "second_eda"], [4, 2, 1, "", "start"], [4, 2, 1, "", "test_selector"], [4, 2, 1, "", "univariate_analysis"], [4, 2, 1, "", "univariate_plots"]], "streamline.dataprep.kfold_partitioning": [[6, 1, 1, "", "KFoldPartitioner"]], "streamline.dataprep.kfold_partitioning.KFoldPartitioner": [[6, 2, 1, "", "cv_partitioner"], [6, 2, 1, "", "run"], [6, 2, 1, "", "save_datasets"]], "streamline.featurefns": [[8, 0, 0, "-", "importance"], [9, 0, 0, "-", "selection"]], "streamline.featurefns.importance": [[8, 1, 1, "", "FeatureImportance"]], "streamline.featurefns.importance.FeatureImportance": [[8, 2, 1, "", "pickle_scores"], [8, 2, 1, "", "prepare_data"], [8, 2, 1, "", "run"], [8, 2, 1, "", "run_multi_surf"], [8, 2, 1, "", "run_mutual_information"], [8, 2, 1, "", "save_runtime"], [8, 2, 1, "", "sort_save_fi_scores"]], "streamline.featurefns.selection": [[9, 1, 1, "", "FeatureSelection"]], "streamline.featurefns.selection.FeatureSelection": [[9, 2, 1, "", "gen_filtered_datasets"], [9, 2, 1, "", "report_ave_fs"], [9, 2, 1, "", "report_informative_features"], [9, 2, 1, "", "run"], [9, 2, 1, "", "save_runtime"], [9, 2, 1, "", "select_features"]], "streamline.modeling": [[11, 0, 0, "-", "basemodel"], [12, 0, 0, "-", "load_models"], [13, 0, 0, "-", "modeljob"], [14, 0, 0, "-", "parameters"], [15, 0, 0, "-", "utils"]], "streamline.modeling.basemodel": [[11, 1, 1, "", "BaseModel"]], "streamline.modeling.basemodel.BaseModel": [[11, 2, 1, "", "feature_importance"], [11, 2, 1, "", "fit"], [11, 2, 1, "", "hyper_eval"], [11, 2, 1, "", "model_evaluation"], [11, 2, 1, "", "objective"], [11, 2, 1, "", "optimize"], [11, 2, 1, "", "predict"]], "streamline.modeling.load_models": [[12, 3, 1, "", "load_class_from_folder"]], "streamline.modeling.modeljob": [[13, 1, 1, "", "ModelJob"]], "streamline.modeling.modeljob.ModelJob": [[13, 2, 1, "", "data_prep"], [13, 2, 1, "", "export_best_params"], [13, 2, 1, "", "run"], [13, 2, 1, "", "run_model"], [13, 2, 1, "", "save_runtime"]], "streamline.modeling.parameters": [[14, 3, 1, "", "get_parameters"]], "streamline.modeling.utils": [[15, 3, 1, "", "get_fi_for_ExSTraCS"], [15, 3, 1, "", "is_supported_model"], [15, 3, 1, "", "model_str_to_obj"]], "streamline.models": [[17, 0, 0, "-", "artificial_neural_network"], [18, 0, 0, "-", "decision_tree"], [19, 0, 0, "-", "elastic_net"], [20, 0, 0, "-", "genetic_programming"], [21, 0, 0, "-", "gradient_boosting"], [22, 0, 0, "-", "learning_based"], [23, 0, 0, "-", "linear_model"], [24, 0, 0, "-", "naive_bayes"], [25, 0, 0, "-", "neighbouring"], [26, 0, 0, "-", "random_forest"], [27, 0, 0, "-", "support_vector_machine"]], "streamline.models.artificial_neural_network": [[17, 1, 1, "", "MLPClassifier"]], "streamline.models.artificial_neural_network.MLPClassifier": [[17, 4, 1, "", "color"], [17, 4, 1, "", "model_name"], [17, 2, 1, "", "objective"], [17, 4, 1, "", "small_name"]], "streamline.models.decision_tree": [[18, 1, 1, "", "DecisionTreeClassifier"]], "streamline.models.decision_tree.DecisionTreeClassifier": [[18, 4, 1, "", "color"], [18, 4, 1, "", "model_name"], [18, 2, 1, "", "objective"], [18, 4, 1, "", "small_name"]], "streamline.models.elastic_net": [[19, 1, 1, "", "ElasticNetClassifier"]], "streamline.models.elastic_net.ElasticNetClassifier": [[19, 4, 1, "", "color"], [19, 4, 1, "", "model_name"], [19, 2, 1, "", "objective"], [19, 4, 1, "", "small_name"]], "streamline.models.genetic_programming": [[20, 1, 1, "", "GPClassifier"]], "streamline.models.genetic_programming.GPClassifier": [[20, 4, 1, "", "color"], [20, 4, 1, "", "model_name"], [20, 2, 1, "", "objective"], [20, 4, 1, "", "small_name"]], "streamline.models.gradient_boosting": [[21, 1, 1, "", "CGBClassifier"], [21, 1, 1, "", "GBClassifier"], [21, 1, 1, "", "LGBClassifier"], [21, 1, 1, "", "XGBClassifier"]], "streamline.models.gradient_boosting.CGBClassifier": [[21, 4, 1, "", "color"], [21, 4, 1, "", "model_name"], [21, 2, 1, "", "objective"], [21, 4, 1, "", "small_name"]], "streamline.models.gradient_boosting.GBClassifier": [[21, 4, 1, "", "color"], [21, 4, 1, "", "model_name"], [21, 2, 1, "", "objective"], [21, 4, 1, "", "small_name"]], "streamline.models.gradient_boosting.LGBClassifier": [[21, 4, 1, "", "color"], [21, 4, 1, "", "model_name"], [21, 2, 1, "", "objective"], [21, 4, 1, "", "small_name"]], "streamline.models.gradient_boosting.XGBClassifier": [[21, 4, 1, "", "color"], [21, 4, 1, "", "model_name"], [21, 2, 1, "", "objective"], [21, 4, 1, "", "small_name"]], "streamline.models.learning_based": [[22, 1, 1, "", "ExSTraCSClassifier"], [22, 1, 1, "", "XCSClassifier"], [22, 1, 1, "", "eLCSClassifier"]], "streamline.models.learning_based.ExSTraCSClassifier": [[22, 4, 1, "", "color"], [22, 4, 1, "", "model_name"], [22, 2, 1, "", "objective"], [22, 4, 1, "", "small_name"]], "streamline.models.learning_based.XCSClassifier": [[22, 4, 1, "", "color"], [22, 4, 1, "", "model_name"], [22, 2, 1, "", "objective"], [22, 4, 1, "", "small_name"]], "streamline.models.learning_based.eLCSClassifier": [[22, 4, 1, "", "color"], [22, 4, 1, "", "model_name"], [22, 2, 1, "", "objective"], [22, 4, 1, "", "small_name"]], "streamline.models.linear_model": [[23, 1, 1, "", "LogisticRegression"]], "streamline.models.linear_model.LogisticRegression": [[23, 4, 1, "", "color"], [23, 4, 1, "", "model_name"], [23, 2, 1, "", "objective"], [23, 4, 1, "", "small_name"]], "streamline.models.naive_bayes": [[24, 1, 1, "", "NaiveBayesClassifier"]], "streamline.models.naive_bayes.NaiveBayesClassifier": [[24, 4, 1, "", "color"], [24, 4, 1, "", "model_name"], [24, 2, 1, "", "objective"], [24, 4, 1, "", "small_name"]], "streamline.models.neighbouring": [[25, 1, 1, "", "KNNClassifier"]], "streamline.models.neighbouring.KNNClassifier": [[25, 4, 1, "", "color"], [25, 4, 1, "", "model_name"], [25, 2, 1, "", "objective"], [25, 4, 1, "", "small_name"]], "streamline.models.random_forest": [[26, 1, 1, "", "RandomForestClassifier"]], "streamline.models.random_forest.RandomForestClassifier": [[26, 4, 1, "", "color"], [26, 4, 1, "", "model_name"], [26, 2, 1, "", "objective"], [26, 4, 1, "", "small_name"]], "streamline.models.support_vector_machine": [[27, 1, 1, "", "SupportVectorClassifier"]], "streamline.models.support_vector_machine.SupportVectorClassifier": [[27, 4, 1, "", "color"], [27, 4, 1, "", "model_name"], [27, 2, 1, "", "objective"], [27, 4, 1, "", "small_name"]], "streamline.postanalysis": [[29, 0, 0, "-", "dataset_compare"], [30, 0, 0, "-", "gererate_report"], [31, 0, 0, "-", "model_replicate"], [32, 0, 0, "-", "statistics"]], "streamline.postanalysis.dataset_compare": [[29, 1, 1, "", "CompareJob"]], "streamline.postanalysis.dataset_compare.CompareJob": [[29, 2, 1, "", "best_kruscall_wallis"], [29, 2, 1, "", "best_mann_whitney_u"], [29, 2, 1, "", "best_wilcoxon_rank"], [29, 2, 1, "", "data_compare_bp"], [29, 2, 1, "", "data_compare_bp_all"], [29, 2, 1, "", "inter_set_best_fn"], [29, 2, 1, "", "inter_set_fn"], [29, 2, 1, "", "kruscall_wallis"], [29, 2, 1, "", "mann_whitney_u"], [29, 2, 1, "", "run"], [29, 2, 1, "", "save_runtime"], [29, 2, 1, "", "temp_summary"], [29, 2, 1, "", "wilcoxon_rank"]], "streamline.postanalysis.gererate_report": [[30, 1, 1, "", "ReportJob"], [30, 3, 1, "", "list_to_string"], [30, 3, 1, "", "ngi"]], "streamline.postanalysis.gererate_report.ReportJob": [[30, 2, 1, "", "footer"], [30, 2, 1, "", "format_fn"], [30, 2, 1, "", "job"], [30, 2, 1, "", "pub_model_mean_stats"], [30, 2, 1, "", "pub_model_median_stats"], [30, 2, 1, "", "pub_runtime"], [30, 2, 1, "", "pub_univariate"], [30, 2, 1, "", "run"]], "streamline.postanalysis.model_replicate": [[31, 1, 1, "", "ReplicateJob"]], "streamline.postanalysis.model_replicate.ReplicateJob": [[31, 2, 1, "", "eval_model"], [31, 2, 1, "", "impute_rep_data"], [31, 2, 1, "", "run"], [31, 2, 1, "", "scale_rep_data"]], "streamline.postanalysis.statistics": [[32, 1, 1, "", "StatsJob"]], "streamline.postanalysis.statistics.StatsJob": [[32, 2, 1, "", "composite_fi_plot"], [32, 2, 1, "", "do_fi_boxplots"], [32, 2, 1, "", "do_fi_histogram"], [32, 2, 1, "", "do_model_prc"], [32, 2, 1, "", "do_model_roc"], [32, 2, 1, "", "do_plot_prc"], [32, 2, 1, "", "do_plot_roc"], [32, 2, 1, "", "fi_stats"], [32, 2, 1, "", "frac_fi"], [32, 2, 1, "", "get_fi_to_viz_sorted"], [32, 2, 1, "", "kruskal_wallis"], [32, 2, 1, "", "mann_whitney_u"], [32, 2, 1, "", "metric_boxplots"], [32, 2, 1, "", "parse_runtime"], [32, 2, 1, "", "prep_fi"], [32, 2, 1, "", "preparation"], [32, 2, 1, "", "primary_stats"], [32, 2, 1, "", "run"], [32, 2, 1, "", "save_fi"], [32, 2, 1, "", "save_metric_stats"], [32, 2, 1, "", "save_runtime"], [32, 2, 1, "", "select_for_composite_viz"], [32, 2, 1, "", "weight_fi"], [32, 2, 1, "", "weight_frac_fi"], [32, 2, 1, "", "wilcoxon_rank"]], "streamline.runners": [[34, 0, 0, "-", "clean_runner"], [35, 0, 0, "-", "compare_runner"], [36, 0, 0, "-", "dataprocess_runner"], [38, 0, 0, "-", "feature_runner"], [39, 0, 0, "-", "model_runner"], [40, 0, 0, "-", "replicate_runner"], [41, 0, 0, "-", "report_runner"], [42, 0, 0, "-", "stats_runner"]], "streamline.runners.clean_runner": [[34, 1, 1, "", "CleanRunner"]], "streamline.runners.clean_runner.CleanRunner": [[34, 2, 1, "", "run"]], "streamline.runners.compare_runner": [[35, 1, 1, "", "CompareRunner"]], "streamline.runners.compare_runner.CompareRunner": [[35, 2, 1, "", "get_cluster_params"], [35, 2, 1, "", "run"], [35, 2, 1, "", "submit_lsf_cluster_job"], [35, 2, 1, "", "submit_slurm_cluster_job"]], "streamline.runners.dataprocess_runner": [[36, 1, 1, "", "DataProcessRunner"]], "streamline.runners.dataprocess_runner.DataProcessRunner": [[36, 2, 1, "", "get_cluster_params"], [36, 2, 1, "", "make_dir_tree"], [36, 2, 1, "", "run"], [36, 2, 1, "", "save_metadata"], [36, 2, 1, "", "submit_lsf_cluster_job"], [36, 2, 1, "", "submit_slurm_cluster_job"]], "streamline.runners.feature_runner": [[38, 1, 1, "", "FeatureImportanceRunner"], [38, 1, 1, "", "FeatureSelectionRunner"]], "streamline.runners.feature_runner.FeatureImportanceRunner": [[38, 2, 1, "", "get_cluster_params"], [38, 2, 1, "", "run"], [38, 2, 1, "", "save_metadata"], [38, 2, 1, "", "submit_lsf_cluster_job"], [38, 2, 1, "", "submit_slurm_cluster_job"]], "streamline.runners.feature_runner.FeatureSelectionRunner": [[38, 2, 1, "", "get_cluster_params"], [38, 2, 1, "", "run"], [38, 2, 1, "", "save_metadata"], [38, 2, 1, "", "submit_lsf_cluster_job"], [38, 2, 1, "", "submit_slurm_cluster_job"]], "streamline.runners.model_runner": [[39, 1, 1, "", "ModelExperimentRunner"]], "streamline.runners.model_runner.ModelExperimentRunner": [[39, 2, 1, "", "get_cluster_params"], [39, 2, 1, "", "run"], [39, 2, 1, "", "save_alginfo"], [39, 2, 1, "", "save_metadata"], [39, 2, 1, "", "submit_lsf_cluster_job"], [39, 2, 1, "", "submit_slurm_cluster_job"]], "streamline.runners.replicate_runner": [[40, 1, 1, "", "ReplicationRunner"]], "streamline.runners.replicate_runner.ReplicationRunner": [[40, 2, 1, "", "get_algorithms"], [40, 2, 1, "", "get_cluster_params"], [40, 2, 1, "", "run"], [40, 2, 1, "", "save_metadata"], [40, 2, 1, "", "submit_lsf_cluster_job"], [40, 2, 1, "", "submit_slurm_cluster_job"]], "streamline.runners.report_runner": [[41, 1, 1, "", "ReportRunner"]], "streamline.runners.report_runner.ReportRunner": [[41, 2, 1, "", "get_cluster_params"], [41, 2, 1, "", "run"], [41, 2, 1, "", "submit_lsf_cluster_job"], [41, 2, 1, "", "submit_slurm_cluster_job"]], "streamline.runners.stats_runner": [[42, 1, 1, "", "StatsRunner"]], "streamline.runners.stats_runner.StatsRunner": [[42, 2, 1, "", "get_cluster_params"], [42, 2, 1, "", "run"], [42, 2, 1, "", "save_metadata"], [42, 2, 1, "", "submit_lsf_cluster_job"], [42, 2, 1, "", "submit_slurm_cluster_job"]], "streamline.utils": [[44, 0, 0, "-", "checker"], [45, 0, 0, "-", "cleanup"], [46, 0, 0, "-", "cluster"], [47, 0, 0, "-", "dataset"], [48, 0, 0, "-", "evaluation"], [49, 0, 0, "-", "job"], [50, 0, 0, "-", "parser"], [51, 0, 0, "-", "runners"]], "streamline.utils.checker": [[44, 3, 1, "", "check_phase"], [44, 3, 1, "", "check_phase_1"], [44, 3, 1, "", "check_phase_10"], [44, 3, 1, "", "check_phase_11"], [44, 3, 1, "", "check_phase_2"], [44, 3, 1, "", "check_phase_3"], [44, 3, 1, "", "check_phase_4"], [44, 3, 1, "", "check_phase_5"], [44, 3, 1, "", "check_phase_6"], [44, 3, 1, "", "check_phase_7"], [44, 3, 1, "", "check_phase_8"], [44, 3, 1, "", "check_phase_9"]], "streamline.utils.cleanup": [[45, 1, 1, "", "Cleaner"]], "streamline.utils.cleanup.Cleaner": [[45, 2, 1, "", "rm_tree"], [45, 2, 1, "", "run"]], "streamline.utils.cluster": [[46, 3, 1, "", "get_cluster"]], "streamline.utils.dataset": [[47, 1, 1, "", "Dataset"]], "streamline.utils.dataset.Dataset": [[47, 2, 1, "", "clean_data"], [47, 2, 1, "", "counts_summary"], [47, 2, 1, "", "describe_data"], [47, 2, 1, "", "eda"], [47, 2, 1, "", "feature_correlation"], [47, 2, 1, "", "feature_only_data"], [47, 2, 1, "", "get_headers"], [47, 2, 1, "", "get_outcome"], [47, 2, 1, "", "initial_eda"], [47, 2, 1, "", "load_data"], [47, 2, 1, "", "missing_count_plot"], [47, 2, 1, "", "missingness_counts"], [47, 2, 1, "", "non_feature_data"], [47, 2, 1, "", "set_original_headers"], [47, 2, 1, "", "set_processed_headers"]], "streamline.utils.evaluation": [[48, 3, 1, "", "class_eval"]], "streamline.utils.job": [[49, 1, 1, "", "Job"]], "streamline.utils.job.Job": [[49, 2, 1, "", "run"], [49, 2, 1, "", "run_cluster"]], "streamline.utils.parser": [[50, 3, 1, "", "parser_function"], [50, 3, 1, "", "process_params"], [50, 3, 1, "", "single_parse"]], "streamline.utils.runners": [[51, 3, 1, "", "check_if_single_phase"], [51, 3, 1, "", "model_runner_fn"], [51, 3, 1, "", "parallel_eda_call"], [51, 3, 1, "", "run_jobs"], [51, 3, 1, "", "runner_fn"], [51, 3, 1, "", "sub_jobs"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"about": 0, "faq": 0, "can": 0, "i": 0, "run": [0, 60, 62], "streamlin": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 55, 58, 59, 62], "what": 0, "us": [0, 58, 60, 62], "level": 0, "comput": [0, 62], "skill": 0, "requir": [0, 53], "how": [0, 52], "differ": 0, "from": 0, "other": [0, 1, 60, 63], "automl": 0, "tool": [0, 56, 62], "doe": 0, "autom": 0, "alwai": 0, "entir": 0, "pipelin": [0, 1, 61], "do": [0, 58], "more": [0, 58], "output": [0, 59, 60], "after": [0, 52], "complet": [0, 62], "avoid": 0, "data": [0, 53, 60, 61, 62], "leakag": 0, "reproduc": [0, 60], "which": 0, "mode": [0, 62], "should": 0, "cite": 1, "applic": 1, "relat": 1, "research": 1, "A": 1, "rigor": 1, "ml": [1, 61, 62], "binari": [1, 53], "classif": 1, "relief": 1, "base": [1, 61], "featur": [1, 53, 60, 61, 62], "import": [1, 8, 60, 61, 62], "estim": [1, 60, 61, 62], "collect": 1, "select": [1, 9, 60, 61, 62], "learn": [1, 61, 62], "classifi": 1, "system": 1, "packag": [2, 3, 7, 10, 16, 28, 33, 43], "subpackag": 2, "dataprep": [3, 4, 5, 6], "submodul": [3, 7, 10, 16, 28, 33, 43], "data_process": 4, "modul": [4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51], "exploratory_analysi": 5, "kfold_partit": 6, "featurefn": [7, 8, 9], "model": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 58, 59, 60, 61, 62, 63], "basemodel": 11, "load_model": 12, "modeljob": 13, "paramet": [14, 60, 62, 63], "util": [15, 43, 44, 45, 46, 47, 48, 49, 50, 51], "artificial_neural_network": 17, "decision_tre": 18, "elastic_net": 19, "genetic_program": 20, "gradient_boost": 21, "learning_bas": 22, "linear_model": 23, "naive_bay": 24, "neighbour": 25, "random_forest": 26, "support_vector_machin": 27, "postanalysi": [28, 29, 30, 31, 32], "dataset_compar": 29, "gererate_report": 30, "model_repl": 31, "statist": [32, 59], "runner": [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 51], "clean_runn": 34, "compare_runn": 35, "dataprocess_runn": 36, "eda_runn": 37, "feature_runn": 38, "model_runn": 39, "replicate_runn": 40, "report_runn": 41, "stats_runn": 42, "checker": 44, "cleanup": [45, 60], "cluster": [46, 56, 62], "dataset": [47, 53, 61, 62], "evalu": [48, 59, 61], "job": [49, 62], "parser": 50, "contribut": 52, "project": 52, "layout": 52, "befor": 52, "submit": 52, "pull": 52, "request": 52, "updat": [52, 54, 58], "document": [52, 57], "input": 53, "addit": [53, 56], "consider": 53, "specifi": 53, "type": 53, "text": [53, 56, 61], "valu": 53, "previous": 53, "unseen": 53, "categor": 53, "replic": [53, 59, 60, 61, 62], "class": 53, "label": 53, "pre": 53, "process": [53, 60, 61, 62], "ordin": 53, "encod": [53, 61], "outlier": 53, "extract": 53, "engin": [53, 61], "transform": 53, "demonstr": 53, "real": 53, "world": 53, "hcc": [53, 59], "custom": 53, "extens": [53, 54], "simul": 53, "develop": 54, "note": 54, "releas": 54, "histori": 54, "current": [54, 55], "beta": 54, "0": 54, "3": [54, 60, 61, 62], "4": [54, 60, 61, 62], "septemb": 54, "28": 54, "2023": 54, "minor": 54, "22": 54, "major": 54, "2": [54, 60, 61, 62], "13": 54, "1": [54, 60, 61, 62], "august": 54, "25": 54, "5": [54, 60, 61, 62], "june": 54, "24": 54, "2022": 54, "15": 54, "mai": 54, "19": 54, "17": 54, "14": 54, "alpha": 54, "12": 54, "plan": 54, "improv": [54, 60, 63], "known": [54, 56], "issu": [54, 56], "logist": 54, "capabl": 54, "algorithm": [54, 58, 60], "overview": 55, "limit": 55, "disclaim": 55, "contact": 55, "acknowledg": 55, "instal": 56, "googl": [56, 62], "colab": [56, 62], "notebook": [56, 58, 59, 62], "local": [56, 62], "prerequisit": 56, "git": 56, "anaconda": 56, "command": [56, 62], "troubleshoot": 56, "jupyt": [56, 62], "compat": 56, "termin": 56, "emul": 56, "editor": 56, "code": 57, "hyperparamet": [58, 61], "option": [58, 62], "ad": 58, "new": 58, "navig": 59, "experi": 59, "folder": 59, "hierarchi": 59, "file": [59, 62], "detail": [59, 60, 61], "pdf": 59, "report": [59, 60, 61, 62], "": [59, 62], "test": 59, "meta": 59, "info": 59, "datasetcomparison": 59, "signific": 59, "comparison": 59, "datacompboxplot": 59, "data_custom": 59, "cvdataset": 59, "exploratori": 59, "plot": 59, "csv": 59, "pickl": 59, "initi": [59, 61], "univari": 59, "analysi": [59, 60, 61, 62], "feature_select": 59, "multisurf": 59, "mutual_inform": 59, "model_evalu": 59, "feature_import": 59, "metricboxplot": 59, "pickled_metr": 59, "statistical_comparison": 59, "runtim": [59, 60, 63], "scale_imput": 59, "figur": 59, "summari": [59, 60, 61, 62], "quick": 60, "guid": 60, "essenti": 60, "phase": [60, 61, 62], "9": [60, 61, 62], "gener": 60, "imput": [60, 61, 62], "scale": [60, 61, 62], "post": [60, 61, 62], "6": [60, 61, 62], "compar": [60, 61, 62], "7": [60, 61, 62], "8": [60, 61, 62], "multiprocess": 60, "log": 60, "dataset_path": 60, "output_path": 60, "experiment_nam": 60, "class_label": 60, "instance_label": 60, "match_label": 60, "ignore_features_path": 60, "categorical_feature_path": 60, "quantitative_feature_path": 60, "rep_data_path": 60, "dataset_for_rep": 60, "config": 60, "do_till_report": 60, "do_eda": 60, "do_dataprep": 60, "do_feat_imp": 60, "do_feat_sel": 60, "do_model": 60, "do_stat": 60, "do_compare_dataset": 60, "do_report": 60, "do_repl": 60, "do_rep_report": 60, "do_cleanup": 60, "applytorepl": 60, "demo_run": 60, "use_data_prompt": 60, "cv_partit": 60, "partition_method": 60, "categorical_cutoff": 60, "sig_cutoff": 60, "random_st": 60, "exclude_eda_output": 60, "top_uni_featur": 60, "featureeng_missing": 60, "cleaning_missing": 60, "correlation_removal_threshold": 60, "impute_data": 60, "multi_imput": 60, "scale_data": 60, "overwrite_cv": 60, "do_mutual_info": 60, "do_multisurf": 60, "use_turf": 60, "turf_pct": 60, "instance_subset": 60, "n_job": 60, "filter_poor_featur": 60, "max_features_to_keep": 60, "export_scor": 60, "top_fi_featur": 60, "overwrite_cv_feat": 60, "exclud": 60, "training_subsampl": 60, "use_uniform_fi": 60, "primary_metr": 60, "metric_direct": 60, "n_trial": 60, "timeout": 60, "export_hyper_sweep_plot": 60, "do_lcs_sweep": 60, "lcs_nu": 60, "lcs_iter": 60, "lcs_n": 60, "lcs_timeout": 60, "model_resubmit": 60, "exclude_plot": 60, "metric_weight": 60, "top_model_fi_featur": 60, "exclude_rep_plot": 60, "del_tim": 60, "del_old_cv": 60, "run_parallel": 60, "run_clust": 60, "reserved_memori": 60, "queue": [60, 62], "verbos": 60, "logging_level": 60, "guidelin": [60, 63], "set": [60, 63], "ensur": 60, "reduc": [60, 63], "memori": [60, 62], "perform": [60, 61, 63], "walkthrough": 61, "explor": [61, 62], "eda": 61, "numer": 61, "basic": 61, "clean": [61, 62], "k": 61, "fold": 61, "cross": 61, "valid": 61, "cv": 61, "partit": 61, "machin": [61, 62], "optim": 61, "train": 61, "demo": 62, "your": 62, "own": 62, "easi": 62, "manual": 62, "line": 62, "interfac": 62, "configur": 62, "argument": 62, "all": 62, "onc": 62, "includ": 62, "main": 62, "No": 62, "One": 62, "time": 62, "up": 62, "cpu": 62, "help": 62, "nano": 62, "tmux": 62, "specif": 62, "check": 62, "pick": 62, "why": 62}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"About (FAQs)": [[0, "about-faqs"]], "Can I run STREAMLINE as is?": [[0, "can-i-run-streamline-as-is"]], "What can STREAMLINE be used for?": [[0, "what-can-streamline-be-used-for"]], "What level of computing skill is required for use?": [[0, "what-level-of-computing-skill-is-required-for-use"]], "How is STREAMLINE different from other AutoML tools?": [[0, "how-is-streamline-different-from-other-automl-tools"]], "What does STREAMLINE automate?": [[0, "what-does-streamline-automate"]], "Does STREAMLINE always run the entire pipeline?": [[0, "does-streamline-always-run-the-entire-pipeline"]], "Can I do more with the STREAMLINE output after it completes?": [[0, "can-i-do-more-with-the-streamline-output-after-it-completes"]], "How does STREAMLINE avoid data leakage?": [[0, "how-does-streamline-avoid-data-leakage"]], "Is STREAMLINE reproducible?": [[0, "is-streamline-reproducible"]], "Which STREAMLINE run mode should I use?": [[0, "which-streamline-run-mode-should-i-use"]], "Citing STREAMLINE": [[1, "citing-streamline"]], "STREAMLINE Applications": [[1, "streamline-applications"]], "Other STREAMLINE Related Research": [[1, "other-streamline-related-research"]], "A rigorous ML pipeline for binary classification": [[1, "a-rigorous-ml-pipeline-for-binary-classification"]], "Relief-based feature importance estimation": [[1, "relief-based-feature-importance-estimation"]], "Collective feature selection": [[1, "collective-feature-selection"]], "Learning classifier systems": [[1, "learning-classifier-systems"]], "streamline package": [[2, "module-streamline"]], "Subpackages": [[2, "subpackages"]], "streamline.dataprep package": [[3, "module-streamline.dataprep"]], "Submodules": [[3, "submodules"], [7, "submodules"], [10, "submodules"], [16, "submodules"], [28, "submodules"], [33, "submodules"], [43, "submodules"]], "streamline.dataprep.data_process module": [[4, "module-streamline.dataprep.data_process"]], "streamline.dataprep.exploratory_analysis module": [[5, "streamline-dataprep-exploratory-analysis-module"]], "streamline.dataprep.kfold_partitioning module": [[6, "module-streamline.dataprep.kfold_partitioning"]], "streamline.featurefns package": [[7, "module-streamline.featurefns"]], "streamline.featurefns.importance module": [[8, "module-streamline.featurefns.importance"]], "streamline.featurefns.selection module": [[9, "module-streamline.featurefns.selection"]], "streamline.modeling package": [[10, "module-streamline.modeling"]], "streamline.modeling.basemodel module": [[11, "module-streamline.modeling.basemodel"]], "streamline.modeling.load_models module": [[12, "module-streamline.modeling.load_models"]], "streamline.modeling.modeljob module": [[13, "module-streamline.modeling.modeljob"]], "streamline.modeling.parameters module": [[14, "module-streamline.modeling.parameters"]], "streamline.modeling.utils module": [[15, "module-streamline.modeling.utils"]], "streamline.models package": [[16, "module-streamline.models"]], "streamline.models.artificial_neural_network module": [[17, "module-streamline.models.artificial_neural_network"]], "streamline.models.decision_tree module": [[18, "module-streamline.models.decision_tree"]], "streamline.models.elastic_net module": [[19, "module-streamline.models.elastic_net"]], "streamline.models.genetic_programming module": [[20, "module-streamline.models.genetic_programming"]], "streamline.models.gradient_boosting module": [[21, "module-streamline.models.gradient_boosting"]], "streamline.models.learning_based module": [[22, "module-streamline.models.learning_based"]], "streamline.models.linear_model module": [[23, "module-streamline.models.linear_model"]], "streamline.models.naive_bayes module": [[24, "module-streamline.models.naive_bayes"]], "streamline.models.neighbouring module": [[25, "module-streamline.models.neighbouring"]], "streamline.models.random_forest module": [[26, "module-streamline.models.random_forest"]], "streamline.models.support_vector_machine module": [[27, "module-streamline.models.support_vector_machine"]], "streamline.postanalysis package": [[28, "module-streamline.postanalysis"]], "streamline.postanalysis.dataset_compare module": [[29, "module-streamline.postanalysis.dataset_compare"]], "streamline.postanalysis.gererate_report module": [[30, "module-streamline.postanalysis.gererate_report"]], "streamline.postanalysis.model_replicate module": [[31, "module-streamline.postanalysis.model_replicate"]], "streamline.postanalysis.statistics module": [[32, "module-streamline.postanalysis.statistics"]], "streamline.runners package": [[33, "module-streamline.runners"]], "streamline.runners.clean_runner module": [[34, "module-streamline.runners.clean_runner"]], "streamline.runners.compare_runner module": [[35, "module-streamline.runners.compare_runner"]], "streamline.runners.dataprocess_runner module": [[36, "module-streamline.runners.dataprocess_runner"]], "streamline.runners.eda_runner module": [[37, "streamline-runners-eda-runner-module"]], "streamline.runners.feature_runner module": [[38, "module-streamline.runners.feature_runner"]], "streamline.runners.model_runner module": [[39, "module-streamline.runners.model_runner"]], "streamline.runners.replicate_runner module": [[40, "module-streamline.runners.replicate_runner"]], "streamline.runners.report_runner module": [[41, "module-streamline.runners.report_runner"]], "streamline.runners.stats_runner module": [[42, "module-streamline.runners.stats_runner"]], "streamline.utils package": [[43, "module-streamline.utils"]], "streamline.utils.checker module": [[44, "module-streamline.utils.checker"]], "streamline.utils.cleanup module": [[45, "module-streamline.utils.cleanup"]], "streamline.utils.cluster module": [[46, "module-streamline.utils.cluster"]], "streamline.utils.dataset module": [[47, "module-streamline.utils.dataset"]], "streamline.utils.evaluation module": [[48, "module-streamline.utils.evaluation"]], "streamline.utils.job module": [[49, "module-streamline.utils.job"]], "streamline.utils.parser module": [[50, "module-streamline.utils.parser"]], "streamline.utils.runners module": [[51, "module-streamline.utils.runners"]], "Contributing": [[52, "contributing"]], "Project Layout": [[52, "project-layout"]], "How to Contribute": [[52, "how-to-contribute"]], "Before Submitting a Pull Request": [[52, "before-submitting-a-pull-request"]], "Updating the Documentation": [[52, "updating-the-documentation"]], "After Submitting a Pull Request": [[52, "after-submitting-a-pull-request"]], "Datasets": [[53, "datasets"]], "Input Data Requirements": [[53, "input-data-requirements"]], "Additional Considerations": [[53, "additional-considerations"]], "Specifying Feature Types": [[53, "specifying-feature-types"]], "Text-valued Features": [[53, "text-valued-features"]], "Previously Unseen Categorical Values in Replication Data": [[53, "previously-unseen-categorical-values-in-replication-data"]], "Binary Class Labels": [[53, "binary-class-labels"]], "Pre-STREAMLINE Data Processing": [[53, "pre-streamline-data-processing"]], "Text-valued Ordinal Features": [[53, "text-valued-ordinal-features"]], "Class Label Encoding": [[53, "class-label-encoding"]], "Outliers": [[53, "outliers"]], "Feature Extraction": [[53, "feature-extraction"]], "Feature Engineering": [[53, "feature-engineering"]], "Feature Transformation": [[53, "feature-transformation"]], "Demonstration Data": [[53, "demonstration-data"]], "Real-World HCC Dataset": [[53, "real-world-hcc-dataset"]], "Custom Extension of HCC Dataset": [[53, "custom-extension-of-hcc-dataset"]], "Simulated Replication Dataset": [[53, "simulated-replication-dataset"]], "Development Notes": [[54, "development-notes"]], "Release History": [[54, "release-history"]], "Current Release - Beta 0.3.4 (September 28, 2023)": [[54, "current-release-beta-0-3-4-september-28-2023"]], "Minor Updates": [[54, "minor-updates"], [54, "id1"], [54, "id2"], [54, "id3"], [54, "id5"]], "Beta 0.3.3 (September 22, 2023)": [[54, "beta-0-3-3-september-22-2023"]], "Major Updates": [[54, "major-updates"], [54, "id4"]], "Beta 0.3.2 (September 13, 2023)": [[54, "beta-0-3-2-september-13-2023"]], "Beta 0.3.1 (August 25, 2023)": [[54, "beta-0-3-1-august-25-2023"]], "Beta 0.3.0 (August 2023)": [[54, "beta-0-3-0-august-2023"]], "Beta 0.2.5 (June 24, 2022)": [[54, "beta-0-2-5-june-24-2022"]], "Beta 0.2.4 (June 15, 2022)": [[54, "beta-0-2-4-june-15-2022"]], "Beta 0.2.3 (May 19, 2022)": [[54, "beta-0-2-3-may-19-2022"]], "Beta 0.2.2 (May 19, 2022)": [[54, "beta-0-2-2-may-19-2022"]], "Beta 0.2.1 (May 17, 2022)": [[54, "beta-0-2-1-may-17-2022"]], "Beta 0.2.0 (May 14, 2022)": [[54, "beta-0-2-0-may-14-2022"]], "Alpha 0.1.3 (May 12, 2022)": [[54, "alpha-0-1-3-may-12-2022"]], "Alpha 0.1.2 (May 12, 2022)": [[54, "alpha-0-1-2-may-12-2022"]], "Alpha 0.1.1 (May 12, 2022)": [[54, "alpha-0-1-1-may-12-2022"]], "Alpha Release (May 12, 2022)": [[54, "alpha-release-may-12-2022"]], "Planned Improvements": [[54, "planned-improvements"]], "Known issues": [[54, "known-issues"]], "Logistical extensions": [[54, "logistical-extensions"]], "Capabilities extensions": [[54, "capabilities-extensions"]], "Algorithmic extensions": [[54, "algorithmic-extensions"]], "STREAMLINE": [[55, "streamline"]], "Overview": [[55, "overview"]], "Current Limitations": [[55, "current-limitations"]], "Disclaimer": [[55, "disclaimer"]], "Contact": [[55, "contact"]], "Acknowledgements": [[55, "acknowledgements"]], "Installation": [[56, "installation"]], "Google Colab Notebook": [[56, "google-colab-notebook"], [62, "google-colab-notebook"]], "Local Installation": [[56, "local-installation"]], "Prerequisites": [[56, "prerequisites"]], "Git": [[56, "git"]], "Anaconda": [[56, "anaconda"]], "Installation Commands": [[56, "installation-commands"]], "Troubleshooting": [[56, "troubleshooting"]], "Jupyter Notebook": [[56, "jupyter-notebook"], [62, "jupyter-notebook"]], "Cluster Installation": [[56, "cluster-installation"]], "Cluster Compatability": [[56, "cluster-compatability"]], "Additional Tools": [[56, "additional-tools"]], "Terminal Emulators": [[56, "terminal-emulators"]], "Terminal Text Editors": [[56, "terminal-text-editors"]], "Known Installation Issues": [[56, "known-installation-issues"]], "Code Documentation": [[57, "code-documentation"]], "Doing More with STREAMLINE": [[58, "doing-more-with-streamline"]], "Useful Notebooks": [[58, "useful-notebooks"]], "Updating Modeling Algorithm Hyperparameter Options": [[58, "updating-modeling-algorithm-hyperparameter-options"]], "Adding New Modeling Algorithms": [[58, "adding-new-modeling-algorithms"]], "Navigating STREAMLINE Output": [[59, "navigating-streamline-output"]], "Notebooks": [[59, "notebooks"]], "Experiment Folder (Hierarchy)": [[59, "experiment-folder-hierarchy"]], "Output File Details": [[59, "output-file-details"]], "PDF Report(s)": [[59, "pdf-report-s"]], "Testing Evaluation Report": [[59, "testing-evaluation-report"]], "Replication Evaluation Report": [[59, "replication-evaluation-report"]], "Experiment Meta Info": [[59, "experiment-meta-info"]], "DatasetComparisons": [[59, "datasetcomparisons"]], "Statistical Significance Comparisons": [[59, "statistical-significance-comparisons"]], "dataCompBoxplots": [[59, "datacompboxplots"]], "hcc-data_custom": [[59, "hcc-data-custom"]], "CVDatasets": [[59, "cvdatasets"]], "exploratory": [[59, "exploratory"]], "exploratory (plots)": [[59, "exploratory-plots"]], "exploratory (.csv)": [[59, "exploratory-csv"]], "exploratory (pickle)": [[59, "exploratory-pickle"]], "initial": [[59, "initial"]], "univariate analysis": [[59, "univariate-analysis"]], "univariate analysis (plots)": [[59, "univariate-analysis-plots"]], "univariate analysis (.csv)": [[59, "univariate-analysis-csv"]], "feature_selection": [[59, "feature-selection"]], "multisurf": [[59, "multisurf"]], "mutual_information": [[59, "mutual-information"]], "model_evaluation": [[59, "model-evaluation"]], "model_evaluation (plots)": [[59, "model-evaluation-plots"]], "model_evaluation (.csv)": [[59, "model-evaluation-csv"]], "feature_importance": [[59, "feature-importance"]], "metricBoxplots": [[59, "metricboxplots"]], "pickled_metrics": [[59, "pickled-metrics"]], "statistical_comparisons": [[59, "statistical-comparisons"]], "models": [[59, "models"]], "replication": [[59, "replication"]], "runtime": [[59, "runtime"]], "scale_impute": [[59, "scale-impute"]], "Figures Summary": [[59, "figures-summary"]], "Run Parameters": [[60, "run-parameters"]], "Quick Guide": [[60, "quick-guide"]], "Essential Parameters (Phases 1-9)": [[60, "essential-parameters-phases-1-9"]], "General Parameters (Phase 1)": [[60, "general-parameters-phase-1"], [60, "id1"]], "Data Processing Parameters (Phase 1)": [[60, "data-processing-parameters-phase-1"], [60, "id2"]], "Imputation & Scaling Parameters (Phase 2)": [[60, "imputation-scaling-parameters-phase-2"], [60, "id3"]], "Feature Importance Estimation Parameters (Phase 3)": [[60, "feature-importance-estimation-parameters-phase-3"], [60, "id4"]], "Feature Selection Parameters (Phase 4)": [[60, "feature-selection-parameters-phase-4"], [60, "id5"]], "Modeling Parameters (Phase 5)": [[60, "modeling-parameters-phase-5"], [60, "id6"]], "Post-Analysis Parameters (Phase 6)": [[60, "post-analysis-parameters-phase-6"], [60, "id7"]], "Compare Data Parameters (Phase 7)": [[60, "compare-data-parameters-phase-7"]], "Replication Parameters (Phase 8)": [[60, "replication-parameters-phase-8"], [60, "id8"]], "Summary Report Parameters (Phase 9)": [[60, "summary-report-parameters-phase-9"]], "Cleanup Parameters": [[60, "cleanup-parameters"], [60, "id9"]], "Multiprocessing Parameters": [[60, "multiprocessing-parameters"], [60, "id10"]], "Logging Parameters": [[60, "logging-parameters"], [60, "id11"]], "Parameter Details": [[60, "parameter-details"]], "Essential Parameters (Phase 1-9)": [[60, "essential-parameters-phase-1-9"]], "dataset_path": [[60, "dataset-path"]], "output_path": [[60, "output-path"]], "experiment_name": [[60, "experiment-name"]], "class_label": [[60, "class-label"]], "instance_label": [[60, "instance-label"]], "match_label": [[60, "match-label"]], "ignore_features_path": [[60, "ignore-features-path"]], "categorical_feature_path": [[60, "categorical-feature-path"]], "quantitative_feature_path": [[60, "quantitative-feature-path"]], "rep_data_path": [[60, "rep-data-path"]], "dataset_for_rep": [[60, "dataset-for-rep"]], "config": [[60, "config"]], "do_till_report": [[60, "do-till-report"]], "do_eda": [[60, "do-eda"]], "do_dataprep": [[60, "do-dataprep"]], "do_feat_imp": [[60, "do-feat-imp"]], "do_feat_sel": [[60, "do-feat-sel"]], "do_model": [[60, "do-model"]], "do_stats": [[60, "do-stats"]], "do_compare_dataset": [[60, "do-compare-dataset"]], "do_report": [[60, "do-report"]], "do_replicate": [[60, "do-replicate"]], "do_rep_report": [[60, "do-rep-report"]], "do_cleanup": [[60, "do-cleanup"]], "applyToReplication": [[60, "applytoreplication"]], "demo_run": [[60, "demo-run"]], "use_data_prompt": [[60, "use-data-prompt"]], "cv_partitions": [[60, "cv-partitions"]], "partition_method": [[60, "partition-method"]], "categorical_cutoff": [[60, "categorical-cutoff"]], "sig_cutoff": [[60, "sig-cutoff"]], "random_state": [[60, "random-state"]], "exclude_eda_output": [[60, "exclude-eda-output"]], "top_uni_features": [[60, "top-uni-features"]], "featureeng_missingness": [[60, "featureeng-missingness"]], "cleaning_missingness": [[60, "cleaning-missingness"]], "correlation_removal_threshold": [[60, "correlation-removal-threshold"]], "impute_data": [[60, "impute-data"]], "multi_impute": [[60, "multi-impute"]], "scale_data": [[60, "scale-data"]], "overwrite_cv": [[60, "overwrite-cv"]], "do_mutual_info": [[60, "do-mutual-info"]], "do_multisurf": [[60, "do-multisurf"]], "use_turf": [[60, "use-turf"]], "turf_pct": [[60, "turf-pct"]], "instance_subset": [[60, "instance-subset"]], "n_jobs": [[60, "n-jobs"]], "filter_poor_features": [[60, "filter-poor-features"]], "max_features_to_keep": [[60, "max-features-to-keep"]], "export_scores": [[60, "export-scores"]], "top_fi_features": [[60, "top-fi-features"]], "overwrite_cv_feat": [[60, "overwrite-cv-feat"]], "algorithms": [[60, "algorithms"]], "exclude": [[60, "exclude"]], "training_subsample": [[60, "training-subsample"]], "use_uniform_fi": [[60, "use-uniform-fi"]], "primary_metric": [[60, "primary-metric"]], "metric_direction": [[60, "metric-direction"]], "n_trials": [[60, "n-trials"]], "timeout": [[60, "timeout"]], "export_hyper_sweep_plots": [[60, "export-hyper-sweep-plots"]], "do_lcs_sweep": [[60, "do-lcs-sweep"]], "lcs_nu": [[60, "lcs-nu"]], "lcs_iterations": [[60, "lcs-iterations"]], "lcs_N": [[60, "lcs-n"]], "lcs_timeout": [[60, "lcs-timeout"]], "model_resubmit": [[60, "model-resubmit"]], "exclude_plots": [[60, "exclude-plots"]], "metric_weight": [[60, "metric-weight"]], "top_model_fi_features": [[60, "top-model-fi-features"]], "exclude_rep_plots": [[60, "exclude-rep-plots"]], "del_time": [[60, "del-time"]], "del_old_cv": [[60, "del-old-cv"]], "run_parallel": [[60, "run-parallel"]], "run_cluster": [[60, "run-cluster"]], "reserved_memory": [[60, "reserved-memory"]], "queue": [[60, "queue"]], "verbose": [[60, "verbose"]], "logging_level": [[60, "logging-level"]], "Guidelines for Setting Parameters": [[60, "guidelines-for-setting-parameters"], [63, "guidelines-for-setting-parameters"]], "Ensuring Output Reproducibility": [[60, "ensuring-output-reproducibility"]], "Reducing Runtime and Memory Use": [[60, "reducing-runtime-and-memory-use"]], "Improving Modeling Performance": [[60, "improving-modeling-performance"], [63, "improving-modeling-performance"]], "Other Guidelines": [[60, "other-guidelines"], [63, "other-guidelines"]], "Detailed Pipeline Walkthrough": [[61, "detailed-pipeline-walkthrough"]], "Phase 1: Data Exploration & Processing": [[61, "phase-1-data-exploration-processing"]], "Initial EDA": [[61, "initial-eda"]], "Numerical Encoding of Text-based Features": [[61, "numerical-encoding-of-text-based-features"]], "Basic Data Cleaning and Feature Engineering": [[61, "basic-data-cleaning-and-feature-engineering"]], "Processed Data EDA": [[61, "processed-data-eda"]], "k-fold Cross Validation (CV) Partitioning": [[61, "k-fold-cross-validation-cv-partitioning"]], "Phase 2: Imputation and Scaling": [[61, "phase-2-imputation-and-scaling"]], "Imputation": [[61, "imputation"]], "Scaling": [[61, "scaling"]], "Phase 3: Feature Importance Estimation": [[61, "phase-3-feature-importance-estimation"]], "Phase 4: Feature Selection": [[61, "phase-4-feature-selection"]], "Phase 5: Machine Learning (ML) Modeling": [[61, "phase-5-machine-learning-ml-modeling"]], "Model Selection": [[61, "model-selection"]], "Hyperparameter Optimization": [[61, "hyperparameter-optimization"]], "Train \u2018Optimized\u2019 Model": [[61, "train-optimized-model"]], "Model Feature Importance Estimation": [[61, "model-feature-importance-estimation"]], "Evaluate Performance": [[61, "evaluate-performance"]], "Phase 6: Post-Analysis": [[61, "phase-6-post-analysis"]], "Phase 7: Compare Datasets": [[61, "phase-7-compare-datasets"]], "Phase 8: Replication": [[61, "phase-8-replication"]], "Phase 9: Summary Report": [[61, "phase-9-summary-report"]], "Running STREAMLINE": [[62, "running-streamline"]], "Running the Demo (Colab)": [[62, "running-the-demo-colab"]], "Running Your Own Datasets (Colab)": [[62, "running-your-own-datasets-colab"]], "Easy Mode": [[62, "easy-mode"]], "Manual Mode": [[62, "manual-mode"]], "Running the Demo (Jupyter)": [[62, "running-the-demo-jupyter"]], "Running Your Own Datasets (Jupyter)": [[62, "running-your-own-datasets-jupyter"]], "Command Line Interface": [[62, "command-line-interface"]], "Locally": [[62, "locally"]], "Using a Configuration File (Locally)": [[62, "using-a-configuration-file-locally"]], "Using Command-Line Arguments (Locally)": [[62, "using-command-line-arguments-locally"]], "All Phases at Once (Replication Data Included)": [[62, "all-phases-at-once-replication-data-included"], [62, "id1"]], "All Main Phases at Once (No Replication Data)": [[62, "all-main-phases-at-once-no-replication-data"], [62, "id2"]], "One Phase at a Time": [[62, "one-phase-at-a-time"], [62, "id3"]], "Phase 1 - Data Exploration & Processing:": [[62, "phase-1-data-exploration-processing"], [62, "id4"]], "Phase 2 - Imputation and Scaling:": [[62, "phase-2-imputation-and-scaling"], [62, "id5"]], "Phase 3 - Feature Importance Estimation": [[62, "phase-3-feature-importance-estimation"], [62, "id6"]], "Phase 4 - Feature Selection": [[62, "phase-4-feature-selection"], [62, "id7"]], "Phase 5 - Machine Learning (ML) Modeling": [[62, "phase-5-machine-learning-ml-modeling"], [62, "id8"]], "Phase 6 - Post-Analysis": [[62, "phase-6-post-analysis"], [62, "id9"]], "Phase 7 - Compare Datasets": [[62, "phase-7-compare-datasets"], [62, "id10"]], "Phase 8 - Replication": [[62, "phase-8-replication"], [62, "id11"]], "Phase 9 - Summary Report(s)": [[62, "phase-9-summary-report-s"], [62, "id12"]], "Optional Clean-up": [[62, "optional-clean-up"], [62, "id13"]], "CPU Computing Cluster": [[62, "cpu-computing-cluster"]], "Helpful Tools": [[62, "helpful-tools"]], "nano": [[62, "nano"]], "tmux": [[62, "tmux"]], "Cluster-Specific Run Parameters": [[62, "cluster-specific-run-parameters"]], "Run Cluster Parameter": [[62, "run-cluster-parameter"]], "Queue and Memory Parameters": [[62, "queue-and-memory-parameters"]], "Using a Configuration File (Cluster)": [[62, "using-a-configuration-file-cluster"]], "Using Command-Line Arguments (Cluster)": [[62, "using-command-line-arguments-cluster"]], "Checking STREAMLINE Job Completion": [[62, "checking-streamline-job-completion"]], "Picking a Run Mode": [[62, "picking-a-run-mode"]], "Why run STREAMLINE on Google Colab?": [[62, "why-run-streamline-on-google-colab"]], "Reducing runtime": [[63, "reducing-runtime"]]}, "indexentries": {"module": [[2, "module-streamline"], [3, "module-streamline.dataprep"], [4, "module-streamline.dataprep.data_process"], [6, "module-streamline.dataprep.kfold_partitioning"], [7, "module-streamline.featurefns"], [8, "module-streamline.featurefns.importance"], [9, "module-streamline.featurefns.selection"], [10, "module-streamline.modeling"], [11, "module-streamline.modeling.basemodel"], [12, "module-streamline.modeling.load_models"], [13, "module-streamline.modeling.modeljob"], [14, "module-streamline.modeling.parameters"], [15, "module-streamline.modeling.utils"], [16, "module-streamline.models"], [17, "module-streamline.models.artificial_neural_network"], [18, "module-streamline.models.decision_tree"], [19, "module-streamline.models.elastic_net"], [20, "module-streamline.models.genetic_programming"], [21, "module-streamline.models.gradient_boosting"], [22, "module-streamline.models.learning_based"], [23, "module-streamline.models.linear_model"], [24, "module-streamline.models.naive_bayes"], [25, "module-streamline.models.neighbouring"], [26, "module-streamline.models.random_forest"], [27, "module-streamline.models.support_vector_machine"], [28, "module-streamline.postanalysis"], [29, "module-streamline.postanalysis.dataset_compare"], [30, "module-streamline.postanalysis.gererate_report"], [31, "module-streamline.postanalysis.model_replicate"], [32, "module-streamline.postanalysis.statistics"], [33, "module-streamline.runners"], [34, "module-streamline.runners.clean_runner"], [35, "module-streamline.runners.compare_runner"], [36, "module-streamline.runners.dataprocess_runner"], [38, "module-streamline.runners.feature_runner"], [39, "module-streamline.runners.model_runner"], [40, "module-streamline.runners.replicate_runner"], [41, "module-streamline.runners.report_runner"], [42, "module-streamline.runners.stats_runner"], [43, "module-streamline.utils"], [44, "module-streamline.utils.checker"], [45, "module-streamline.utils.cleanup"], [46, "module-streamline.utils.cluster"], [47, "module-streamline.utils.dataset"], [48, "module-streamline.utils.evaluation"], [49, "module-streamline.utils.job"], [50, "module-streamline.utils.parser"], [51, "module-streamline.utils.runners"]], "streamline": [[2, "module-streamline"]], "streamline.dataprep": [[3, "module-streamline.dataprep"]], "dataprocess (class in streamline.dataprep.data_process)": [[4, "streamline.dataprep.data_process.DataProcess"]], "categorical_feature_encoding() (streamline.dataprep.data_process.dataprocess method)": [[4, "streamline.dataprep.data_process.DataProcess.categorical_feature_encoding"]], "categorical_feature_encoding_pandas() (streamline.dataprep.data_process.dataprocess method)": [[4, "streamline.dataprep.data_process.DataProcess.categorical_feature_encoding_pandas"]], "counts_summary() (streamline.dataprep.data_process.dataprocess method)": [[4, "streamline.dataprep.data_process.DataProcess.counts_summary"]], "data_manipulation() (streamline.dataprep.data_process.dataprocess method)": [[4, "streamline.dataprep.data_process.DataProcess.data_manipulation"]], "drop_highly_correlated_features() (streamline.dataprep.data_process.dataprocess method)": [[4, "streamline.dataprep.data_process.DataProcess.drop_highly_correlated_features"]], "drop_ignored_rowcols() (streamline.dataprep.data_process.dataprocess method)": [[4, "streamline.dataprep.data_process.DataProcess.drop_ignored_rowcols"]], "drop_invariant() (streamline.dataprep.data_process.dataprocess method)": [[4, "streamline.dataprep.data_process.DataProcess.drop_invariant"]], "feature_engineering() (streamline.dataprep.data_process.dataprocess method)": [[4, "streamline.dataprep.data_process.DataProcess.feature_engineering"]], "feature_removal() (streamline.dataprep.data_process.dataprocess method)": [[4, "streamline.dataprep.data_process.DataProcess.feature_removal"]], "graph_selector() (streamline.dataprep.data_process.dataprocess method)": [[4, "streamline.dataprep.data_process.DataProcess.graph_selector"]], "identify_feature_types() (streamline.dataprep.data_process.dataprocess method)": [[4, "streamline.dataprep.data_process.DataProcess.identify_feature_types"]], "instance_removal() (streamline.dataprep.data_process.dataprocess method)": [[4, "streamline.dataprep.data_process.DataProcess.instance_removal"]], "join() (streamline.dataprep.data_process.dataprocess method)": [[4, "streamline.dataprep.data_process.DataProcess.join"]], "label_encoder() (streamline.dataprep.data_process.dataprocess method)": [[4, "streamline.dataprep.data_process.DataProcess.label_encoder"]], "make_log_folders() (streamline.dataprep.data_process.dataprocess method)": [[4, "streamline.dataprep.data_process.DataProcess.make_log_folders"]], "run() (streamline.dataprep.data_process.dataprocess method)": [[4, "streamline.dataprep.data_process.DataProcess.run"]], "run_process() (streamline.dataprep.data_process.dataprocess method)": [[4, "streamline.dataprep.data_process.DataProcess.run_process"]], "save_runtime() (streamline.dataprep.data_process.dataprocess method)": [[4, "streamline.dataprep.data_process.DataProcess.save_runtime"]], "second_eda() (streamline.dataprep.data_process.dataprocess method)": [[4, "streamline.dataprep.data_process.DataProcess.second_eda"]], "start() (streamline.dataprep.data_process.dataprocess method)": [[4, "streamline.dataprep.data_process.DataProcess.start"]], "streamline.dataprep.data_process": [[4, "module-streamline.dataprep.data_process"]], "test_selector() (streamline.dataprep.data_process.dataprocess method)": [[4, "streamline.dataprep.data_process.DataProcess.test_selector"]], "univariate_analysis() (streamline.dataprep.data_process.dataprocess method)": [[4, "streamline.dataprep.data_process.DataProcess.univariate_analysis"]], "univariate_plots() (streamline.dataprep.data_process.dataprocess method)": [[4, "streamline.dataprep.data_process.DataProcess.univariate_plots"]], "kfoldpartitioner (class in streamline.dataprep.kfold_partitioning)": [[6, "streamline.dataprep.kfold_partitioning.KFoldPartitioner"]], "cv_partitioner() (streamline.dataprep.kfold_partitioning.kfoldpartitioner method)": [[6, "streamline.dataprep.kfold_partitioning.KFoldPartitioner.cv_partitioner"]], "run() (streamline.dataprep.kfold_partitioning.kfoldpartitioner method)": [[6, "streamline.dataprep.kfold_partitioning.KFoldPartitioner.run"]], "save_datasets() (streamline.dataprep.kfold_partitioning.kfoldpartitioner method)": [[6, "streamline.dataprep.kfold_partitioning.KFoldPartitioner.save_datasets"]], "streamline.dataprep.kfold_partitioning": [[6, "module-streamline.dataprep.kfold_partitioning"]], "streamline.featurefns": [[7, "module-streamline.featurefns"]], "featureimportance (class in streamline.featurefns.importance)": [[8, "streamline.featurefns.importance.FeatureImportance"]], "pickle_scores() (streamline.featurefns.importance.featureimportance method)": [[8, "streamline.featurefns.importance.FeatureImportance.pickle_scores"]], "prepare_data() (streamline.featurefns.importance.featureimportance method)": [[8, "streamline.featurefns.importance.FeatureImportance.prepare_data"]], "run() (streamline.featurefns.importance.featureimportance method)": [[8, "streamline.featurefns.importance.FeatureImportance.run"]], "run_multi_surf() (streamline.featurefns.importance.featureimportance method)": [[8, "streamline.featurefns.importance.FeatureImportance.run_multi_surf"]], "run_mutual_information() (streamline.featurefns.importance.featureimportance method)": [[8, "streamline.featurefns.importance.FeatureImportance.run_mutual_information"]], "save_runtime() (streamline.featurefns.importance.featureimportance method)": [[8, "streamline.featurefns.importance.FeatureImportance.save_runtime"]], "sort_save_fi_scores() (streamline.featurefns.importance.featureimportance method)": [[8, "streamline.featurefns.importance.FeatureImportance.sort_save_fi_scores"]], "streamline.featurefns.importance": [[8, "module-streamline.featurefns.importance"]], "featureselection (class in streamline.featurefns.selection)": [[9, "streamline.featurefns.selection.FeatureSelection"]], "gen_filtered_datasets() (streamline.featurefns.selection.featureselection method)": [[9, "streamline.featurefns.selection.FeatureSelection.gen_filtered_datasets"]], "report_ave_fs() (streamline.featurefns.selection.featureselection method)": [[9, "streamline.featurefns.selection.FeatureSelection.report_ave_fs"]], "report_informative_features() (streamline.featurefns.selection.featureselection method)": [[9, "streamline.featurefns.selection.FeatureSelection.report_informative_features"]], "run() (streamline.featurefns.selection.featureselection method)": [[9, "streamline.featurefns.selection.FeatureSelection.run"]], "save_runtime() (streamline.featurefns.selection.featureselection method)": [[9, "streamline.featurefns.selection.FeatureSelection.save_runtime"]], "select_features() (streamline.featurefns.selection.featureselection method)": [[9, "streamline.featurefns.selection.FeatureSelection.select_features"]], "streamline.featurefns.selection": [[9, "module-streamline.featurefns.selection"]], "streamline.modeling": [[10, "module-streamline.modeling"]], "basemodel (class in streamline.modeling.basemodel)": [[11, "streamline.modeling.basemodel.BaseModel"]], "feature_importance() (streamline.modeling.basemodel.basemodel method)": [[11, "streamline.modeling.basemodel.BaseModel.feature_importance"]], "fit() (streamline.modeling.basemodel.basemodel method)": [[11, "streamline.modeling.basemodel.BaseModel.fit"]], "hyper_eval() (streamline.modeling.basemodel.basemodel method)": [[11, "streamline.modeling.basemodel.BaseModel.hyper_eval"]], "model_evaluation() (streamline.modeling.basemodel.basemodel method)": [[11, "streamline.modeling.basemodel.BaseModel.model_evaluation"]], "objective() (streamline.modeling.basemodel.basemodel method)": [[11, "streamline.modeling.basemodel.BaseModel.objective"]], "optimize() (streamline.modeling.basemodel.basemodel method)": [[11, "streamline.modeling.basemodel.BaseModel.optimize"]], "predict() (streamline.modeling.basemodel.basemodel method)": [[11, "streamline.modeling.basemodel.BaseModel.predict"]], "streamline.modeling.basemodel": [[11, "module-streamline.modeling.basemodel"]], "load_class_from_folder() (in module streamline.modeling.load_models)": [[12, "streamline.modeling.load_models.load_class_from_folder"]], "streamline.modeling.load_models": [[12, "module-streamline.modeling.load_models"]], "modeljob (class in streamline.modeling.modeljob)": [[13, "streamline.modeling.modeljob.ModelJob"]], "data_prep() (streamline.modeling.modeljob.modeljob method)": [[13, "streamline.modeling.modeljob.ModelJob.data_prep"]], "export_best_params() (streamline.modeling.modeljob.modeljob static method)": [[13, "streamline.modeling.modeljob.ModelJob.export_best_params"]], "run() (streamline.modeling.modeljob.modeljob method)": [[13, "streamline.modeling.modeljob.ModelJob.run"]], "run_model() (streamline.modeling.modeljob.modeljob method)": [[13, "streamline.modeling.modeljob.ModelJob.run_model"]], "save_runtime() (streamline.modeling.modeljob.modeljob method)": [[13, "streamline.modeling.modeljob.ModelJob.save_runtime"]], "streamline.modeling.modeljob": [[13, "module-streamline.modeling.modeljob"]], "get_parameters() (in module streamline.modeling.parameters)": [[14, "streamline.modeling.parameters.get_parameters"]], "streamline.modeling.parameters": [[14, "module-streamline.modeling.parameters"]], "get_fi_for_exstracs() (in module streamline.modeling.utils)": [[15, "streamline.modeling.utils.get_fi_for_ExSTraCS"]], "is_supported_model() (in module streamline.modeling.utils)": [[15, "streamline.modeling.utils.is_supported_model"]], "model_str_to_obj() (in module streamline.modeling.utils)": [[15, "streamline.modeling.utils.model_str_to_obj"]], "streamline.modeling.utils": [[15, "module-streamline.modeling.utils"]], "streamline.models": [[16, "module-streamline.models"]], "mlpclassifier (class in streamline.models.artificial_neural_network)": [[17, "streamline.models.artificial_neural_network.MLPClassifier"]], "color (streamline.models.artificial_neural_network.mlpclassifier attribute)": [[17, "streamline.models.artificial_neural_network.MLPClassifier.color"]], "model_name (streamline.models.artificial_neural_network.mlpclassifier attribute)": [[17, "streamline.models.artificial_neural_network.MLPClassifier.model_name"]], "objective() (streamline.models.artificial_neural_network.mlpclassifier method)": [[17, "streamline.models.artificial_neural_network.MLPClassifier.objective"]], "small_name (streamline.models.artificial_neural_network.mlpclassifier attribute)": [[17, "streamline.models.artificial_neural_network.MLPClassifier.small_name"]], "streamline.models.artificial_neural_network": [[17, "module-streamline.models.artificial_neural_network"]], "decisiontreeclassifier (class in streamline.models.decision_tree)": [[18, "streamline.models.decision_tree.DecisionTreeClassifier"]], "color (streamline.models.decision_tree.decisiontreeclassifier attribute)": [[18, "streamline.models.decision_tree.DecisionTreeClassifier.color"]], "model_name (streamline.models.decision_tree.decisiontreeclassifier attribute)": [[18, "streamline.models.decision_tree.DecisionTreeClassifier.model_name"]], "objective() (streamline.models.decision_tree.decisiontreeclassifier method)": [[18, "streamline.models.decision_tree.DecisionTreeClassifier.objective"]], "small_name (streamline.models.decision_tree.decisiontreeclassifier attribute)": [[18, "streamline.models.decision_tree.DecisionTreeClassifier.small_name"]], "streamline.models.decision_tree": [[18, "module-streamline.models.decision_tree"]], "elasticnetclassifier (class in streamline.models.elastic_net)": [[19, "streamline.models.elastic_net.ElasticNetClassifier"]], "color (streamline.models.elastic_net.elasticnetclassifier attribute)": [[19, "streamline.models.elastic_net.ElasticNetClassifier.color"]], "model_name (streamline.models.elastic_net.elasticnetclassifier attribute)": [[19, "streamline.models.elastic_net.ElasticNetClassifier.model_name"]], "objective() (streamline.models.elastic_net.elasticnetclassifier method)": [[19, "streamline.models.elastic_net.ElasticNetClassifier.objective"]], "small_name (streamline.models.elastic_net.elasticnetclassifier attribute)": [[19, "streamline.models.elastic_net.ElasticNetClassifier.small_name"]], "streamline.models.elastic_net": [[19, "module-streamline.models.elastic_net"]], "gpclassifier (class in streamline.models.genetic_programming)": [[20, "streamline.models.genetic_programming.GPClassifier"]], "color (streamline.models.genetic_programming.gpclassifier attribute)": [[20, "streamline.models.genetic_programming.GPClassifier.color"]], "model_name (streamline.models.genetic_programming.gpclassifier attribute)": [[20, "streamline.models.genetic_programming.GPClassifier.model_name"]], "objective() (streamline.models.genetic_programming.gpclassifier method)": [[20, "streamline.models.genetic_programming.GPClassifier.objective"]], "small_name (streamline.models.genetic_programming.gpclassifier attribute)": [[20, "streamline.models.genetic_programming.GPClassifier.small_name"]], "streamline.models.genetic_programming": [[20, "module-streamline.models.genetic_programming"]], "cgbclassifier (class in streamline.models.gradient_boosting)": [[21, "streamline.models.gradient_boosting.CGBClassifier"]], "gbclassifier (class in streamline.models.gradient_boosting)": [[21, "streamline.models.gradient_boosting.GBClassifier"]], "lgbclassifier (class in streamline.models.gradient_boosting)": [[21, "streamline.models.gradient_boosting.LGBClassifier"]], "xgbclassifier (class in streamline.models.gradient_boosting)": [[21, "streamline.models.gradient_boosting.XGBClassifier"]], "color (streamline.models.gradient_boosting.cgbclassifier attribute)": [[21, "streamline.models.gradient_boosting.CGBClassifier.color"]], "color (streamline.models.gradient_boosting.gbclassifier attribute)": [[21, "streamline.models.gradient_boosting.GBClassifier.color"]], "color (streamline.models.gradient_boosting.lgbclassifier attribute)": [[21, "streamline.models.gradient_boosting.LGBClassifier.color"]], "color (streamline.models.gradient_boosting.xgbclassifier attribute)": [[21, "streamline.models.gradient_boosting.XGBClassifier.color"]], "model_name (streamline.models.gradient_boosting.cgbclassifier attribute)": [[21, "streamline.models.gradient_boosting.CGBClassifier.model_name"]], "model_name (streamline.models.gradient_boosting.gbclassifier attribute)": [[21, "streamline.models.gradient_boosting.GBClassifier.model_name"]], "model_name (streamline.models.gradient_boosting.lgbclassifier attribute)": [[21, "streamline.models.gradient_boosting.LGBClassifier.model_name"]], "model_name (streamline.models.gradient_boosting.xgbclassifier attribute)": [[21, "streamline.models.gradient_boosting.XGBClassifier.model_name"]], "objective() (streamline.models.gradient_boosting.cgbclassifier method)": [[21, "streamline.models.gradient_boosting.CGBClassifier.objective"]], "objective() (streamline.models.gradient_boosting.gbclassifier method)": [[21, "streamline.models.gradient_boosting.GBClassifier.objective"]], "objective() (streamline.models.gradient_boosting.lgbclassifier method)": [[21, "streamline.models.gradient_boosting.LGBClassifier.objective"]], "objective() (streamline.models.gradient_boosting.xgbclassifier method)": [[21, "streamline.models.gradient_boosting.XGBClassifier.objective"]], "small_name (streamline.models.gradient_boosting.cgbclassifier attribute)": [[21, "streamline.models.gradient_boosting.CGBClassifier.small_name"]], "small_name (streamline.models.gradient_boosting.gbclassifier attribute)": [[21, "streamline.models.gradient_boosting.GBClassifier.small_name"]], "small_name (streamline.models.gradient_boosting.lgbclassifier attribute)": [[21, "streamline.models.gradient_boosting.LGBClassifier.small_name"]], "small_name (streamline.models.gradient_boosting.xgbclassifier attribute)": [[21, "streamline.models.gradient_boosting.XGBClassifier.small_name"]], "streamline.models.gradient_boosting": [[21, "module-streamline.models.gradient_boosting"]], "exstracsclassifier (class in streamline.models.learning_based)": [[22, "streamline.models.learning_based.ExSTraCSClassifier"]], "xcsclassifier (class in streamline.models.learning_based)": [[22, "streamline.models.learning_based.XCSClassifier"]], "color (streamline.models.learning_based.exstracsclassifier attribute)": [[22, "streamline.models.learning_based.ExSTraCSClassifier.color"]], "color (streamline.models.learning_based.xcsclassifier attribute)": [[22, "streamline.models.learning_based.XCSClassifier.color"]], "color (streamline.models.learning_based.elcsclassifier attribute)": [[22, "streamline.models.learning_based.eLCSClassifier.color"]], "elcsclassifier (class in streamline.models.learning_based)": [[22, "streamline.models.learning_based.eLCSClassifier"]], "model_name (streamline.models.learning_based.exstracsclassifier attribute)": [[22, "streamline.models.learning_based.ExSTraCSClassifier.model_name"]], "model_name (streamline.models.learning_based.xcsclassifier attribute)": [[22, "streamline.models.learning_based.XCSClassifier.model_name"]], "model_name (streamline.models.learning_based.elcsclassifier attribute)": [[22, "streamline.models.learning_based.eLCSClassifier.model_name"]], "objective() (streamline.models.learning_based.exstracsclassifier method)": [[22, "streamline.models.learning_based.ExSTraCSClassifier.objective"]], "objective() (streamline.models.learning_based.xcsclassifier method)": [[22, "streamline.models.learning_based.XCSClassifier.objective"]], "objective() (streamline.models.learning_based.elcsclassifier method)": [[22, "streamline.models.learning_based.eLCSClassifier.objective"]], "small_name (streamline.models.learning_based.exstracsclassifier attribute)": [[22, "streamline.models.learning_based.ExSTraCSClassifier.small_name"]], "small_name (streamline.models.learning_based.xcsclassifier attribute)": [[22, "streamline.models.learning_based.XCSClassifier.small_name"]], "small_name (streamline.models.learning_based.elcsclassifier attribute)": [[22, "streamline.models.learning_based.eLCSClassifier.small_name"]], "streamline.models.learning_based": [[22, "module-streamline.models.learning_based"]], "logisticregression (class in streamline.models.linear_model)": [[23, "streamline.models.linear_model.LogisticRegression"]], "color (streamline.models.linear_model.logisticregression attribute)": [[23, "streamline.models.linear_model.LogisticRegression.color"]], "model_name (streamline.models.linear_model.logisticregression attribute)": [[23, "streamline.models.linear_model.LogisticRegression.model_name"]], "objective() (streamline.models.linear_model.logisticregression method)": [[23, "streamline.models.linear_model.LogisticRegression.objective"]], "small_name (streamline.models.linear_model.logisticregression attribute)": [[23, "streamline.models.linear_model.LogisticRegression.small_name"]], "streamline.models.linear_model": [[23, "module-streamline.models.linear_model"]], "naivebayesclassifier (class in streamline.models.naive_bayes)": [[24, "streamline.models.naive_bayes.NaiveBayesClassifier"]], "color (streamline.models.naive_bayes.naivebayesclassifier attribute)": [[24, "streamline.models.naive_bayes.NaiveBayesClassifier.color"]], "model_name (streamline.models.naive_bayes.naivebayesclassifier attribute)": [[24, "streamline.models.naive_bayes.NaiveBayesClassifier.model_name"]], "objective() (streamline.models.naive_bayes.naivebayesclassifier method)": [[24, "streamline.models.naive_bayes.NaiveBayesClassifier.objective"]], "small_name (streamline.models.naive_bayes.naivebayesclassifier attribute)": [[24, "streamline.models.naive_bayes.NaiveBayesClassifier.small_name"]], "streamline.models.naive_bayes": [[24, "module-streamline.models.naive_bayes"]], "knnclassifier (class in streamline.models.neighbouring)": [[25, "streamline.models.neighbouring.KNNClassifier"]], "color (streamline.models.neighbouring.knnclassifier attribute)": [[25, "streamline.models.neighbouring.KNNClassifier.color"]], "model_name (streamline.models.neighbouring.knnclassifier attribute)": [[25, "streamline.models.neighbouring.KNNClassifier.model_name"]], "objective() (streamline.models.neighbouring.knnclassifier method)": [[25, "streamline.models.neighbouring.KNNClassifier.objective"]], "small_name (streamline.models.neighbouring.knnclassifier attribute)": [[25, "streamline.models.neighbouring.KNNClassifier.small_name"]], "streamline.models.neighbouring": [[25, "module-streamline.models.neighbouring"]], "randomforestclassifier (class in streamline.models.random_forest)": [[26, "streamline.models.random_forest.RandomForestClassifier"]], "color (streamline.models.random_forest.randomforestclassifier attribute)": [[26, "streamline.models.random_forest.RandomForestClassifier.color"]], "model_name (streamline.models.random_forest.randomforestclassifier attribute)": [[26, "streamline.models.random_forest.RandomForestClassifier.model_name"]], "objective() (streamline.models.random_forest.randomforestclassifier method)": [[26, "streamline.models.random_forest.RandomForestClassifier.objective"]], "small_name (streamline.models.random_forest.randomforestclassifier attribute)": [[26, "streamline.models.random_forest.RandomForestClassifier.small_name"]], "streamline.models.random_forest": [[26, "module-streamline.models.random_forest"]], "supportvectorclassifier (class in streamline.models.support_vector_machine)": [[27, "streamline.models.support_vector_machine.SupportVectorClassifier"]], "color (streamline.models.support_vector_machine.supportvectorclassifier attribute)": [[27, "streamline.models.support_vector_machine.SupportVectorClassifier.color"]], "model_name (streamline.models.support_vector_machine.supportvectorclassifier attribute)": [[27, "streamline.models.support_vector_machine.SupportVectorClassifier.model_name"]], "objective() (streamline.models.support_vector_machine.supportvectorclassifier method)": [[27, "streamline.models.support_vector_machine.SupportVectorClassifier.objective"]], "small_name (streamline.models.support_vector_machine.supportvectorclassifier attribute)": [[27, "streamline.models.support_vector_machine.SupportVectorClassifier.small_name"]], "streamline.models.support_vector_machine": [[27, "module-streamline.models.support_vector_machine"]], "streamline.postanalysis": [[28, "module-streamline.postanalysis"]], "comparejob (class in streamline.postanalysis.dataset_compare)": [[29, "streamline.postanalysis.dataset_compare.CompareJob"]], "best_kruscall_wallis() (streamline.postanalysis.dataset_compare.comparejob method)": [[29, "streamline.postanalysis.dataset_compare.CompareJob.best_kruscall_wallis"]], "best_mann_whitney_u() (streamline.postanalysis.dataset_compare.comparejob method)": [[29, "streamline.postanalysis.dataset_compare.CompareJob.best_mann_whitney_u"]], "best_wilcoxon_rank() (streamline.postanalysis.dataset_compare.comparejob method)": [[29, "streamline.postanalysis.dataset_compare.CompareJob.best_wilcoxon_rank"]], "data_compare_bp() (streamline.postanalysis.dataset_compare.comparejob method)": [[29, "streamline.postanalysis.dataset_compare.CompareJob.data_compare_bp"]], "data_compare_bp_all() (streamline.postanalysis.dataset_compare.comparejob method)": [[29, "streamline.postanalysis.dataset_compare.CompareJob.data_compare_bp_all"]], "inter_set_best_fn() (streamline.postanalysis.dataset_compare.comparejob method)": [[29, "streamline.postanalysis.dataset_compare.CompareJob.inter_set_best_fn"]], "inter_set_fn() (streamline.postanalysis.dataset_compare.comparejob method)": [[29, "streamline.postanalysis.dataset_compare.CompareJob.inter_set_fn"]], "kruscall_wallis() (streamline.postanalysis.dataset_compare.comparejob method)": [[29, "streamline.postanalysis.dataset_compare.CompareJob.kruscall_wallis"]], "mann_whitney_u() (streamline.postanalysis.dataset_compare.comparejob method)": [[29, "streamline.postanalysis.dataset_compare.CompareJob.mann_whitney_u"]], "run() (streamline.postanalysis.dataset_compare.comparejob method)": [[29, "streamline.postanalysis.dataset_compare.CompareJob.run"]], "save_runtime() (streamline.postanalysis.dataset_compare.comparejob method)": [[29, "streamline.postanalysis.dataset_compare.CompareJob.save_runtime"]], "streamline.postanalysis.dataset_compare": [[29, "module-streamline.postanalysis.dataset_compare"]], "temp_summary() (streamline.postanalysis.dataset_compare.comparejob method)": [[29, "streamline.postanalysis.dataset_compare.CompareJob.temp_summary"]], "wilcoxon_rank() (streamline.postanalysis.dataset_compare.comparejob method)": [[29, "streamline.postanalysis.dataset_compare.CompareJob.wilcoxon_rank"]], "reportjob (class in streamline.postanalysis.gererate_report)": [[30, "streamline.postanalysis.gererate_report.ReportJob"]], "footer() (streamline.postanalysis.gererate_report.reportjob method)": [[30, "streamline.postanalysis.gererate_report.ReportJob.footer"]], "format_fn() (streamline.postanalysis.gererate_report.reportjob method)": [[30, "streamline.postanalysis.gererate_report.ReportJob.format_fn"]], "job() (streamline.postanalysis.gererate_report.reportjob method)": [[30, "streamline.postanalysis.gererate_report.ReportJob.job"]], "list_to_string() (in module streamline.postanalysis.gererate_report)": [[30, "streamline.postanalysis.gererate_report.list_to_string"]], "ngi() (in module streamline.postanalysis.gererate_report)": [[30, "streamline.postanalysis.gererate_report.ngi"]], "pub_model_mean_stats() (streamline.postanalysis.gererate_report.reportjob method)": [[30, "streamline.postanalysis.gererate_report.ReportJob.pub_model_mean_stats"]], "pub_model_median_stats() (streamline.postanalysis.gererate_report.reportjob method)": [[30, "streamline.postanalysis.gererate_report.ReportJob.pub_model_median_stats"]], "pub_runtime() (streamline.postanalysis.gererate_report.reportjob method)": [[30, "streamline.postanalysis.gererate_report.ReportJob.pub_runtime"]], "pub_univariate() (streamline.postanalysis.gererate_report.reportjob method)": [[30, "streamline.postanalysis.gererate_report.ReportJob.pub_univariate"]], "run() (streamline.postanalysis.gererate_report.reportjob method)": [[30, "streamline.postanalysis.gererate_report.ReportJob.run"]], "streamline.postanalysis.gererate_report": [[30, "module-streamline.postanalysis.gererate_report"]], "replicatejob (class in streamline.postanalysis.model_replicate)": [[31, "streamline.postanalysis.model_replicate.ReplicateJob"]], "eval_model() (streamline.postanalysis.model_replicate.replicatejob method)": [[31, "streamline.postanalysis.model_replicate.ReplicateJob.eval_model"]], "impute_rep_data() (streamline.postanalysis.model_replicate.replicatejob method)": [[31, "streamline.postanalysis.model_replicate.ReplicateJob.impute_rep_data"]], "run() (streamline.postanalysis.model_replicate.replicatejob method)": [[31, "streamline.postanalysis.model_replicate.ReplicateJob.run"]], "scale_rep_data() (streamline.postanalysis.model_replicate.replicatejob method)": [[31, "streamline.postanalysis.model_replicate.ReplicateJob.scale_rep_data"]], "streamline.postanalysis.model_replicate": [[31, "module-streamline.postanalysis.model_replicate"]], "statsjob (class in streamline.postanalysis.statistics)": [[32, "streamline.postanalysis.statistics.StatsJob"]], "composite_fi_plot() (streamline.postanalysis.statistics.statsjob method)": [[32, "streamline.postanalysis.statistics.StatsJob.composite_fi_plot"]], "do_fi_boxplots() (streamline.postanalysis.statistics.statsjob method)": [[32, "streamline.postanalysis.statistics.StatsJob.do_fi_boxplots"]], "do_fi_histogram() (streamline.postanalysis.statistics.statsjob method)": [[32, "streamline.postanalysis.statistics.StatsJob.do_fi_histogram"]], "do_model_prc() (streamline.postanalysis.statistics.statsjob method)": [[32, "streamline.postanalysis.statistics.StatsJob.do_model_prc"]], "do_model_roc() (streamline.postanalysis.statistics.statsjob method)": [[32, "streamline.postanalysis.statistics.StatsJob.do_model_roc"]], "do_plot_prc() (streamline.postanalysis.statistics.statsjob method)": [[32, "streamline.postanalysis.statistics.StatsJob.do_plot_prc"]], "do_plot_roc() (streamline.postanalysis.statistics.statsjob method)": [[32, "streamline.postanalysis.statistics.StatsJob.do_plot_roc"]], "fi_stats() (streamline.postanalysis.statistics.statsjob method)": [[32, "streamline.postanalysis.statistics.StatsJob.fi_stats"]], "frac_fi() (streamline.postanalysis.statistics.statsjob static method)": [[32, "streamline.postanalysis.statistics.StatsJob.frac_fi"]], "get_fi_to_viz_sorted() (streamline.postanalysis.statistics.statsjob method)": [[32, "streamline.postanalysis.statistics.StatsJob.get_fi_to_viz_sorted"]], "kruskal_wallis() (streamline.postanalysis.statistics.statsjob method)": [[32, "streamline.postanalysis.statistics.StatsJob.kruskal_wallis"]], "mann_whitney_u() (streamline.postanalysis.statistics.statsjob method)": [[32, "streamline.postanalysis.statistics.StatsJob.mann_whitney_u"]], "metric_boxplots() (streamline.postanalysis.statistics.statsjob method)": [[32, "streamline.postanalysis.statistics.StatsJob.metric_boxplots"]], "parse_runtime() (streamline.postanalysis.statistics.statsjob method)": [[32, "streamline.postanalysis.statistics.StatsJob.parse_runtime"]], "prep_fi() (streamline.postanalysis.statistics.statsjob method)": [[32, "streamline.postanalysis.statistics.StatsJob.prep_fi"]], "preparation() (streamline.postanalysis.statistics.statsjob method)": [[32, "streamline.postanalysis.statistics.StatsJob.preparation"]], "primary_stats() (streamline.postanalysis.statistics.statsjob method)": [[32, "streamline.postanalysis.statistics.StatsJob.primary_stats"]], "run() (streamline.postanalysis.statistics.statsjob method)": [[32, "streamline.postanalysis.statistics.StatsJob.run"]], "save_fi() (streamline.postanalysis.statistics.statsjob method)": [[32, "streamline.postanalysis.statistics.StatsJob.save_fi"]], "save_metric_stats() (streamline.postanalysis.statistics.statsjob method)": [[32, "streamline.postanalysis.statistics.StatsJob.save_metric_stats"]], "save_runtime() (streamline.postanalysis.statistics.statsjob method)": [[32, "streamline.postanalysis.statistics.StatsJob.save_runtime"]], "select_for_composite_viz() (streamline.postanalysis.statistics.statsjob method)": [[32, "streamline.postanalysis.statistics.StatsJob.select_for_composite_viz"]], "streamline.postanalysis.statistics": [[32, "module-streamline.postanalysis.statistics"]], "weight_fi() (streamline.postanalysis.statistics.statsjob static method)": [[32, "streamline.postanalysis.statistics.StatsJob.weight_fi"]], "weight_frac_fi() (streamline.postanalysis.statistics.statsjob static method)": [[32, "streamline.postanalysis.statistics.StatsJob.weight_frac_fi"]], "wilcoxon_rank() (streamline.postanalysis.statistics.statsjob method)": [[32, "streamline.postanalysis.statistics.StatsJob.wilcoxon_rank"]], "streamline.runners": [[33, "module-streamline.runners"]], "cleanrunner (class in streamline.runners.clean_runner)": [[34, "streamline.runners.clean_runner.CleanRunner"]], "run() (streamline.runners.clean_runner.cleanrunner method)": [[34, "streamline.runners.clean_runner.CleanRunner.run"]], "streamline.runners.clean_runner": [[34, "module-streamline.runners.clean_runner"]], "comparerunner (class in streamline.runners.compare_runner)": [[35, "streamline.runners.compare_runner.CompareRunner"]], "get_cluster_params() (streamline.runners.compare_runner.comparerunner method)": [[35, "streamline.runners.compare_runner.CompareRunner.get_cluster_params"]], "run() (streamline.runners.compare_runner.comparerunner method)": [[35, "streamline.runners.compare_runner.CompareRunner.run"]], "streamline.runners.compare_runner": [[35, "module-streamline.runners.compare_runner"]], "submit_lsf_cluster_job() (streamline.runners.compare_runner.comparerunner method)": [[35, "streamline.runners.compare_runner.CompareRunner.submit_lsf_cluster_job"]], "submit_slurm_cluster_job() (streamline.runners.compare_runner.comparerunner method)": [[35, "streamline.runners.compare_runner.CompareRunner.submit_slurm_cluster_job"]], "dataprocessrunner (class in streamline.runners.dataprocess_runner)": [[36, "streamline.runners.dataprocess_runner.DataProcessRunner"]], "get_cluster_params() (streamline.runners.dataprocess_runner.dataprocessrunner method)": [[36, "streamline.runners.dataprocess_runner.DataProcessRunner.get_cluster_params"]], "make_dir_tree() (streamline.runners.dataprocess_runner.dataprocessrunner method)": [[36, "streamline.runners.dataprocess_runner.DataProcessRunner.make_dir_tree"]], "run() (streamline.runners.dataprocess_runner.dataprocessrunner method)": [[36, "streamline.runners.dataprocess_runner.DataProcessRunner.run"]], "save_metadata() (streamline.runners.dataprocess_runner.dataprocessrunner method)": [[36, "streamline.runners.dataprocess_runner.DataProcessRunner.save_metadata"]], "streamline.runners.dataprocess_runner": [[36, "module-streamline.runners.dataprocess_runner"]], "submit_lsf_cluster_job() (streamline.runners.dataprocess_runner.dataprocessrunner method)": [[36, "streamline.runners.dataprocess_runner.DataProcessRunner.submit_lsf_cluster_job"]], "submit_slurm_cluster_job() (streamline.runners.dataprocess_runner.dataprocessrunner method)": [[36, "streamline.runners.dataprocess_runner.DataProcessRunner.submit_slurm_cluster_job"]], "featureimportancerunner (class in streamline.runners.feature_runner)": [[38, "streamline.runners.feature_runner.FeatureImportanceRunner"]], "featureselectionrunner (class in streamline.runners.feature_runner)": [[38, "streamline.runners.feature_runner.FeatureSelectionRunner"]], "get_cluster_params() (streamline.runners.feature_runner.featureimportancerunner method)": [[38, "streamline.runners.feature_runner.FeatureImportanceRunner.get_cluster_params"]], "get_cluster_params() (streamline.runners.feature_runner.featureselectionrunner method)": [[38, "streamline.runners.feature_runner.FeatureSelectionRunner.get_cluster_params"]], "run() (streamline.runners.feature_runner.featureimportancerunner method)": [[38, "streamline.runners.feature_runner.FeatureImportanceRunner.run"]], "run() (streamline.runners.feature_runner.featureselectionrunner method)": [[38, "streamline.runners.feature_runner.FeatureSelectionRunner.run"]], "save_metadata() (streamline.runners.feature_runner.featureimportancerunner method)": [[38, "streamline.runners.feature_runner.FeatureImportanceRunner.save_metadata"]], "save_metadata() (streamline.runners.feature_runner.featureselectionrunner method)": [[38, "streamline.runners.feature_runner.FeatureSelectionRunner.save_metadata"]], "streamline.runners.feature_runner": [[38, "module-streamline.runners.feature_runner"]], "submit_lsf_cluster_job() (streamline.runners.feature_runner.featureimportancerunner method)": [[38, "streamline.runners.feature_runner.FeatureImportanceRunner.submit_lsf_cluster_job"]], "submit_lsf_cluster_job() (streamline.runners.feature_runner.featureselectionrunner method)": [[38, "streamline.runners.feature_runner.FeatureSelectionRunner.submit_lsf_cluster_job"]], "submit_slurm_cluster_job() (streamline.runners.feature_runner.featureimportancerunner method)": [[38, "streamline.runners.feature_runner.FeatureImportanceRunner.submit_slurm_cluster_job"]], "submit_slurm_cluster_job() (streamline.runners.feature_runner.featureselectionrunner method)": [[38, "streamline.runners.feature_runner.FeatureSelectionRunner.submit_slurm_cluster_job"]], "modelexperimentrunner (class in streamline.runners.model_runner)": [[39, "streamline.runners.model_runner.ModelExperimentRunner"]], "get_cluster_params() (streamline.runners.model_runner.modelexperimentrunner method)": [[39, "streamline.runners.model_runner.ModelExperimentRunner.get_cluster_params"]], "run() (streamline.runners.model_runner.modelexperimentrunner method)": [[39, "streamline.runners.model_runner.ModelExperimentRunner.run"]], "save_alginfo() (streamline.runners.model_runner.modelexperimentrunner method)": [[39, "streamline.runners.model_runner.ModelExperimentRunner.save_alginfo"]], "save_metadata() (streamline.runners.model_runner.modelexperimentrunner method)": [[39, "streamline.runners.model_runner.ModelExperimentRunner.save_metadata"]], "streamline.runners.model_runner": [[39, "module-streamline.runners.model_runner"]], "submit_lsf_cluster_job() (streamline.runners.model_runner.modelexperimentrunner method)": [[39, "streamline.runners.model_runner.ModelExperimentRunner.submit_lsf_cluster_job"]], "submit_slurm_cluster_job() (streamline.runners.model_runner.modelexperimentrunner method)": [[39, "streamline.runners.model_runner.ModelExperimentRunner.submit_slurm_cluster_job"]], "replicationrunner (class in streamline.runners.replicate_runner)": [[40, "streamline.runners.replicate_runner.ReplicationRunner"]], "get_algorithms() (streamline.runners.replicate_runner.replicationrunner method)": [[40, "streamline.runners.replicate_runner.ReplicationRunner.get_algorithms"]], "get_cluster_params() (streamline.runners.replicate_runner.replicationrunner method)": [[40, "streamline.runners.replicate_runner.ReplicationRunner.get_cluster_params"]], "run() (streamline.runners.replicate_runner.replicationrunner method)": [[40, "streamline.runners.replicate_runner.ReplicationRunner.run"]], "save_metadata() (streamline.runners.replicate_runner.replicationrunner method)": [[40, "streamline.runners.replicate_runner.ReplicationRunner.save_metadata"]], "streamline.runners.replicate_runner": [[40, "module-streamline.runners.replicate_runner"]], "submit_lsf_cluster_job() (streamline.runners.replicate_runner.replicationrunner method)": [[40, "streamline.runners.replicate_runner.ReplicationRunner.submit_lsf_cluster_job"]], "submit_slurm_cluster_job() (streamline.runners.replicate_runner.replicationrunner method)": [[40, "streamline.runners.replicate_runner.ReplicationRunner.submit_slurm_cluster_job"]], "reportrunner (class in streamline.runners.report_runner)": [[41, "streamline.runners.report_runner.ReportRunner"]], "get_cluster_params() (streamline.runners.report_runner.reportrunner method)": [[41, "streamline.runners.report_runner.ReportRunner.get_cluster_params"]], "run() (streamline.runners.report_runner.reportrunner method)": [[41, "streamline.runners.report_runner.ReportRunner.run"]], "streamline.runners.report_runner": [[41, "module-streamline.runners.report_runner"]], "submit_lsf_cluster_job() (streamline.runners.report_runner.reportrunner method)": [[41, "streamline.runners.report_runner.ReportRunner.submit_lsf_cluster_job"]], "submit_slurm_cluster_job() (streamline.runners.report_runner.reportrunner method)": [[41, "streamline.runners.report_runner.ReportRunner.submit_slurm_cluster_job"]], "statsrunner (class in streamline.runners.stats_runner)": [[42, "streamline.runners.stats_runner.StatsRunner"]], "get_cluster_params() (streamline.runners.stats_runner.statsrunner method)": [[42, "streamline.runners.stats_runner.StatsRunner.get_cluster_params"]], "run() (streamline.runners.stats_runner.statsrunner method)": [[42, "streamline.runners.stats_runner.StatsRunner.run"]], "save_metadata() (streamline.runners.stats_runner.statsrunner method)": [[42, "streamline.runners.stats_runner.StatsRunner.save_metadata"]], "streamline.runners.stats_runner": [[42, "module-streamline.runners.stats_runner"]], "submit_lsf_cluster_job() (streamline.runners.stats_runner.statsrunner method)": [[42, "streamline.runners.stats_runner.StatsRunner.submit_lsf_cluster_job"]], "submit_slurm_cluster_job() (streamline.runners.stats_runner.statsrunner method)": [[42, "streamline.runners.stats_runner.StatsRunner.submit_slurm_cluster_job"]], "streamline.utils": [[43, "module-streamline.utils"]], "check_phase() (in module streamline.utils.checker)": [[44, "streamline.utils.checker.check_phase"]], "check_phase_1() (in module streamline.utils.checker)": [[44, "streamline.utils.checker.check_phase_1"]], "check_phase_10() (in module streamline.utils.checker)": [[44, "streamline.utils.checker.check_phase_10"]], "check_phase_11() (in module streamline.utils.checker)": [[44, "streamline.utils.checker.check_phase_11"]], "check_phase_2() (in module streamline.utils.checker)": [[44, "streamline.utils.checker.check_phase_2"]], "check_phase_3() (in module streamline.utils.checker)": [[44, "streamline.utils.checker.check_phase_3"]], "check_phase_4() (in module streamline.utils.checker)": [[44, "streamline.utils.checker.check_phase_4"]], "check_phase_5() (in module streamline.utils.checker)": [[44, "streamline.utils.checker.check_phase_5"]], "check_phase_6() (in module streamline.utils.checker)": [[44, "streamline.utils.checker.check_phase_6"]], "check_phase_7() (in module streamline.utils.checker)": [[44, "streamline.utils.checker.check_phase_7"]], "check_phase_8() (in module streamline.utils.checker)": [[44, "streamline.utils.checker.check_phase_8"]], "check_phase_9() (in module streamline.utils.checker)": [[44, "streamline.utils.checker.check_phase_9"]], "streamline.utils.checker": [[44, "module-streamline.utils.checker"]], "cleaner (class in streamline.utils.cleanup)": [[45, "streamline.utils.cleanup.Cleaner"]], "rm_tree() (streamline.utils.cleanup.cleaner static method)": [[45, "streamline.utils.cleanup.Cleaner.rm_tree"]], "run() (streamline.utils.cleanup.cleaner method)": [[45, "streamline.utils.cleanup.Cleaner.run"]], "streamline.utils.cleanup": [[45, "module-streamline.utils.cleanup"]], "get_cluster() (in module streamline.utils.cluster)": [[46, "streamline.utils.cluster.get_cluster"]], "streamline.utils.cluster": [[46, "module-streamline.utils.cluster"]], "dataset (class in streamline.utils.dataset)": [[47, "streamline.utils.dataset.Dataset"]], "clean_data() (streamline.utils.dataset.dataset method)": [[47, "streamline.utils.dataset.Dataset.clean_data"]], "counts_summary() (streamline.utils.dataset.dataset method)": [[47, "streamline.utils.dataset.Dataset.counts_summary"]], "describe_data() (streamline.utils.dataset.dataset method)": [[47, "streamline.utils.dataset.Dataset.describe_data"]], "eda() (streamline.utils.dataset.dataset method)": [[47, "streamline.utils.dataset.Dataset.eda"]], "feature_correlation() (streamline.utils.dataset.dataset method)": [[47, "streamline.utils.dataset.Dataset.feature_correlation"]], "feature_only_data() (streamline.utils.dataset.dataset method)": [[47, "streamline.utils.dataset.Dataset.feature_only_data"]], "get_headers() (streamline.utils.dataset.dataset method)": [[47, "streamline.utils.dataset.Dataset.get_headers"]], "get_outcome() (streamline.utils.dataset.dataset method)": [[47, "streamline.utils.dataset.Dataset.get_outcome"]], "initial_eda() (streamline.utils.dataset.dataset method)": [[47, "streamline.utils.dataset.Dataset.initial_eda"]], "load_data() (streamline.utils.dataset.dataset method)": [[47, "streamline.utils.dataset.Dataset.load_data"]], "missing_count_plot() (streamline.utils.dataset.dataset method)": [[47, "streamline.utils.dataset.Dataset.missing_count_plot"]], "missingness_counts() (streamline.utils.dataset.dataset method)": [[47, "streamline.utils.dataset.Dataset.missingness_counts"]], "non_feature_data() (streamline.utils.dataset.dataset method)": [[47, "streamline.utils.dataset.Dataset.non_feature_data"]], "set_original_headers() (streamline.utils.dataset.dataset method)": [[47, "streamline.utils.dataset.Dataset.set_original_headers"]], "set_processed_headers() (streamline.utils.dataset.dataset method)": [[47, "streamline.utils.dataset.Dataset.set_processed_headers"]], "streamline.utils.dataset": [[47, "module-streamline.utils.dataset"]], "class_eval() (in module streamline.utils.evaluation)": [[48, "streamline.utils.evaluation.class_eval"]], "streamline.utils.evaluation": [[48, "module-streamline.utils.evaluation"]], "job (class in streamline.utils.job)": [[49, "streamline.utils.job.Job"]], "run() (streamline.utils.job.job method)": [[49, "streamline.utils.job.Job.run"]], "run_cluster() (streamline.utils.job.job method)": [[49, "streamline.utils.job.Job.run_cluster"]], "streamline.utils.job": [[49, "module-streamline.utils.job"]], "parser_function() (in module streamline.utils.parser)": [[50, "streamline.utils.parser.parser_function"]], "process_params() (in module streamline.utils.parser)": [[50, "streamline.utils.parser.process_params"]], "single_parse() (in module streamline.utils.parser)": [[50, "streamline.utils.parser.single_parse"]], "streamline.utils.parser": [[50, "module-streamline.utils.parser"]], "check_if_single_phase() (in module streamline.utils.runners)": [[51, "streamline.utils.runners.check_if_single_phase"]], "model_runner_fn() (in module streamline.utils.runners)": [[51, "streamline.utils.runners.model_runner_fn"]], "parallel_eda_call() (in module streamline.utils.runners)": [[51, "streamline.utils.runners.parallel_eda_call"]], "run_jobs() (in module streamline.utils.runners)": [[51, "streamline.utils.runners.run_jobs"]], "runner_fn() (in module streamline.utils.runners)": [[51, "streamline.utils.runners.runner_fn"]], "streamline.utils.runners": [[51, "module-streamline.utils.runners"]], "sub_jobs() (in module streamline.utils.runners)": [[51, "streamline.utils.runners.sub_jobs"]]}})
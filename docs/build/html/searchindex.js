Search.setIndex({"docnames": ["about", "citation", "development", "index", "installation", "modules", "streamline", "streamline.dataprep", "streamline.dataprep.data_process", "streamline.dataprep.exploratory_analysis", "streamline.dataprep.kfold_partitioning", "streamline.featurefns", "streamline.featurefns.importance", "streamline.featurefns.selection", "streamline.modeling", "streamline.modeling.basemodel", "streamline.modeling.load_models", "streamline.modeling.modeljob", "streamline.modeling.parameters", "streamline.modeling.utils", "streamline.models", "streamline.models.artificial_neural_network", "streamline.models.decision_tree", "streamline.models.elastic_net", "streamline.models.genetic_programming", "streamline.models.gradient_boosting", "streamline.models.learning_based", "streamline.models.linear_model", "streamline.models.naive_bayes", "streamline.models.neighbouring", "streamline.models.random_forest", "streamline.models.support_vector_machine", "streamline.postanalysis", "streamline.postanalysis.dataset_compare", "streamline.postanalysis.gererate_report", "streamline.postanalysis.model_replicate", "streamline.postanalysis.statistics", "streamline.runners", "streamline.runners.clean_runner", "streamline.runners.compare_runner", "streamline.runners.dataprocess_runner", "streamline.runners.eda_runner", "streamline.runners.feature_runner", "streamline.runners.model_runner", "streamline.runners.replicate_runner", "streamline.runners.report_runner", "streamline.runners.stats_runner", "streamline.utils", "streamline.utils.checker", "streamline.utils.cleanup", "streamline.utils.cluster", "streamline.utils.dataset", "streamline.utils.evaluation", "streamline.utils.job", "streamline.utils.parser", "streamline.utils.runners", "usage"], "filenames": ["about.md", "citation.md", "development.md", "index.rst", "installation.md", "modules.rst", "streamline.rst", "streamline.dataprep.rst", "streamline.dataprep.data_process.rst", "streamline.dataprep.exploratory_analysis.rst", "streamline.dataprep.kfold_partitioning.rst", "streamline.featurefns.rst", "streamline.featurefns.importance.rst", "streamline.featurefns.selection.rst", "streamline.modeling.rst", "streamline.modeling.basemodel.rst", "streamline.modeling.load_models.rst", "streamline.modeling.modeljob.rst", "streamline.modeling.parameters.rst", "streamline.modeling.utils.rst", "streamline.models.rst", "streamline.models.artificial_neural_network.rst", "streamline.models.decision_tree.rst", "streamline.models.elastic_net.rst", "streamline.models.genetic_programming.rst", "streamline.models.gradient_boosting.rst", "streamline.models.learning_based.rst", "streamline.models.linear_model.rst", "streamline.models.naive_bayes.rst", "streamline.models.neighbouring.rst", "streamline.models.random_forest.rst", "streamline.models.support_vector_machine.rst", "streamline.postanalysis.rst", "streamline.postanalysis.dataset_compare.rst", "streamline.postanalysis.gererate_report.rst", "streamline.postanalysis.model_replicate.rst", "streamline.postanalysis.statistics.rst", "streamline.runners.rst", "streamline.runners.clean_runner.rst", "streamline.runners.compare_runner.rst", "streamline.runners.dataprocess_runner.rst", "streamline.runners.eda_runner.rst", "streamline.runners.feature_runner.rst", "streamline.runners.model_runner.rst", "streamline.runners.replicate_runner.rst", "streamline.runners.report_runner.rst", "streamline.runners.stats_runner.rst", "streamline.utils.rst", "streamline.utils.checker.rst", "streamline.utils.cleanup.rst", "streamline.utils.cluster.rst", "streamline.utils.dataset.rst", "streamline.utils.evaluation.rst", "streamline.utils.job.rst", "streamline.utils.parser.rst", "streamline.utils.runners.rst", "usage.md"], "titles": ["About (FAQs)", "Citations", "Development notes", "STREAMLINE", "Installation", "Code Documentation", "streamline package", "streamline.dataprep package", "streamline.dataprep.data_process module", "streamline.dataprep.exploratory_analysis module", "streamline.dataprep.kfold_partitioning module", "streamline.featurefns package", "streamline.featurefns.importance module", "streamline.featurefns.selection module", "streamline.modeling package", "streamline.modeling.basemodel module", "streamline.modeling.load_models module", "streamline.modeling.modeljob module", "streamline.modeling.parameters module", "streamline.modeling.utils module", "streamline.models package", "streamline.models.artificial_neural_network module", "streamline.models.decision_tree module", "streamline.models.elastic_net module", "streamline.models.genetic_programming module", "streamline.models.gradient_boosting module", "streamline.models.learning_based module", "streamline.models.linear_model module", "streamline.models.naive_bayes module", "streamline.models.neighbouring module", "streamline.models.random_forest module", "streamline.models.support_vector_machine module", "streamline.postanalysis package", "streamline.postanalysis.dataset_compare module", "streamline.postanalysis.gererate_report module", "streamline.postanalysis.model_replicate module", "streamline.postanalysis.statistics module", "streamline.runners package", "streamline.runners.clean_runner module", "streamline.runners.compare_runner module", "streamline.runners.dataprocess_runner module", "streamline.runners.eda_runner module", "streamline.runners.feature_runner module", "streamline.runners.model_runner module", "streamline.runners.replicate_runner module", "streamline.runners.report_runner module", "streamline.runners.stats_runner module", "streamline.utils package", "streamline.utils.checker module", "streamline.utils.cleanup module", "streamline.utils.cluster module", "streamline.utils.dataset module", "streamline.utils.evaluation module", "streamline.utils.job module", "streamline.utils.parser module", "streamline.utils.runners module", "Usage"], "terms": {"offer": [0, 1, 36], "varieti": 0, "option": [0, 2, 8, 9, 15, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 41, 43, 44, 46, 49], "make": [0, 9], "access": 0, "those": [0, 13, 41], "littl": [0, 2], "code": [0, 2, 3], "experi": [0, 9, 10, 13, 39, 41, 42, 43, 44, 45, 46, 49], "well": [0, 1, 3, 9, 12, 36, 41, 51], "season": 0, "programm": 0, "data": [0, 1, 2, 3, 6, 8, 9, 10, 13, 15, 33, 36, 40, 41, 43, 44, 51], "scientist": 0, "while": [0, 1, 2, 9, 41], "current": [0, 1, 2, 3, 9, 13, 42], "graphic": 0, "user": [0, 2, 9, 41, 51], "interfac": [0, 9], "gui": 0, "most": [0, 2], "naiv": [0, 28], "need": [0, 9, 15, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "onli": [0, 2, 9, 13, 35, 36, 41, 42, 46, 51], "know": [0, 2], "navig": 0, "pc": 0, "file": [0, 9, 10, 12, 13, 17, 36, 41, 49, 51], "system": 0, "specifi": [0, 2, 9, 41, 43, 51], "folder": [0, 9, 10, 33, 36, 41, 42, 49], "path": [0, 9, 10, 12, 13, 16, 39, 41, 42, 43, 44, 45, 46, 49, 51], "un": 0, "zip": 0, "have": [0, 1, 2, 13, 36, 41, 44, 45, 51], "set": [0, 1, 2, 3, 8, 9, 10, 13, 33, 36, 41, 43, 46, 51], "up": [0, 2], "googl": [0, 2], "drive": 0, "account": 0, "veri": [0, 1], "basic": [0, 9, 51], "knowledg": 0, "python": 0, "environ": 0, "appli": [0, 1, 2, 3, 8, 9, 12, 13, 33, 35, 36, 41, 42, 44], "colab": 0, "within": [0, 2, 5, 34, 41], "jupyt": [0, 41], "notebook": [0, 41], "bit": [0, 1], "more": [0, 2, 13, 35, 36, 41, 44], "serial": [0, 41, 44], "command": [0, 2, 15], "line": 0, "parallel": [0, 2, 41, 44], "compat": [0, 1], "linux": [0, 41], "cluster": [0, 6, 41, 44, 47], "A": [0, 3], "quickli": 0, "rigor": [0, 3], "ml": [0, 2, 3, 15, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 36, 39, 43, 45, 46], "analysi": [0, 1, 2, 3, 9, 33, 34, 35, 41, 44, 45], "over": [0, 36, 42], "one": [0, 1, 2, 10, 13, 33, 35, 36, 44], "dataset": [0, 6, 8, 9, 10, 12, 13, 17, 33, 34, 35, 36, 39, 41, 42, 44, 45, 47, 48, 49], "known": 0, "develop": [0, 1, 3, 5], "model": [0, 1, 2, 3, 5, 6, 8, 33, 35, 36, 39, 42, 43, 44, 45, 46, 51, 55], "algorithm": [0, 1, 3, 9, 12, 13, 17, 33, 34, 35, 36, 39, 42, 43, 44, 45, 46], "framework": [0, 3, 41], "compar": [0, 1, 33, 36, 39, 44, 45, 46], "establish": 0, "scikit": [0, 1, 8, 41, 43], "learn": [0, 2, 3, 6, 8, 41, 43], "each": [0, 1, 5, 9, 13, 33, 35, 36, 44, 46], "new": [0, 2, 8, 13, 35, 42, 43, 45], "baselin": 0, "standard": [0, 8, 33, 36, 52], "comparison": [0, 1, 8, 33, 36], "e": [0, 1, 2, 3, 8, 9, 13, 36, 41, 43], "posit": [0, 41, 52], "control": [0, 1, 8, 51], "which": [0, 1, 2, 5, 8, 33, 34, 36, 41, 44, 49], "evalu": [0, 1, 2, 6, 12, 15, 17, 33, 35, 36, 43, 44, 47], "seek": 0, "optim": [0, 2, 3, 14, 15, 43], "assembli": 0, "part": [0, 35, 51], "methodologi": 0, "an": [0, 1, 2, 3, 9, 13, 36, 41, 43], "exploratori": [0, 2, 9, 35, 41, 51], "featur": [0, 2, 3, 8, 9, 12, 13, 15, 17, 35, 36, 41, 42, 43, 44, 45, 46, 51], "import": [0, 2, 6, 11, 13, 15, 35, 36, 42, 43, 46], "estim": [0, 2, 35, 43], "select": [0, 2, 6, 9, 11, 12, 36, 41, 42], "prior": [0, 1, 2, 42], "some": [0, 2, 13, 51], "educ": [0, 1], "exampl": 0, "integr": [0, 1, 2], "mani": 0, "amaz": 0, "base": [0, 2, 8, 9, 10, 12, 13, 15, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 51, 53], "scienc": 0, "avail": [0, 2, 3, 41, 43], "particular": 0, "panda": [0, 8], "scipi": 0, "optuna": [0, 2, 15, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 43], "creat": [0, 2, 12, 13, 36, 51], "expand": [0, 2, 3], "adapt": 0, "modifi": 0, "test": [0, 2, 8, 9, 10, 13, 33, 36, 44, 45, 49], "identifi": [0, 1, 2, 3, 9, 13, 36, 51], "less": [0, 9, 43], "obviou": 0, "bug": [0, 2], "don": 0, "t": [0, 36], "prevent": [0, 2], "complet": [0, 2, 3, 33, 36, 43], "The": [0, 1, 3, 5, 8, 9, 36, 41], "autom": [0, 1, 3, 6], "element": [0, 8, 12, 13], "clean": [0, 9, 51], "cross": [0, 10, 12, 13, 41, 42, 43, 51], "valid": [0, 10, 12, 13, 41, 42, 43, 51], "cv": [0, 2, 8, 10, 12, 13, 15, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 36, 40, 41, 42, 44, 46, 49, 55], "partit": [0, 2, 8, 10, 41, 42, 51], "scale": [0, 8], "imput": [0, 8], "filter": [0, 1, 13, 42], "collect": [0, 13], "hyperparamet": [0, 2, 17, 43], "across": [0, 9, 13, 33, 36, 41], "15": [0, 1, 43], "implement": [0, 1], "classif": [0, 3, 6, 36, 41, 52], "metric": [0, 17, 33, 36, 41, 43, 44, 46, 52], "automat": [0, 2, 9, 34], "save": [0, 8, 9, 10, 12, 13, 17, 33, 36, 41, 49], "all": [0, 1, 2, 8, 9, 12, 13, 15, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 36, 41, 43, 44, 45, 46, 49], "result": [0, 2, 9, 13, 34, 36, 41, 44, 46], "public": [0, 1], "readi": 0, "plot": [0, 9, 15, 36, 39, 41, 43, 44, 46], "propos": 0, "composit": [0, 36, 46], "non": [0, 33, 36, 51], "parametr": [0, 33, 36], "statist": [0, 2, 6, 9, 32, 33, 46], "analyz": [0, 41], "pdf": [0, 34, 45], "summari": [0, 15, 34, 36, 44, 45, 46, 49], "report": [0, 9, 13, 34], "follow": [0, 1, 8, 49], "ar": [0, 1, 2, 9, 13, 33, 36, 41], "bay": [0, 28], "nb": [0, 28], "logist": [0, 27], "regress": [0, 2, 27], "lr": [0, 2, 27], "decis": [0, 22], "tree": [0, 22], "dt": [0, 22], "random": [0, 9, 10, 30, 41, 42], "forest": [0, 30], "rf": [0, 30], "gradient": [0, 25], "boost": [0, 25], "gb": [0, 25], "xgboost": 0, "xgb": [0, 25, 43], "lgboost": 0, "lgb": [0, 25], "catboost": [0, 2], "cgb": [0, 25], "support": [0, 2, 31, 46], "vector": [0, 31], "machin": [0, 1, 2, 3, 6, 31], "svm": [0, 31, 43], "artifici": [0, 21], "neural": [0, 21], "network": [0, 21], "ann": [0, 21, 43], "k": [0, 10, 29], "nearest": [0, 29], "neighbor": [0, 29], "nn": 0, "genet": [0, 1, 2, 24], "program": [0, 2, 24], "gp": [0, 2, 24], "educt": 0, "classifi": 0, "elc": [0, 1, 2, 26, 33, 34, 35, 39, 43, 44, 45, 46], "x": [0, 9, 33], "xc": [0, 2, 26, 33, 34, 35, 39, 43, 44, 45, 46], "extend": [0, 2, 41], "supervis": [0, 1, 3, 6], "track": 0, "exstrac": [0, 1, 2, 26], "relev": [0, 1, 41], "valu": [0, 2, 8, 9, 36, 41, 43, 51, 52, 54], "rang": [0, 18, 43], "carefulli": 0, "pre": [0, 1, 2], "driven": 0, "sweep": [0, 2, 43], "format": [0, 34, 41], "intend": [0, 2], "give": [0, 2, 36, 41], "brief": 0, "kei": [0, 2, 34], "contain": [0, 41, 44, 45], "analys": 0, "allow": [0, 2, 41], "examin": 0, "aspect": 0, "perform": [0, 1, 2, 3, 33, 36, 42], "we": [0, 1, 2, 13, 36, 51], "also": [0, 1, 9, 33, 35, 41], "design": 0, "oper": [0, 2, 9, 10, 51], "thi": [0, 1, 2, 3, 8, 9, 17, 33, 34, 35, 36, 41, 44, 49], "quick": 0, "do": [0, 2, 9, 41, 43], "even": [0, 2], "1": [0, 1, 2, 9, 33, 36, 41, 43], "predict": [0, 3, 14, 15, 51, 52], "probabl": [0, 2], "2": [0, 1, 2], "regener": 0, "custom": [0, 2], "tweak": 0, "3": [0, 13, 15, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35], "try": 0, "out": [0, 1, 2, 34, 35, 42, 44, 45], "effect": [0, 12], "threshold": 0, "interact": [0, 1, 2, 3, 9, 12], "slider": 0, "4": [0, 12, 34, 39, 40, 41, 42, 43, 44, 45, 46, 50], "re": [0, 52], "5": [0, 36, 48], "rank": [0, 13, 33, 36], "visual": [0, 1, 2, 9, 36], "reproduc": [0, 2, 3, 9, 10, 41, 42], "when": [0, 2, 34, 36, 41], "timeout": [0, 2, 15, 17, 43], "paramet": [0, 2, 3, 6, 8, 9, 10, 12, 13, 14, 15, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 36, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52], "none": [0, 2, 8, 9, 10, 12, 15, 16, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 48, 51], "ensur": [0, 3], "train": [0, 1, 2, 8, 10, 12, 13, 15, 17, 34, 35, 36, 43, 44, 45, 49], "same": [0, 8, 36, 41, 44, 45, 46, 51], "whenev": 0, "seed": [0, 9, 10, 41, 42], "vari": 0, "somewhat": 0, "particularli": 0, "sinc": [0, 2], "mai": [0, 9, 13, 41, 43], "number": [0, 1, 2, 8, 9, 10, 13, 15, 36, 41, 42, 43, 46], "trial": [0, 2, 15, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 43], "time": [0, 15, 49], "limit": [0, 3, 13], "resourc": [0, 1], "howev": [0, 41], "help": 0, "reason": 0, "frame": [0, 10], "along": [0, 2], "object": [0, 9, 10, 14, 15, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 51, 53, 55], "so": [0, 2, 8, 9, 13, 36], "easili": [0, 2, 3], "own": [0, 1], "outsid": [0, 2], "NOT": 0, "thei": [0, 1, 2, 36, 41], "still": 0, "best": [0, 1, 17, 33, 36], "human": [0, 1], "expert": 0, "engin": 0, "construct": 0, "encod": [0, 41], "g": [0, 1, 3, 41], "hot": 0, "categor": [0, 2, 8, 9, 41], "numer": [0, 41], "text": [0, 9, 10, 41], "bia": [0, 1, 3], "anyth": 0, "beyond": 0, "simpl": [0, 1, 6, 8, 9], "remov": [0, 8, 12, 17], "instanc": [0, 9, 12, 17, 41, 44, 51], "class": [0, 8, 9, 10, 12, 13, 15, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 51, 53], "label": [0, 8, 9, 10, 12, 13, 15, 17, 41, 44, 45, 51, 52], "where": [0, 41], "miss": [0, 2, 8, 9, 41, 51], "recommend": [0, 9, 43, 46], "consid": [0, 2, 9, 13, 41], "conduct": [0, 8, 9, 35, 41], "item": 0, "unlik": 0, "wa": [0, 1, 13, 36], "them": [0, 2, 5, 36], "oppos": 0, "attempt": 0, "configur": [0, 2], "itself": 0, "adopt": [0, 1], "fix": [0, 2, 43], "seri": 0, "purposefulli": 0, "step": [0, 9], "phase": [0, 2, 5, 8, 9, 12, 13, 17, 33, 36, 41, 42, 44, 48, 49, 51], "practic": 0, "It": [0, 2, 34, 35, 36, 51], "domain": 0, "generaliz": 0, "specif": [0, 1, 8, 41, 52], "focu": [0, 41], "biomed": [0, 1], "mine": [0, 1, 3], "challeng": 0, "util": [0, 1, 5, 6, 9, 10, 14], "wai": [0, 33, 36], "suit": 0, "problem": [0, 1], "complex": [0, 1, 3], "multi": 0, "ha": [0, 1, 36], "been": [0, 2, 51], "four": 0, "colaboratori": 0, "almost": [0, 2], "anyon": [0, 3], "advantag": 0, "No": [0, 41], "directli": [0, 1], "cloud": [0, 2, 41], "click": 0, "whole": [0, 34], "disadvantag": 0, "slowest": 0, "note": [0, 36, 41, 43], "free": 0, "easi": 0, "customiz": [0, 3], "nearli": 0, "minim": [0, 43], "document": [0, 2], "slower": 0, "runtim": [0, 8, 9, 12, 13, 17, 33, 34, 36], "than": [0, 2, 9, 13, 33, 36], "anaconda3": 0, "python3": 0, "sever": 0, "minor": 0, "packag": [0, 1, 2, 5], "instal": 0, "local": [0, 41, 44], "typic": 0, "faster": 0, "easier": 0, "versatil": 0, "By": 0, "far": 0, "fastest": 0, "effici": 0, "separ": [0, 12, 17, 33, 36, 41, 54], "occur": 0, "individu": [0, 9, 10, 33, 36, 44, 46, 49], "must": [0, 9, 10, 41, 44, 45], "sequenc": [0, 2], "were": [0, 36], "dask": 0, "jobqu": 0, "7": 0, "type": [0, 9], "describ": [0, 1, 41], "To": [0, 1, 6, 13], "demonstr": [0, 1], "without": 0, "ani": [0, 9, 43, 49, 51], "whatsoev": 0, "open": 0, "link": [0, 1], "http": [0, 1, 2], "github": [0, 1, 2], "com": [0, 1, 2], "raptor419": 0, "streamline_dev": 0, "blob": 0, "main": [0, 41, 44, 49], "ipynb": [0, 41], "you": [0, 1], "abl": [0, 1, 2, 12], "perman": 0, "edit": 0, "get": [0, 2, 18, 36, 51], "feel": 0, "1dgaxnjnzdthtxp914aldrb4ibhjjdm1a": 0, "usp": 0, "share": 0, "reliabl": 0, "default": [0, 2, 9, 10, 13, 18, 39, 41, 42, 43, 44, 45, 46, 49], "adjust": 0, "further": [0, 2, 5], "between": [0, 1, 9, 13, 33, 36], "multipl": [0, 41], "target": [0, 8, 9, 12, 17, 33, 36, 41, 44, 45], "subset": [0, 42], "dimens": 0, "stat": [0, 36], "count": [0, 9, 13], "balanc": [0, 36, 52], "detect": [0, 2, 3, 12], "v": [0, 9, 13, 41], "quanti": 0, "correl": [0, 9, 41, 44], "heatmap": [0, 9, 44], "univari": [0, 1, 9, 12, 34, 41], "chi": [0, 9], "squar": [0, 9], "mann": [0, 9, 33, 36], "whitnei": [0, 9, 33, 36], "u": [0, 33, 36], "quantit": [0, 2, 8, 9, 41], "manual": 0, "treat": [0, 2, 41], "load": [0, 8, 12, 13, 17, 36, 51], "ignor": [0, 9, 41], "match": [0, 10, 41, 44, 51], "case": [0, 1, 51], "pair": [0, 1, 8, 33, 36], "group": [0, 10, 41, 51], "covari": 0, "kept": [0, 13], "togeth": [0, 5], "variabl": [0, 8, 9, 41], "first": [0, 1], "mice": [0, 8], "iter": [0, 8, 26, 43], "quantita": 0, "There": 0, "mean": [0, 8, 36], "cost": 0, "prohibit": 0, "larg": [0, 1, 9], "respect": [0, 8, 9, 41], "leakag": 0, "seen": [0, 2], "until": [0, 13, 43], "final": [0, 2, 13, 49], "transform": [0, 8, 36], "pickl": [0, 8, 12], "futur": [0, 1, 2, 8], "replic": [0, 2, 35, 36, 43, 44, 45], "both": [0, 2, 8, 10, 12, 41], "mutual": [0, 12], "inform": [0, 2, 12, 13], "profici": 0, "associ": [0, 1, 3, 9, 12, 36], "multisurf": [0, 1, 12], "relief": [0, 12], "epistat": [0, 1], "consider": 0, "fail": [0, 2], "signal": 0, "score": [0, 12, 13, 17, 33, 36, 42, 43, 52], "0": [0, 1, 2, 9, 13, 33, 35, 36, 39, 41, 43, 46], "averag": [0, 13, 33, 36, 42, 44, 46], "bar": [0, 9, 36], "linearli": 0, "quadrat": 0, "reduc": [0, 13, 49], "burden": 0, "rule": [0, 1, 2, 43, 51], "These": 0, "provid": [0, 1, 2, 3], "interpret": [0, 1, 2, 3, 35, 36], "form": [0, 51], "IF": 0, "THEN": 0, "our": [0, 1, 2, 3], "research": [0, 5], "handl": 0, "scalabl": [0, 1], "nois": [0, 43], "epistasi": 0, "heterogen": [0, 51], "bayesian": [0, 43], "dure": 0, "summar": [0, 1, 36, 42], "sought": 0, "comprehens": 0, "build": 0, "strategi": [0, 2], "gather": [0, 15], "place": [0, 36], "permut": [0, 43], "use_uniform_fi": [0, 43], "fals": [0, 2, 9, 10, 13, 17, 33, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 52], "reli": 0, "16": 0, "accuraci": [0, 36, 52], "f1": [0, 52], "sensit": [0, 1], "recal": [0, 17, 52], "precis": [0, 52], "ppv": 0, "true": [0, 8, 10, 12, 13, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 52], "tp": [0, 52], "neg": [0, 41, 52], "tn": [0, 52], "fp": [0, 52], "fn": [0, 33, 52], "npv": [0, 52], "likeliehood": 0, "ratio": [0, 52], "roc": [0, 36, 44, 46], "auc": [0, 36], "prc": [0, 36, 41, 44, 46], "ap": 0, "reappli": 0, "displai": 0, "n": [0, 1, 26, 34], "fold": [0, 10], "curv": [0, 44, 46], "boxplot": [0, 9, 33, 36, 46], "consist": 0, "lack": 0, "For": [0, 33], "kruskal": [0, 33, 36], "walli": [0, 33, 36], "subsequ": [0, 2], "pairwis": [0, 33, 36], "signific": [0, 2, 9, 33, 36, 39, 41, 46], "given": [0, 2, 5, 9, 33, 36], "either": [0, 1, 12, 41, 43], "singl": [0, 34, 36], "snapshot": 0, "script": [0, 33, 34, 35, 36, 41, 44, 49], "extern": 0, "determin": [0, 1, 8, 33, 36], "yield": [0, 44], "version": [0, 1, 2, 49, 51], "aforement": 0, "cite": 1, "streamlin": [1, 2, 5], "preprint": 1, "arxiv": [1, 3], "pleas": 1, "us": [1, 2, 5, 8, 9, 10, 12, 13, 36, 41, 43, 46, 51], "articl": 1, "urbanowicz2022streamlin": 1, "titl": 1, "transpar": [1, 3, 6], "end": [1, 3, 6], "facilit": 1, "author": 1, "urbanowicz": 1, "ryan": 1, "j": 1, "zhang": 1, "robert": 1, "cui": 1, "yuhan": 1, "suri": 1, "pranshu": 1, "journal": 1, "2206": 1, "12002v1": 1, "year": 1, "2022": 1, "If": [1, 9, 13, 36, 41, 43], "wish": [1, 2], "codebas": [1, 2], "misc": 1, "streamline2022": 1, "publish": 1, "repositori": [1, 2], "howpublish": 1, "url": 1, "urbslab": [1, 2], "In": [1, 2, 36], "method": [1, 8, 10, 41, 43], "lesson": 1, "from": [1, 2, 3, 12, 13, 17, 33, 36, 42, 43], "": [1, 2, 10, 34, 35, 41, 44], "previou": 1, "briefli": 1, "earli": 1, "what": 1, "would": 1, "becom": 1, "pancreat": 1, "cancer": 1, "urbanowicz2020rigor": 1, "applic": [1, 8, 45], "nest": 1, "studi": [1, 35, 44], "implic": 1, "assess": 1, "moor": 1, "jason": 1, "h": 1, "ruth": 1, "karen": 1, "stolzenberg": 1, "solomon": 1, "rachael": 1, "lynch": 1, "shannon": 1, "m": [1, 10, 12, 41, 42], "2008": 1, "12829v2": 1, "2020": 1, "One": [1, 41], "two": 1, "i": [1, 2, 3, 5, 8, 9, 13, 33, 34, 35, 36, 41, 42, 43, 49, 51], "can": [1, 2, 3, 5, 8, 36], "priorit": 1, "involv": 1, "multivari": 1, "outcom": [1, 9, 41, 51], "believ": 1, "least": [1, 44, 45], "paper": 1, "below": [1, 5, 9, 43], "introduct": 1, "review": 1, "urbanowicz2018relief": 1, "meeker": 1, "melissa": 1, "la": 1, "cava": 1, "william": 1, "olson": 1, "randal": 1, "informat": 1, "volum": 1, "85": 1, "page": [1, 34], "189": 1, "203": 1, "2018": 1, "elsevi": 1, "next": [1, 2], "overal": [1, 2, 3, 13, 33], "second": [1, 43], "introduc": [1, 3], "rebat": 1, "releif": 1, "urbanowicz2018benchmark": 1, "benchmark": 1, "bioinformat": 1, "schmitt": 1, "peter": 1, "168": 1, "188": 1, "ensembl": [1, 2], "approach": [1, 2], "kind": 1, "verma2018collect": 1, "crucial": 1, "variant": 1, "verma": 1, "shefali": 1, "luca": 1, "anastasia": 1, "xinyuan": 1, "veturi": 1, "yogasudha": 1, "dudek": 1, "scott": 1, "li": 1, "binglan": 1, "ruowang": 1, "kim": 1, "dokyoon": 1, "other": [1, 2, 3, 33, 36, 41, 42], "biodata": 1, "11": [1, 49], "22": 1, "springer": 1, "incorpor": 1, "run": [1, 2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 53, 55], "close": 1, "subfield": 1, "evolutionari": [1, 2], "discov": 1, "constitut": 1, "appeal": 1, "gear": 1, "toward": 1, "tackl": 1, "long": [1, 43], "stand": 1, "135": 1, "multiplex": 1, "due": [1, 9], "abil": 1, "guid": 1, "search": 1, "urbanowicz2015exstrac": 1, "descript": [1, 9, 41], "intellig": [1, 2], "8": 1, "89": 1, "116": 1, "2015": 1, "print": 1, "lc": [1, 43], "dive": 1, "take": [1, 9, 10, 13, 36, 43], "output": [1, 3, 9, 12, 13, 17, 39, 41, 42, 43, 44, 45, 46, 48, 49], "character": 1, "differ": [1, 2, 33, 36], "pattern": 1, "work": [1, 36, 42], "how": [1, 2], "better": [1, 36], "understand": 1, "relationship": 1, "captur": [1, 3], "zhang2021lc": 1, "2104": 1, "12844": 1, "2021": 1, "direct": [1, 43], "descend": [1, 36], "uc": 1, "inproceed": 1, "zhang2020scikit": 1, "f": 1, "booktitl": 1, "proceed": 1, "comput": [1, 2, 9, 41], "confer": 1, "companion": 1, "1816": 1, "1823": 1, "origin": [1, 8, 33, 36, 44, 45, 51], "primarili": [1, 12], "textbook": 1, "book": 1, "urbanowicz2017introduct": 1, "brown": 1, "Will": [1, 2], "2017": 1, "idea": 2, "pipelin": [2, 3, 6, 9, 12, 33, 34, 36, 41, 45, 49, 51], "welcom": 2, "suggest": 2, "contribut": 2, "collabor": 2, "initi": [2, 9, 10, 12, 41], "function": [2, 9, 13, 15, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 51, 54, 55], "reorgan": 2, "name": [2, 8, 9, 10, 12, 13, 15, 18, 36, 39, 41, 42, 43, 44, 45, 46, 49], "rebrand": 2, "automlpip": 2, "bc": 2, "remain": 2, "repair": 2, "intention": 2, "unless": [2, 9], "explicitli": 2, "turn": 2, "through": 2, "guarante": 2, "explain": 2, "inher": 2, "possibl": [2, 41, 46], "found": [2, 3, 36], "greater": [2, 13], "altern": [2, 13], "gener": [2, 9, 13, 33, 34, 35, 36, 41, 43, 45], "correctli": 2, "under": [2, 3], "certain": [2, 3], "situat": 2, "often": 2, "look": 2, "like": 2, "updat": [2, 41], "accordingli": 2, "simplifi": 2, "io": 2, "heavy_check_mark": 2, "modular": 2, "ad": 2, "pypi": 2, "aw": 2, "azur": 2, "docker": 2, "progress": 2, "todo": 2, "rather": 2, "requir": 2, "being": [2, 9, 41], "multiclass": 2, "endpoint": 2, "includ": [2, 8, 9, 13, 33, 36, 41, 44, 46, 52], "shaplei": 2, "calcul": [2, 9, 52], "hold": [2, 35, 44, 45], "opportun": 2, "intern": 2, "list": [2, 9, 10, 13, 17, 34, 36, 39, 41, 43, 45, 46, 51, 52, 55], "post": 2, "clearli": 2, "present": [2, 41], "doe": [2, 35, 41], "impute_data": [2, 8, 35, 40], "yet": 2, "fulli": 2, "smarter": 2, "avoid": [2, 3], "combin": [2, 36], "invalid": [2, 41], "exclud": [2, 33, 34, 35, 39, 43, 44, 45, 46], "larger": [2, 33, 36, 43], "defin": [2, 9], "after": 2, "alwai": 2, "benefit": 2, "popul": [2, 43], "size": [2, 43], "cycl": 2, "slow": 2, "down": 2, "process": [2, 8, 13, 40], "gain": 2, "addit": 2, "refin": 2, "flexibl": 2, "high": 2, "order": [2, 36, 52], "automl": 3, "empow": 3, "notabl": [3, 36], "tool": 3, "tabular": [3, 6, 51], "binari": [3, 6, 41], "continu": [3, 9], "focus": 3, "sourc": [3, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55], "enhanc": 3, "goal": 3, "strength": 3, "weak": 3, "now": 3, "readthedoc": 3, "its": 3, "here": [3, 36], "architectur": 5, "divid": [5, 36], "independ": [5, 9], "runner": [5, 6, 47], "api": 5, "complement": 5, "subpackag": 5, "dataprep": [5, 6], "submodul": [5, 6], "featurefn": [5, 6], "postanalysi": [5, 6], "data_process": [6, 7], "modul": [6, 7, 11, 14, 20, 32, 37, 47], "dataprocess": [6, 7, 8], "exploratory_analysi": [6, 7], "edajob": [6, 7, 9], "kfold_partit": [6, 7], "kfoldpartition": [6, 7, 10], "featureimport": [6, 11, 12], "featureselect": [6, 11, 13], "basemodel": [6, 14, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "load_model": [6, 14], "load_class_from_fold": [6, 14, 16], "modeljob": [6, 14], "get_paramet": [6, 14, 18], "is_supported_model": [6, 14, 19], "model_str_to_obj": [6, 14, 19], "artificial_neural_network": [6, 20], "mlpclassifi": [6, 20, 21], "decision_tre": [6, 20], "decisiontreeclassifi": [6, 20, 22], "elastic_net": [6, 20], "elasticnetclassifi": [6, 20, 23], "genetic_program": [6, 20], "gpclassifi": [6, 20, 24], "gradient_boost": [6, 20], "cgbclassifi": [6, 20, 25], "gbclassifi": [6, 20, 25], "lgbclassifi": [6, 20, 25], "xgbclassifi": [6, 20, 25], "learning_bas": [6, 20], "exstracsclassifi": [6, 20, 26], "xcsclassifi": [6, 20, 26], "elcsclassifi": [6, 20, 26], "linear_model": [6, 20], "logisticregress": [6, 20, 27], "naive_bay": [6, 20], "naivebayesclassifi": [6, 20, 28], "neighbour": [6, 20], "knnclassifi": [6, 20, 29], "random_forest": [6, 20], "randomforestclassifi": [6, 20, 30], "support_vector_machin": [6, 20], "supportvectorclassifi": [6, 20, 31], "dataset_compar": [6, 32], "comparejob": [6, 32, 33], "gererate_report": [6, 32], "reportjob": [6, 32, 34], "list_to_str": [6, 32, 34], "ngi": [6, 32, 34], "model_repl": [6, 32], "replicatejob": [6, 32, 35], "statsjob": [6, 32, 36], "clean_runn": [6, 37], "cleanrunn": [6, 37, 38], "compare_runn": [6, 37], "comparerunn": [6, 37, 39], "dataprocess_runn": [6, 37], "dataprocessrunn": [6, 37, 40], "eda_runn": [6, 37], "edarunn": [6, 37, 41], "feature_runn": [6, 37], "featureimportancerunn": [6, 37, 42], "featureselectionrunn": [6, 37, 42], "model_runn": [6, 37], "modelexperimentrunn": [6, 37, 43], "replicate_runn": [6, 37], "replicationrunn": [6, 37, 44], "report_runn": [6, 37], "reportrunn": [6, 37, 45], "stats_runn": [6, 37], "statsrunn": [6, 37, 46], "checker": [6, 47], "check_phas": [6, 47, 48], "check_phase_1": [6, 47, 48], "check_phase_10": [6, 47, 48], "check_phase_2": [6, 47, 48], "check_phase_3": [6, 47, 48], "check_phase_4": [6, 47, 48], "check_phase_5": [6, 47, 48], "check_phase_6": [6, 47, 48], "check_phase_7": [6, 47, 48], "check_phase_8": [6, 47, 48], "check_phase_9": [6, 47, 48], "cleanup": [6, 47], "cleaner": [6, 47, 49], "get_clust": [6, 47, 50], "class_ev": [6, 47, 52], "job": [6, 8, 9, 10, 12, 13, 17, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 47, 55], "parser": [6, 47], "comma_sep_choic": [6, 47, 54], "parser_funct": [6, 47, 54], "model_runner_fn": [6, 47, 55], "parallel_eda_cal": [6, 47, 55], "parallel_kfold_cal": [6, 47, 55], "run_job": [6, 47, 55], "runner_fn": [6, 47, 55], "sub_job": [6, 47, 55], "data_sc": [7, 8], "impute_cv_data": [7, 8], "load_data": [7, 8, 47, 51], "save_runtim": [7, 8, 9, 11, 12, 13, 14, 17, 32, 33, 36], "write_cv_fil": [7, 8], "counts_summari": [7, 9], "describe_data": [7, 9], "drop_ignored_rowcol": [7, 9], "feature_correlation_plot": [7, 9], "graph_selector": [7, 9], "identify_feature_typ": [7, 9], "join": [7, 9, 55], "make_log_fold": [7, 9], "missing_count_plot": [7, 9], "missingness_count": [7, 9], "run_explor": [7, 9], "start": [7, 9, 43, 55], "test_selector": [7, 9], "univariate_analysi": [7, 9], "univariate_plot": [7, 9], "cv_partition": [7, 10], "save_dataset": [7, 10], "cv_train_path": [8, 12, 40, 42], "cv_test_path": [8, 40], "experiment_path": [8, 9, 10, 12, 33, 34, 39, 42, 45, 51], "scale_data": [8, 35, 36, 40, 46], "multi_imput": [8, 35, 40], "overwrite_cv": [8, 13, 40, 42], "class_label": [8, 12, 13, 17, 33, 35, 36, 39, 40, 41, 42, 43, 44, 46, 51], "instance_label": [8, 12, 13, 17, 33, 35, 36, 39, 40, 41, 42, 43, 44, 46, 51], "random_st": [8, 9, 10, 12, 15, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43], "x_train": [8, 15], "x_test": [8, 15, 35], "standardscalar": 8, "featuer": 8, "unit": 8, "varianc": 8, "fit": [8, 14, 15], "alon": 8, "ident": 8, "datafram": [8, 9, 10, 51], "return": [8, 9, 10, 12, 13, 15, 17, 18, 41, 42, 51, 52, 54], "begin": 8, "mode": 8, "header": [8, 15, 41, 51], "preprocess": 8, "data_train": 8, "data_test": 8, "export": [8, 9, 13, 17, 36, 42, 43, 44, 51], "overwrit": [8, 13, 42], "space": [8, 34, 39, 41, 43, 44, 45, 46, 49], "preserv": [8, 13, 49], "copi": 8, "cvonli": 8, "qualiti": 8, "ignore_featur": [9, 41, 51], "categorical_featur": [9, 41], "explor": 9, "categorical_cutoff": [9, 35, 41], "10": [9, 10, 35, 41, 43], "sig_cutoff": [9, 33, 35, 36, 39, 41, 46], "05": [9, 33, 35, 36, 39, 41, 46], "eda": [9, 41, 55], "log": [9, 10, 13], "directori": [9, 10, 36, 39, 41, 43, 44, 45, 46, 49], "row": [9, 41], "y": [9, 33], "cut": 9, "off": 9, "cutoff": [9, 39, 41, 46], "state": 9, "total_miss": 9, "show": [9, 13, 36, 39, 46], "variou": 9, "total": [9, 36], "graph": 9, "again": 9, "flag": [9, 10, 13, 39, 46], "column": [9, 10, 41, 44, 51], "int64": 9, "float64": 9, "uniqu": [9, 41, 51], "drop": [9, 51], "x_data": [9, 51], "via": 9, "pearson": 9, "expens": 9, "difficult": 9, "read": 9, "feature_nam": [9, 15], "assum": 9, "barplot": [9, 13], "histogram": [9, 36, 46], "missing": 9, "top_featur": [9, 13, 36, 41, 42, 46], "20": [9, 13, 41], "wrapper": 9, "top": [9, 13, 36, 42, 46], "accord": 9, "appropri": 9, "p": 9, "sorted_p_list": 9, "check": [9, 41, 54], "whether": [9, 45], "equal": [9, 36], "call": [9, 33, 34], "sort": [9, 12, 13], "partition_method": [10, 41], "n_split": [10, 13, 41], "kfold": 10, "crossvalid": 10, "stratifi": [10, 41], "split": [10, 13, 40, 41, 42, 43, 54], "return_df": 10, "save_df": 10, "r": 10, "empti": [10, 41], "overrid": [10, 43], "train_df": 10, "test_df": 10, "csv": [10, 13, 36, 41, 51], "pickle_scor": [11, 12], "prepare_data": [11, 12], "run_multi_surf": [11, 12], "run_mutual_inform": [11, 12], "sort_save_fi_scor": [11, 12], "gen_filtered_dataset": [11, 13], "report_ave_f": [11, 13], "report_informative_featur": [11, 13], "select_featur": [11, 13], "instance_subset": [12, 42], "2000": [12, 13, 42, 43], "use_turf": [12, 42], "turf_pct": [12, 42], "n_job": [12, 15, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 42, 43], "output_nam": 12, "score_dict": 12, "score_sorted_featur": 12, "dictionari": [12, 13], "param": [12, 13, 15, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 42, 43, 49, 55], "tag": 12, "ordered_feature_nam": 12, "alg_nam": 12, "decreas": 12, "full_path": [13, 17, 35, 36, 42, 43, 46], "export_scor": [13, 42], "max_features_to_keep": [13, 42], "filter_poor_featur": [13, 42], "maximum": [13, 15, 34, 36, 43], "keep": [13, 42, 51], "poor": 13, "last": [13, 42, 43], "cv_selected_list": 13, "path_to_csv": 13, "dataset_nam": 13, "renam": 13, "old": 13, "algorithmlabel": 13, "selected_feature_list": 13, "meta_feature_rank": 13, "store": [13, 36], "evid": 13, "storag": 13, "figur": [13, 35, 36, 42, 46], "informative_feature_count": 13, "uninformative_feature_count": 13, "uninform": 13, "full": 13, "union": 13, "max": [13, 42], "grab": 13, "reach": 13, "fpr": [13, 17], "feature_import": [14, 15], "hyper_ev": [14, 15], "model_evalu": [14, 15], "data_prep": [14, 17], "export_best_param": [14, 17], "run_model": [14, 17], "model_nam": [15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "cv_fold": [15, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "scoring_metr": [15, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 36, 43, 46], "balanced_accuraci": [15, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 36, 43, 46], "metric_direct": [15, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 43], "maxim": [15, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 43], "sampler": [15, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "unimpl": [15, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "stub": [15, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "y_train": 15, "n_trail": 15, "caller": 15, "hyper": [15, 43], "eval": 15, "y_test": [15, 35], "later": [15, 51], "overridden": [15, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "dict": [15, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "common": 15, "x_in": 15, "input": 15, "y_pred": [15, 52], "output_path": [17, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50], "experiment_nam": [17, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49], "cv_count": [17, 35, 43], "n_trial": [17, 43], "200": [17, 43], "900": [17, 43], "uniform_fi": 17, "save_plot": [17, 43], "static": [17, 36, 49], "file_nam": 17, "param_grid": 17, "metric_list": 17, "tpr": [17, 36], "roc_auc": [17, 46], "prec": [17, 36], "prec_rec_auc": 17, "ave_prec": 17, "fi": [17, 36, 42, 46], "proba": 17, "algorithm_nam": 18, "grid": 18, "string": [19, 34, 41], "color": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "small_nam": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "abc": [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "red": 21, "yellow": 22, "aquamarin": 23, "elast": 23, "net": 23, "en": 23, "purpl": 24, "magenta": 25, "categori": 25, "cornflowerblu": 25, "pink": 25, "light": 25, "cyan": 25, "extrem": 25, "nu": [26, 43], "lawngreen": 26, "oliv": 26, "green": 26, "dimgrei": 27, "silver": 28, "chocol": 29, "knn": [29, 43], "blue": 30, "orang": 31, "best_kruscall_w": [32, 33], "best_mann_whitney_u": [32, 33], "best_wilcoxon_rank": [32, 33], "data_compare_bp": [32, 33], "data_compare_bp_al": [32, 33], "inter_set_best_fn": [32, 33], "inter_set_fn": [32, 33], "kruscall_w": [32, 33], "mann_whitney_u": [32, 33, 36], "temp_summari": [32, 33], "wilcoxon_rank": [32, 33, 36], "footer": [32, 34], "format_fn": [32, 34], "pub_model_mean_stat": [32, 34], "pub_model_median_stat": [32, 34], "pub_runtim": [32, 34], "pub_univari": [32, 34], "eval_model": [32, 35], "impute_rep_data": [32, 35], "scale_rep_data": [32, 35], "composite_fi_plot": [32, 36], "do_fi_boxplot": [32, 36], "do_fi_histogram": [32, 36], "do_model_prc": [32, 36], "do_model_roc": [32, 36], "do_plot_prc": [32, 36], "do_plot_roc": [32, 36], "fi_stat": [32, 36], "frac_fi": [32, 36], "get_fi_to_viz_sort": [32, 36], "kruskal_w": [32, 36], "metric_boxplot": [32, 36], "parse_runtim": [32, 36], "prep_fi": [32, 36], "prepar": [32, 36, 51], "primary_stat": [32, 36], "save_fi": [32, 36], "save_metric_stat": [32, 36], "select_for_composite_viz": [32, 36], "weight_fi": [32, 36], "weight_frac_fi": [32, 36], "show_plot": [33, 35, 36, 39, 46], "datacomparemain": 33, "py": [33, 34, 41, 44], "onc": [33, 34, 35], "entir": [33, 36, 41], "anova": [33, 36], "global_data": 33, "zero": [33, 36], "set1": 33, "set2": 33, "wilcoxon": [33, 36], "sum": [33, 36], "data_path": [34, 36, 41], "rep_data_path": [34, 35, 44, 45, 48], "load_algo": [34, 44], "pdf_reportmain": 34, "stats_d": 34, "best_metric_list": 34, "metric_name_list": 34, "ds2": 34, "result_limit": 34, "page_count": 34, "move": 34, "anoth": 34, "convert": 34, "list1": 34, "find": 34, "greatest": 34, "integ": [34, 43], "dataset_filenam": [35, 44], "dataset_for_rep": [35, 44, 45, 48], "match_label": [35, 41, 44, 51], "cv_partit": [35, 36], "export_feature_correl": [35, 44], "plot_roc": [35, 36, 44, 46], "plot_prc": [35, 36, 44, 46], "plot_metric_boxplot": [35, 36, 44, 46], "previous": [35, 44], "unseen": [35, 44], "deal": 35, "cv_rep_data": 35, "all_train_feature_list": 35, "40": [36, 42, 46], "metric_weight": [36, 46], "plot_fi_box": [36, 46], "deviat": 36, "fi_list": 36, "all_feature_list_to_viz": 36, "fig_nam": 36, "y_label_text": 36, "normal": 36, "fi_df_list": 36, "fi_med_list": 36, "distribut": 36, "median": 36, "prauc": 36, "mean_recal": 36, "alg_result_t": 36, "rep_data": 36, "mean_fpr": 36, "result_t": 36, "metric_dict": 36, "top_fi_med_norm_list": 36, "fracion": 36, "area": 36, "everi": 36, "intuit": 36, "won": 36, "overli": 36, "repres": 36, "might": 36, "lead": [36, 41], "impress": 36, "instead": [36, 43], "real": 36, "estat": 36, "potenti": [36, 41], "alter": 36, "height": 36, "features_to_viz": 36, "all_feature_list": 36, "fi_med_norm_list": 36, "visualis": 36, "index": 36, "weight": [36, 46], "becaus": 36, "perfectli": 36, "kruskal_summari": 36, "pars": 36, "organ": 36, "decod": 36, "master_list": 36, "fi_al": 36, "global_feature_list": 36, "std": 36, "dev": 36, "non_zero_union_featur": 36, "non_zero_union_index": 36, "ave_metric_list": 36, "fi_ave_norm_list": 36, "chosen": 36, "frac": 36, "plai": 36, "role": 36, "viz": 36, "fewer": 36, "top_model_featur": 36, "med_metric_list": 36, "want": 36, "frac_list": 36, "fraction": 36, "sign": 36, "get_cluster_param": [37, 39, 40, 41, 42, 43, 44, 45, 46], "submit_lsf_cluster_job": [37, 39, 40, 41, 42, 43, 44, 45, 46], "submit_slurm_cluster_job": [37, 39, 40, 41, 42, 43, 44, 45, 46], "save_metadata": [37, 40, 41, 42, 43, 44, 46], "make_dir_tre": [37, 41], "run_kfold": [37, 41], "save_alginfo": [37, 43], "get_algorithm": [37, 44], "del_tim": [38, 49], "del_old_cv": [38, 49], "run_clust": [39, 40, 41, 42, 43, 44, 45, 46, 47, 53], "queue": [39, 40, 41, 42, 43, 44, 45, 46, 50], "defq": [39, 40, 41, 42, 43, 44, 45, 46, 50], "reserved_memori": [39, 40, 41, 42, 43, 44, 45, 46], "collat": [39, 45, 46], "str": [39, 43, 45, 46], "run_parallel": [39, 40, 41, 42, 43, 44, 45, 46], "exploration_list": 41, "plot_list": 41, "manag": [41, 44], "metadata": 41, "submit": [41, 44], "exploratoryanalysisjob": 41, "see": 41, "warn": 41, "befor": 41, "sure": 41, "desir": 41, "should": 41, "comma": [41, 54], "txt": [41, 51], "indic": [41, 45], "na": 41, "accept": 41, "critic": 41, "filenam": 41, "liter": 41, "export_exploratory_analysi": 41, "differenti": 41, "id": [41, 44], "throughout": 41, "dataset_path": [41, 46, 51], "exist": 41, "alreadi": 41, "Then": 41, "hierarchi": 41, "eda_obj_list": 41, "mi": 42, "worst": 42, "illustr": [42, 46], "multiprocess": 42, "n_dataset": 42, "training_subsampl": 43, "do_lcs_sweep": 43, "lcs_nu": 43, "lcs_n": 43, "lcs_iter": 43, "200000": 43, "lcs_timeout": 43, "1200": 43, "resubmit": 43, "primari": 43, "algo": 43, "subsampl": 43, "permutation_import": 43, "uniformli": 43, "stop": 43, "longer": 43, "finish": 43, "sec": 43, "minut": 43, "tune": 43, "9": 44, "applymodeljob": 44, "box": [44, 46], "followup": 45, "primary_metr": 46, "len_cv": 46, "rm_tree": [47, 49], "clean_data": [47, 51], "feature_only_data": [47, 51], "get_outcom": [47, 51], "non_feature_data": [47, 51], "set_head": [47, 51], "len_onli": 48, "delet": 49, "temporari": 49, "necessari": 49, "serv": 49, "conveni": 49, "clutter": 49, "older": 49, "overwritten": 49, "cluster_typ": 50, "slurm": 50, "memori": 50, "tsv": 51, "co": 51, "variat": 51, "realli": 51, "mostli": 51, "learner": 51, "trace": 51, "back": 51, "subgroup": 51, "y_data": 51, "refer": 51, "y_true": 52, "likelihood": 52, "bac": 52, "ac": 52, "sp": 52, "pr": 52, "lrp": 52, "lrm": 52, "choic": 54, "argv": 54, "eda_job": 55, "kfold_job": 55, "job_list": 55}, "objects": {"": [[6, 0, 0, "-", "streamline"]], "streamline": [[7, 0, 0, "-", "dataprep"], [11, 0, 0, "-", "featurefns"], [14, 0, 0, "-", "modeling"], [20, 0, 0, "-", "models"], [32, 0, 0, "-", "postanalysis"], [37, 0, 0, "-", "runners"], [47, 0, 0, "-", "utils"]], "streamline.dataprep": [[8, 0, 0, "-", "data_process"], [9, 0, 0, "-", "exploratory_analysis"], [10, 0, 0, "-", "kfold_partitioning"]], "streamline.dataprep.data_process": [[8, 1, 1, "", "DataProcessing"]], "streamline.dataprep.data_process.DataProcessing": [[8, 2, 1, "", "data_scaling"], [8, 2, 1, "", "impute_cv_data"], [8, 2, 1, "", "load_data"], [8, 2, 1, "", "run"], [8, 2, 1, "", "save_runtime"], [8, 2, 1, "", "write_cv_files"]], "streamline.dataprep.exploratory_analysis": [[9, 1, 1, "", "EDAJob"]], "streamline.dataprep.exploratory_analysis.EDAJob": [[9, 2, 1, "", "counts_summary"], [9, 2, 1, "", "describe_data"], [9, 2, 1, "", "drop_ignored_rowcols"], [9, 2, 1, "", "feature_correlation_plot"], [9, 2, 1, "", "graph_selector"], [9, 2, 1, "", "identify_feature_types"], [9, 2, 1, "", "join"], [9, 2, 1, "", "make_log_folders"], [9, 2, 1, "", "missing_count_plot"], [9, 2, 1, "", "missingness_counts"], [9, 2, 1, "", "run"], [9, 2, 1, "", "run_explore"], [9, 2, 1, "", "save_runtime"], [9, 2, 1, "", "start"], [9, 2, 1, "", "test_selector"], [9, 2, 1, "", "univariate_analysis"], [9, 2, 1, "", "univariate_plots"]], "streamline.dataprep.kfold_partitioning": [[10, 1, 1, "", "KFoldPartitioner"]], "streamline.dataprep.kfold_partitioning.KFoldPartitioner": [[10, 2, 1, "", "cv_partitioner"], [10, 2, 1, "", "run"], [10, 2, 1, "", "save_datasets"]], "streamline.featurefns": [[12, 0, 0, "-", "importance"], [13, 0, 0, "-", "selection"]], "streamline.featurefns.importance": [[12, 1, 1, "", "FeatureImportance"]], "streamline.featurefns.importance.FeatureImportance": [[12, 2, 1, "", "pickle_scores"], [12, 2, 1, "", "prepare_data"], [12, 2, 1, "", "run"], [12, 2, 1, "", "run_multi_surf"], [12, 2, 1, "", "run_mutual_information"], [12, 2, 1, "", "save_runtime"], [12, 2, 1, "", "sort_save_fi_scores"]], "streamline.featurefns.selection": [[13, 1, 1, "", "FeatureSelection"]], "streamline.featurefns.selection.FeatureSelection": [[13, 2, 1, "", "gen_filtered_datasets"], [13, 2, 1, "", "report_ave_fs"], [13, 2, 1, "", "report_informative_features"], [13, 2, 1, "", "run"], [13, 2, 1, "", "save_runtime"], [13, 2, 1, "", "select_features"]], "streamline.modeling": [[15, 0, 0, "-", "basemodel"], [16, 0, 0, "-", "load_models"], [17, 0, 0, "-", "modeljob"], [18, 0, 0, "-", "parameters"], [19, 0, 0, "-", "utils"]], "streamline.modeling.basemodel": [[15, 1, 1, "", "BaseModel"]], "streamline.modeling.basemodel.BaseModel": [[15, 2, 1, "", "feature_importance"], [15, 2, 1, "", "fit"], [15, 2, 1, "", "hyper_eval"], [15, 2, 1, "", "model_evaluation"], [15, 2, 1, "", "objective"], [15, 2, 1, "", "optimize"], [15, 2, 1, "", "predict"]], "streamline.modeling.load_models": [[16, 3, 1, "", "load_class_from_folder"]], "streamline.modeling.modeljob": [[17, 1, 1, "", "ModelJob"]], "streamline.modeling.modeljob.ModelJob": [[17, 2, 1, "", "data_prep"], [17, 2, 1, "", "export_best_params"], [17, 2, 1, "", "run"], [17, 2, 1, "", "run_model"], [17, 2, 1, "", "save_runtime"]], "streamline.modeling.parameters": [[18, 3, 1, "", "get_parameters"]], "streamline.modeling.utils": [[19, 3, 1, "", "is_supported_model"], [19, 3, 1, "", "model_str_to_obj"]], "streamline.models": [[21, 0, 0, "-", "artificial_neural_network"], [22, 0, 0, "-", "decision_tree"], [23, 0, 0, "-", "elastic_net"], [24, 0, 0, "-", "genetic_programming"], [25, 0, 0, "-", "gradient_boosting"], [26, 0, 0, "-", "learning_based"], [27, 0, 0, "-", "linear_model"], [28, 0, 0, "-", "naive_bayes"], [29, 0, 0, "-", "neighbouring"], [30, 0, 0, "-", "random_forest"], [31, 0, 0, "-", "support_vector_machine"]], "streamline.models.artificial_neural_network": [[21, 1, 1, "", "MLPClassifier"]], "streamline.models.artificial_neural_network.MLPClassifier": [[21, 4, 1, "", "color"], [21, 4, 1, "", "model_name"], [21, 2, 1, "", "objective"], [21, 4, 1, "", "small_name"]], "streamline.models.decision_tree": [[22, 1, 1, "", "DecisionTreeClassifier"]], "streamline.models.decision_tree.DecisionTreeClassifier": [[22, 4, 1, "", "color"], [22, 4, 1, "", "model_name"], [22, 2, 1, "", "objective"], [22, 4, 1, "", "small_name"]], "streamline.models.elastic_net": [[23, 1, 1, "", "ElasticNetClassifier"]], "streamline.models.elastic_net.ElasticNetClassifier": [[23, 4, 1, "", "color"], [23, 4, 1, "", "model_name"], [23, 2, 1, "", "objective"], [23, 4, 1, "", "small_name"]], "streamline.models.genetic_programming": [[24, 1, 1, "", "GPClassifier"]], "streamline.models.genetic_programming.GPClassifier": [[24, 4, 1, "", "color"], [24, 4, 1, "", "model_name"], [24, 2, 1, "", "objective"], [24, 4, 1, "", "small_name"]], "streamline.models.gradient_boosting": [[25, 1, 1, "", "CGBClassifier"], [25, 1, 1, "", "GBClassifier"], [25, 1, 1, "", "LGBClassifier"], [25, 1, 1, "", "XGBClassifier"]], "streamline.models.gradient_boosting.CGBClassifier": [[25, 4, 1, "", "color"], [25, 4, 1, "", "model_name"], [25, 2, 1, "", "objective"], [25, 4, 1, "", "small_name"]], "streamline.models.gradient_boosting.GBClassifier": [[25, 4, 1, "", "color"], [25, 4, 1, "", "model_name"], [25, 2, 1, "", "objective"], [25, 4, 1, "", "small_name"]], "streamline.models.gradient_boosting.LGBClassifier": [[25, 4, 1, "", "color"], [25, 4, 1, "", "model_name"], [25, 2, 1, "", "objective"], [25, 4, 1, "", "small_name"]], "streamline.models.gradient_boosting.XGBClassifier": [[25, 4, 1, "", "color"], [25, 4, 1, "", "model_name"], [25, 2, 1, "", "objective"], [25, 4, 1, "", "small_name"]], "streamline.models.learning_based": [[26, 1, 1, "", "ExSTraCSClassifier"], [26, 1, 1, "", "XCSClassifier"], [26, 1, 1, "", "eLCSClassifier"]], "streamline.models.learning_based.ExSTraCSClassifier": [[26, 4, 1, "", "color"], [26, 4, 1, "", "model_name"], [26, 2, 1, "", "objective"], [26, 4, 1, "", "small_name"]], "streamline.models.learning_based.XCSClassifier": [[26, 4, 1, "", "color"], [26, 4, 1, "", "model_name"], [26, 2, 1, "", "objective"], [26, 4, 1, "", "small_name"]], "streamline.models.learning_based.eLCSClassifier": [[26, 4, 1, "", "color"], [26, 4, 1, "", "model_name"], [26, 2, 1, "", "objective"], [26, 4, 1, "", "small_name"]], "streamline.models.linear_model": [[27, 1, 1, "", "LogisticRegression"]], "streamline.models.linear_model.LogisticRegression": [[27, 4, 1, "", "color"], [27, 4, 1, "", "model_name"], [27, 2, 1, "", "objective"], [27, 4, 1, "", "small_name"]], "streamline.models.naive_bayes": [[28, 1, 1, "", "NaiveBayesClassifier"]], "streamline.models.naive_bayes.NaiveBayesClassifier": [[28, 4, 1, "", "color"], [28, 4, 1, "", "model_name"], [28, 2, 1, "", "objective"], [28, 4, 1, "", "small_name"]], "streamline.models.neighbouring": [[29, 1, 1, "", "KNNClassifier"]], "streamline.models.neighbouring.KNNClassifier": [[29, 4, 1, "", "color"], [29, 4, 1, "", "model_name"], [29, 2, 1, "", "objective"], [29, 4, 1, "", "small_name"]], "streamline.models.random_forest": [[30, 1, 1, "", "RandomForestClassifier"]], "streamline.models.random_forest.RandomForestClassifier": [[30, 4, 1, "", "color"], [30, 4, 1, "", "model_name"], [30, 2, 1, "", "objective"], [30, 4, 1, "", "small_name"]], "streamline.models.support_vector_machine": [[31, 1, 1, "", "SupportVectorClassifier"]], "streamline.models.support_vector_machine.SupportVectorClassifier": [[31, 4, 1, "", "color"], [31, 4, 1, "", "model_name"], [31, 2, 1, "", "objective"], [31, 4, 1, "", "small_name"]], "streamline.postanalysis": [[33, 0, 0, "-", "dataset_compare"], [34, 0, 0, "-", "gererate_report"], [35, 0, 0, "-", "model_replicate"], [36, 0, 0, "-", "statistics"]], "streamline.postanalysis.dataset_compare": [[33, 1, 1, "", "CompareJob"]], "streamline.postanalysis.dataset_compare.CompareJob": [[33, 2, 1, "", "best_kruscall_wallis"], [33, 2, 1, "", "best_mann_whitney_u"], [33, 2, 1, "", "best_wilcoxon_rank"], [33, 2, 1, "", "data_compare_bp"], [33, 2, 1, "", "data_compare_bp_all"], [33, 2, 1, "", "inter_set_best_fn"], [33, 2, 1, "", "inter_set_fn"], [33, 2, 1, "", "kruscall_wallis"], [33, 2, 1, "", "mann_whitney_u"], [33, 2, 1, "", "run"], [33, 2, 1, "", "save_runtime"], [33, 2, 1, "", "temp_summary"], [33, 2, 1, "", "wilcoxon_rank"]], "streamline.postanalysis.gererate_report": [[34, 1, 1, "", "ReportJob"], [34, 3, 1, "", "list_to_string"], [34, 3, 1, "", "ngi"]], "streamline.postanalysis.gererate_report.ReportJob": [[34, 2, 1, "", "footer"], [34, 2, 1, "", "format_fn"], [34, 2, 1, "", "job"], [34, 2, 1, "", "pub_model_mean_stats"], [34, 2, 1, "", "pub_model_median_stats"], [34, 2, 1, "", "pub_runtime"], [34, 2, 1, "", "pub_univariate"], [34, 2, 1, "", "run"]], "streamline.postanalysis.model_replicate": [[35, 1, 1, "", "ReplicateJob"]], "streamline.postanalysis.model_replicate.ReplicateJob": [[35, 2, 1, "", "eval_model"], [35, 2, 1, "", "impute_rep_data"], [35, 2, 1, "", "run"], [35, 2, 1, "", "scale_rep_data"]], "streamline.postanalysis.statistics": [[36, 1, 1, "", "StatsJob"]], "streamline.postanalysis.statistics.StatsJob": [[36, 2, 1, "", "composite_fi_plot"], [36, 2, 1, "", "do_fi_boxplots"], [36, 2, 1, "", "do_fi_histogram"], [36, 2, 1, "", "do_model_prc"], [36, 2, 1, "", "do_model_roc"], [36, 2, 1, "", "do_plot_prc"], [36, 2, 1, "", "do_plot_roc"], [36, 2, 1, "", "fi_stats"], [36, 2, 1, "", "frac_fi"], [36, 2, 1, "", "get_fi_to_viz_sorted"], [36, 2, 1, "", "kruskal_wallis"], [36, 2, 1, "", "mann_whitney_u"], [36, 2, 1, "", "metric_boxplots"], [36, 2, 1, "", "parse_runtime"], [36, 2, 1, "", "prep_fi"], [36, 2, 1, "", "preparation"], [36, 2, 1, "", "primary_stats"], [36, 2, 1, "", "run"], [36, 2, 1, "", "save_fi"], [36, 2, 1, "", "save_metric_stats"], [36, 2, 1, "", "save_runtime"], [36, 2, 1, "", "select_for_composite_viz"], [36, 2, 1, "", "weight_fi"], [36, 2, 1, "", "weight_frac_fi"], [36, 2, 1, "", "wilcoxon_rank"]], "streamline.runners": [[38, 0, 0, "-", "clean_runner"], [39, 0, 0, "-", "compare_runner"], [40, 0, 0, "-", "dataprocess_runner"], [41, 0, 0, "-", "eda_runner"], [42, 0, 0, "-", "feature_runner"], [43, 0, 0, "-", "model_runner"], [44, 0, 0, "-", "replicate_runner"], [45, 0, 0, "-", "report_runner"], [46, 0, 0, "-", "stats_runner"]], "streamline.runners.clean_runner": [[38, 1, 1, "", "CleanRunner"]], "streamline.runners.clean_runner.CleanRunner": [[38, 2, 1, "", "run"]], "streamline.runners.compare_runner": [[39, 1, 1, "", "CompareRunner"]], "streamline.runners.compare_runner.CompareRunner": [[39, 2, 1, "", "get_cluster_params"], [39, 2, 1, "", "run"], [39, 2, 1, "", "submit_lsf_cluster_job"], [39, 2, 1, "", "submit_slurm_cluster_job"]], "streamline.runners.dataprocess_runner": [[40, 1, 1, "", "DataProcessRunner"]], "streamline.runners.dataprocess_runner.DataProcessRunner": [[40, 2, 1, "", "get_cluster_params"], [40, 2, 1, "", "run"], [40, 2, 1, "", "save_metadata"], [40, 2, 1, "", "submit_lsf_cluster_job"], [40, 2, 1, "", "submit_slurm_cluster_job"]], "streamline.runners.eda_runner": [[41, 1, 1, "", "EDARunner"]], "streamline.runners.eda_runner.EDARunner": [[41, 2, 1, "", "get_cluster_params"], [41, 2, 1, "", "make_dir_tree"], [41, 2, 1, "", "run"], [41, 2, 1, "", "run_kfold"], [41, 2, 1, "", "save_metadata"], [41, 2, 1, "", "submit_lsf_cluster_job"], [41, 2, 1, "", "submit_slurm_cluster_job"]], "streamline.runners.feature_runner": [[42, 1, 1, "", "FeatureImportanceRunner"], [42, 1, 1, "", "FeatureSelectionRunner"]], "streamline.runners.feature_runner.FeatureImportanceRunner": [[42, 2, 1, "", "get_cluster_params"], [42, 2, 1, "", "run"], [42, 2, 1, "", "save_metadata"], [42, 2, 1, "", "submit_lsf_cluster_job"], [42, 2, 1, "", "submit_slurm_cluster_job"]], "streamline.runners.feature_runner.FeatureSelectionRunner": [[42, 2, 1, "", "get_cluster_params"], [42, 2, 1, "", "run"], [42, 2, 1, "", "save_metadata"], [42, 2, 1, "", "submit_lsf_cluster_job"], [42, 2, 1, "", "submit_slurm_cluster_job"]], "streamline.runners.model_runner": [[43, 1, 1, "", "ModelExperimentRunner"]], "streamline.runners.model_runner.ModelExperimentRunner": [[43, 2, 1, "", "get_cluster_params"], [43, 2, 1, "", "run"], [43, 2, 1, "", "save_alginfo"], [43, 2, 1, "", "save_metadata"], [43, 2, 1, "", "submit_lsf_cluster_job"], [43, 2, 1, "", "submit_slurm_cluster_job"]], "streamline.runners.replicate_runner": [[44, 1, 1, "", "ReplicationRunner"]], "streamline.runners.replicate_runner.ReplicationRunner": [[44, 2, 1, "", "get_algorithms"], [44, 2, 1, "", "get_cluster_params"], [44, 2, 1, "", "run"], [44, 2, 1, "", "save_metadata"], [44, 2, 1, "", "submit_lsf_cluster_job"], [44, 2, 1, "", "submit_slurm_cluster_job"]], "streamline.runners.report_runner": [[45, 1, 1, "", "ReportRunner"]], "streamline.runners.report_runner.ReportRunner": [[45, 2, 1, "", "get_cluster_params"], [45, 2, 1, "", "run"], [45, 2, 1, "", "submit_lsf_cluster_job"], [45, 2, 1, "", "submit_slurm_cluster_job"]], "streamline.runners.stats_runner": [[46, 1, 1, "", "StatsRunner"]], "streamline.runners.stats_runner.StatsRunner": [[46, 2, 1, "", "get_cluster_params"], [46, 2, 1, "", "run"], [46, 2, 1, "", "save_metadata"], [46, 2, 1, "", "submit_lsf_cluster_job"], [46, 2, 1, "", "submit_slurm_cluster_job"]], "streamline.utils": [[48, 0, 0, "-", "checker"], [49, 0, 0, "-", "cleanup"], [50, 0, 0, "-", "cluster"], [51, 0, 0, "-", "dataset"], [52, 0, 0, "-", "evaluation"], [53, 0, 0, "-", "job"], [54, 0, 0, "-", "parser"], [55, 0, 0, "-", "runners"]], "streamline.utils.checker": [[48, 3, 1, "", "check_phase"], [48, 3, 1, "", "check_phase_1"], [48, 3, 1, "", "check_phase_10"], [48, 3, 1, "", "check_phase_2"], [48, 3, 1, "", "check_phase_3"], [48, 3, 1, "", "check_phase_4"], [48, 3, 1, "", "check_phase_5"], [48, 3, 1, "", "check_phase_6"], [48, 3, 1, "", "check_phase_7"], [48, 3, 1, "", "check_phase_8"], [48, 3, 1, "", "check_phase_9"]], "streamline.utils.cleanup": [[49, 1, 1, "", "Cleaner"]], "streamline.utils.cleanup.Cleaner": [[49, 2, 1, "", "rm_tree"], [49, 2, 1, "", "run"]], "streamline.utils.cluster": [[50, 3, 1, "", "get_cluster"]], "streamline.utils.dataset": [[51, 1, 1, "", "Dataset"]], "streamline.utils.dataset.Dataset": [[51, 2, 1, "", "clean_data"], [51, 2, 1, "", "feature_only_data"], [51, 2, 1, "", "get_outcome"], [51, 2, 1, "", "load_data"], [51, 2, 1, "", "non_feature_data"], [51, 2, 1, "", "set_headers"]], "streamline.utils.evaluation": [[52, 3, 1, "", "class_eval"]], "streamline.utils.job": [[53, 1, 1, "", "Job"]], "streamline.utils.job.Job": [[53, 2, 1, "", "run"], [53, 2, 1, "", "run_cluster"]], "streamline.utils.parser": [[54, 3, 1, "", "comma_sep_choices"], [54, 3, 1, "", "parser_function"]], "streamline.utils.runners": [[55, 3, 1, "", "model_runner_fn"], [55, 3, 1, "", "parallel_eda_call"], [55, 3, 1, "", "parallel_kfold_call"], [55, 3, 1, "", "run_jobs"], [55, 3, 1, "", "runner_fn"], [55, 3, 1, "", "sub_jobs"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"about": [0, 56], "faq": 0, "what": 0, "level": 0, "comput": 0, "skill": 0, "i": 0, "requir": 0, "us": [0, 56], "can": 0, "doe": 0, "streamlin": [0, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55], "includ": 0, "how": 0, "differ": 0, "from": 0, "other": 0, "automl": 0, "tool": 0, "run": 0, "mode": 0, "view": 0, "pipelin": [0, 1], "output": 0, "befor": 0, "uniqu": 0, "characterist": 0, "sampl": 0, "figur": 0, "gener": 0, "citat": 1, "urb": 1, "lab": 1, "relat": 1, "research": 1, "A": 1, "rigor": 1, "ml": 1, "binari": 1, "classif": 1, "relief": 1, "base": 1, "featur": 1, "import": [1, 12], "estim": 1, "collect": 1, "select": [1, 13], "learn": 1, "classifi": 1, "system": 1, "develop": 2, "note": 2, "histori": 2, "plan": 2, "extens": 2, "improv": 2, "known": 2, "issu": 2, "logist": 2, "capabl": 2, "algorithm": 2, "overview": 3, "preprint": 3, "api": 3, "document": [3, 5], "instal": 4, "code": 5, "packag": [6, 7, 11, 14, 20, 32, 37, 47], "subpackag": 6, "dataprep": [7, 8, 9, 10], "submodul": [7, 11, 14, 20, 32, 37, 47], "data_process": 8, "modul": [8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55], "exploratory_analysi": 9, "kfold_partit": 10, "featurefn": [11, 12, 13], "model": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 56], "basemodel": 15, "load_model": 16, "modeljob": 17, "paramet": 18, "util": [19, 47, 48, 49, 50, 51, 52, 53, 54, 55], "artificial_neural_network": 21, "decision_tre": 22, "elastic_net": 23, "genetic_program": 24, "gradient_boost": 25, "learning_bas": 26, "linear_model": 27, "naive_bay": 28, "neighbour": 29, "random_forest": 30, "support_vector_machin": 31, "postanalysi": [32, 33, 34, 35, 36], "dataset_compar": 33, "gererate_report": 34, "model_repl": 35, "statist": 36, "runner": [37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 55], "clean_runn": 38, "compare_runn": 39, "dataprocess_runn": 40, "eda_runn": 41, "feature_runn": 42, "model_runn": 43, "replicate_runn": 44, "report_runn": 45, "stats_runn": 46, "checker": 48, "cleanup": 49, "cluster": 50, "dataset": [51, 56], "evalu": 52, "job": 53, "parser": 54, "usag": 56, "jupyt": 56, "notebook": 56, "commandlin": 56, "demonstr": 56, "custom": 56}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"About (FAQs)": [[0, "about-faqs"]], "What level of computing skill is required for use?": [[0, "what-level-of-computing-skill-is-required-for-use"]], "What can it be used for?": [[0, "what-can-it-be-used-for"]], "What does STREAMLINE include?": [[0, "what-does-streamline-include"]], "How is STREAMLINE different from other AutoML tools?": [[0, "how-is-streamline-different-from-other-automl-tools"]], "STREAMLINE Run Modes": [[0, "streamline-run-modes"]], "View pipeline and output before running": [[0, "view-pipeline-and-output-before-running"]], "Unique Characteristics of STREAMLINE": [[0, "unique-characteristics-of-streamline"]], "Sample Figures generated by STREAMLINE": [[0, "sample-figures-generated-by-streamline"]], "Citations": [[1, "citations"]], "URBS-lab related research": [[1, "urbs-lab-related-research"]], "A rigorous ML pipeline for binary classification": [[1, "a-rigorous-ml-pipeline-for-binary-classification"]], "Relief-based feature importance estimation": [[1, "relief-based-feature-importance-estimation"]], "Collective feature selection": [[1, "collective-feature-selection"]], "Learning classifier systems": [[1, "learning-classifier-systems"]], "Development notes": [[2, "development-notes"]], "History": [[2, "history"]], "Planned extensions/improvements": [[2, "planned-extensions-improvements"]], "Known issues": [[2, "known-issues"]], "Logistical extensions": [[2, "logistical-extensions"]], "Capabilities extensions": [[2, "capabilities-extensions"]], "Algorithmic extensions": [[2, "algorithmic-extensions"]], "STREAMLINE": [[3, "streamline"]], "Overview": [[3, "overview"]], "Preprint": [[3, "preprint"]], "API Documentation": [[3, "api-documentation"]], "Installation": [[4, "installation"]], "Code Documentation": [[5, "code-documentation"]], "streamline package": [[6, "module-streamline"]], "Subpackages": [[6, "subpackages"]], "streamline.dataprep package": [[7, "module-streamline.dataprep"]], "Submodules": [[7, "submodules"], [11, "submodules"], [14, "submodules"], [20, "submodules"], [32, "submodules"], [37, "submodules"], [47, "submodules"]], "streamline.dataprep.data_process module": [[8, "module-streamline.dataprep.data_process"]], "streamline.dataprep.exploratory_analysis module": [[9, "module-streamline.dataprep.exploratory_analysis"]], "streamline.dataprep.kfold_partitioning module": [[10, "module-streamline.dataprep.kfold_partitioning"]], "streamline.featurefns package": [[11, "module-streamline.featurefns"]], "streamline.featurefns.importance module": [[12, "module-streamline.featurefns.importance"]], "streamline.featurefns.selection module": [[13, "module-streamline.featurefns.selection"]], "streamline.modeling package": [[14, "module-streamline.modeling"]], "streamline.modeling.basemodel module": [[15, "module-streamline.modeling.basemodel"]], "streamline.modeling.load_models module": [[16, "module-streamline.modeling.load_models"]], "streamline.modeling.modeljob module": [[17, "module-streamline.modeling.modeljob"]], "streamline.modeling.parameters module": [[18, "module-streamline.modeling.parameters"]], "streamline.modeling.utils module": [[19, "module-streamline.modeling.utils"]], "streamline.models package": [[20, "module-streamline.models"]], "streamline.models.artificial_neural_network module": [[21, "module-streamline.models.artificial_neural_network"]], "streamline.models.decision_tree module": [[22, "module-streamline.models.decision_tree"]], "streamline.models.elastic_net module": [[23, "module-streamline.models.elastic_net"]], "streamline.models.genetic_programming module": [[24, "module-streamline.models.genetic_programming"]], "streamline.models.gradient_boosting module": [[25, "module-streamline.models.gradient_boosting"]], "streamline.models.learning_based module": [[26, "module-streamline.models.learning_based"]], "streamline.models.linear_model module": [[27, "module-streamline.models.linear_model"]], "streamline.models.naive_bayes module": [[28, "module-streamline.models.naive_bayes"]], "streamline.models.neighbouring module": [[29, "module-streamline.models.neighbouring"]], "streamline.models.random_forest module": [[30, "module-streamline.models.random_forest"]], "streamline.models.support_vector_machine module": [[31, "module-streamline.models.support_vector_machine"]], "streamline.postanalysis package": [[32, "module-streamline.postanalysis"]], "streamline.postanalysis.dataset_compare module": [[33, "module-streamline.postanalysis.dataset_compare"]], "streamline.postanalysis.gererate_report module": [[34, "module-streamline.postanalysis.gererate_report"]], "streamline.postanalysis.model_replicate module": [[35, "module-streamline.postanalysis.model_replicate"]], "streamline.postanalysis.statistics module": [[36, "module-streamline.postanalysis.statistics"]], "streamline.runners package": [[37, "module-streamline.runners"]], "streamline.runners.clean_runner module": [[38, "module-streamline.runners.clean_runner"]], "streamline.runners.compare_runner module": [[39, "module-streamline.runners.compare_runner"]], "streamline.runners.dataprocess_runner module": [[40, "module-streamline.runners.dataprocess_runner"]], "streamline.runners.eda_runner module": [[41, "module-streamline.runners.eda_runner"]], "streamline.runners.feature_runner module": [[42, "module-streamline.runners.feature_runner"]], "streamline.runners.model_runner module": [[43, "module-streamline.runners.model_runner"]], "streamline.runners.replicate_runner module": [[44, "module-streamline.runners.replicate_runner"]], "streamline.runners.report_runner module": [[45, "module-streamline.runners.report_runner"]], "streamline.runners.stats_runner module": [[46, "module-streamline.runners.stats_runner"]], "streamline.utils package": [[47, "module-streamline.utils"]], "streamline.utils.checker module": [[48, "module-streamline.utils.checker"]], "streamline.utils.cleanup module": [[49, "module-streamline.utils.cleanup"]], "streamline.utils.cluster module": [[50, "module-streamline.utils.cluster"]], "streamline.utils.dataset module": [[51, "module-streamline.utils.dataset"]], "streamline.utils.evaluation module": [[52, "module-streamline.utils.evaluation"]], "streamline.utils.job module": [[53, "module-streamline.utils.job"]], "streamline.utils.parser module": [[54, "module-streamline.utils.parser"]], "streamline.utils.runners module": [[55, "module-streamline.utils.runners"]], "Usage": [[56, "usage"]], "Jupyter Notebook": [[56, "jupyter-notebook"]], "Commandline Demonstration": [[56, "commandline-demonstration"]], "Using Custom Models": [[56, "using-custom-models"]], "About Demonstration Dataset": [[56, "about-demonstration-dataset"]]}, "indexentries": {"module": [[6, "module-streamline"], [7, "module-streamline.dataprep"], [8, "module-streamline.dataprep.data_process"], [9, "module-streamline.dataprep.exploratory_analysis"], [10, "module-streamline.dataprep.kfold_partitioning"], [11, "module-streamline.featurefns"], [12, "module-streamline.featurefns.importance"], [13, "module-streamline.featurefns.selection"], [14, "module-streamline.modeling"], [15, "module-streamline.modeling.basemodel"], [16, "module-streamline.modeling.load_models"], [17, "module-streamline.modeling.modeljob"], [18, "module-streamline.modeling.parameters"], [19, "module-streamline.modeling.utils"], [20, "module-streamline.models"], [21, "module-streamline.models.artificial_neural_network"], [22, "module-streamline.models.decision_tree"], [23, "module-streamline.models.elastic_net"], [24, "module-streamline.models.genetic_programming"], [25, "module-streamline.models.gradient_boosting"], [26, "module-streamline.models.learning_based"], [27, "module-streamline.models.linear_model"], [28, "module-streamline.models.naive_bayes"], [29, "module-streamline.models.neighbouring"], [30, "module-streamline.models.random_forest"], [31, "module-streamline.models.support_vector_machine"], [32, "module-streamline.postanalysis"], [33, "module-streamline.postanalysis.dataset_compare"], [34, "module-streamline.postanalysis.gererate_report"], [35, "module-streamline.postanalysis.model_replicate"], [36, "module-streamline.postanalysis.statistics"], [37, "module-streamline.runners"], [38, "module-streamline.runners.clean_runner"], [39, "module-streamline.runners.compare_runner"], [40, "module-streamline.runners.dataprocess_runner"], [41, "module-streamline.runners.eda_runner"], [42, "module-streamline.runners.feature_runner"], [43, "module-streamline.runners.model_runner"], [44, "module-streamline.runners.replicate_runner"], [45, "module-streamline.runners.report_runner"], [46, "module-streamline.runners.stats_runner"], [47, "module-streamline.utils"], [48, "module-streamline.utils.checker"], [49, "module-streamline.utils.cleanup"], [50, "module-streamline.utils.cluster"], [51, "module-streamline.utils.dataset"], [52, "module-streamline.utils.evaluation"], [53, "module-streamline.utils.job"], [54, "module-streamline.utils.parser"], [55, "module-streamline.utils.runners"]], "streamline": [[6, "module-streamline"]], "streamline.dataprep": [[7, "module-streamline.dataprep"]], "dataprocessing (class in streamline.dataprep.data_process)": [[8, "streamline.dataprep.data_process.DataProcessing"]], "data_scaling() (streamline.dataprep.data_process.dataprocessing method)": [[8, "streamline.dataprep.data_process.DataProcessing.data_scaling"]], "impute_cv_data() (streamline.dataprep.data_process.dataprocessing method)": [[8, "streamline.dataprep.data_process.DataProcessing.impute_cv_data"]], "load_data() (streamline.dataprep.data_process.dataprocessing method)": [[8, "streamline.dataprep.data_process.DataProcessing.load_data"]], "run() (streamline.dataprep.data_process.dataprocessing method)": [[8, "streamline.dataprep.data_process.DataProcessing.run"]], "save_runtime() (streamline.dataprep.data_process.dataprocessing method)": [[8, "streamline.dataprep.data_process.DataProcessing.save_runtime"]], "streamline.dataprep.data_process": [[8, "module-streamline.dataprep.data_process"]], "write_cv_files() (streamline.dataprep.data_process.dataprocessing method)": [[8, "streamline.dataprep.data_process.DataProcessing.write_cv_files"]], "edajob (class in streamline.dataprep.exploratory_analysis)": [[9, "streamline.dataprep.exploratory_analysis.EDAJob"]], "counts_summary() (streamline.dataprep.exploratory_analysis.edajob method)": [[9, "streamline.dataprep.exploratory_analysis.EDAJob.counts_summary"]], "describe_data() (streamline.dataprep.exploratory_analysis.edajob method)": [[9, "streamline.dataprep.exploratory_analysis.EDAJob.describe_data"]], "drop_ignored_rowcols() (streamline.dataprep.exploratory_analysis.edajob method)": [[9, "streamline.dataprep.exploratory_analysis.EDAJob.drop_ignored_rowcols"]], "feature_correlation_plot() (streamline.dataprep.exploratory_analysis.edajob method)": [[9, "streamline.dataprep.exploratory_analysis.EDAJob.feature_correlation_plot"]], "graph_selector() (streamline.dataprep.exploratory_analysis.edajob method)": [[9, "streamline.dataprep.exploratory_analysis.EDAJob.graph_selector"]], "identify_feature_types() (streamline.dataprep.exploratory_analysis.edajob method)": [[9, "streamline.dataprep.exploratory_analysis.EDAJob.identify_feature_types"]], "join() (streamline.dataprep.exploratory_analysis.edajob method)": [[9, "streamline.dataprep.exploratory_analysis.EDAJob.join"]], "make_log_folders() (streamline.dataprep.exploratory_analysis.edajob method)": [[9, "streamline.dataprep.exploratory_analysis.EDAJob.make_log_folders"]], "missing_count_plot() (streamline.dataprep.exploratory_analysis.edajob method)": [[9, "streamline.dataprep.exploratory_analysis.EDAJob.missing_count_plot"]], "missingness_counts() (streamline.dataprep.exploratory_analysis.edajob method)": [[9, "streamline.dataprep.exploratory_analysis.EDAJob.missingness_counts"]], "run() (streamline.dataprep.exploratory_analysis.edajob method)": [[9, "streamline.dataprep.exploratory_analysis.EDAJob.run"]], "run_explore() (streamline.dataprep.exploratory_analysis.edajob method)": [[9, "streamline.dataprep.exploratory_analysis.EDAJob.run_explore"]], "save_runtime() (streamline.dataprep.exploratory_analysis.edajob method)": [[9, "streamline.dataprep.exploratory_analysis.EDAJob.save_runtime"]], "start() (streamline.dataprep.exploratory_analysis.edajob method)": [[9, "streamline.dataprep.exploratory_analysis.EDAJob.start"]], "streamline.dataprep.exploratory_analysis": [[9, "module-streamline.dataprep.exploratory_analysis"]], "test_selector() (streamline.dataprep.exploratory_analysis.edajob method)": [[9, "streamline.dataprep.exploratory_analysis.EDAJob.test_selector"]], "univariate_analysis() (streamline.dataprep.exploratory_analysis.edajob method)": [[9, "streamline.dataprep.exploratory_analysis.EDAJob.univariate_analysis"]], "univariate_plots() (streamline.dataprep.exploratory_analysis.edajob method)": [[9, "streamline.dataprep.exploratory_analysis.EDAJob.univariate_plots"]], "kfoldpartitioner (class in streamline.dataprep.kfold_partitioning)": [[10, "streamline.dataprep.kfold_partitioning.KFoldPartitioner"]], "cv_partitioner() (streamline.dataprep.kfold_partitioning.kfoldpartitioner method)": [[10, "streamline.dataprep.kfold_partitioning.KFoldPartitioner.cv_partitioner"]], "run() (streamline.dataprep.kfold_partitioning.kfoldpartitioner method)": [[10, "streamline.dataprep.kfold_partitioning.KFoldPartitioner.run"]], "save_datasets() (streamline.dataprep.kfold_partitioning.kfoldpartitioner method)": [[10, "streamline.dataprep.kfold_partitioning.KFoldPartitioner.save_datasets"]], "streamline.dataprep.kfold_partitioning": [[10, "module-streamline.dataprep.kfold_partitioning"]], "streamline.featurefns": [[11, "module-streamline.featurefns"]], "featureimportance (class in streamline.featurefns.importance)": [[12, "streamline.featurefns.importance.FeatureImportance"]], "pickle_scores() (streamline.featurefns.importance.featureimportance method)": [[12, "streamline.featurefns.importance.FeatureImportance.pickle_scores"]], "prepare_data() (streamline.featurefns.importance.featureimportance method)": [[12, "streamline.featurefns.importance.FeatureImportance.prepare_data"]], "run() (streamline.featurefns.importance.featureimportance method)": [[12, "streamline.featurefns.importance.FeatureImportance.run"]], "run_multi_surf() (streamline.featurefns.importance.featureimportance method)": [[12, "streamline.featurefns.importance.FeatureImportance.run_multi_surf"]], "run_mutual_information() (streamline.featurefns.importance.featureimportance method)": [[12, "streamline.featurefns.importance.FeatureImportance.run_mutual_information"]], "save_runtime() (streamline.featurefns.importance.featureimportance method)": [[12, "streamline.featurefns.importance.FeatureImportance.save_runtime"]], "sort_save_fi_scores() (streamline.featurefns.importance.featureimportance method)": [[12, "streamline.featurefns.importance.FeatureImportance.sort_save_fi_scores"]], "streamline.featurefns.importance": [[12, "module-streamline.featurefns.importance"]], "featureselection (class in streamline.featurefns.selection)": [[13, "streamline.featurefns.selection.FeatureSelection"]], "gen_filtered_datasets() (streamline.featurefns.selection.featureselection method)": [[13, "streamline.featurefns.selection.FeatureSelection.gen_filtered_datasets"]], "report_ave_fs() (streamline.featurefns.selection.featureselection method)": [[13, "streamline.featurefns.selection.FeatureSelection.report_ave_fs"]], "report_informative_features() (streamline.featurefns.selection.featureselection method)": [[13, "streamline.featurefns.selection.FeatureSelection.report_informative_features"]], "run() (streamline.featurefns.selection.featureselection method)": [[13, "streamline.featurefns.selection.FeatureSelection.run"]], "save_runtime() (streamline.featurefns.selection.featureselection method)": [[13, "streamline.featurefns.selection.FeatureSelection.save_runtime"]], "select_features() (streamline.featurefns.selection.featureselection method)": [[13, "streamline.featurefns.selection.FeatureSelection.select_features"]], "streamline.featurefns.selection": [[13, "module-streamline.featurefns.selection"]], "streamline.modeling": [[14, "module-streamline.modeling"]], "basemodel (class in streamline.modeling.basemodel)": [[15, "streamline.modeling.basemodel.BaseModel"]], "feature_importance() (streamline.modeling.basemodel.basemodel method)": [[15, "streamline.modeling.basemodel.BaseModel.feature_importance"]], "fit() (streamline.modeling.basemodel.basemodel method)": [[15, "streamline.modeling.basemodel.BaseModel.fit"]], "hyper_eval() (streamline.modeling.basemodel.basemodel method)": [[15, "streamline.modeling.basemodel.BaseModel.hyper_eval"]], "model_evaluation() (streamline.modeling.basemodel.basemodel method)": [[15, "streamline.modeling.basemodel.BaseModel.model_evaluation"]], "objective() (streamline.modeling.basemodel.basemodel method)": [[15, "streamline.modeling.basemodel.BaseModel.objective"]], "optimize() (streamline.modeling.basemodel.basemodel method)": [[15, "streamline.modeling.basemodel.BaseModel.optimize"]], "predict() (streamline.modeling.basemodel.basemodel method)": [[15, "streamline.modeling.basemodel.BaseModel.predict"]], "streamline.modeling.basemodel": [[15, "module-streamline.modeling.basemodel"]], "load_class_from_folder() (in module streamline.modeling.load_models)": [[16, "streamline.modeling.load_models.load_class_from_folder"]], "streamline.modeling.load_models": [[16, "module-streamline.modeling.load_models"]], "modeljob (class in streamline.modeling.modeljob)": [[17, "streamline.modeling.modeljob.ModelJob"]], "data_prep() (streamline.modeling.modeljob.modeljob method)": [[17, "streamline.modeling.modeljob.ModelJob.data_prep"]], "export_best_params() (streamline.modeling.modeljob.modeljob static method)": [[17, "streamline.modeling.modeljob.ModelJob.export_best_params"]], "run() (streamline.modeling.modeljob.modeljob method)": [[17, "streamline.modeling.modeljob.ModelJob.run"]], "run_model() (streamline.modeling.modeljob.modeljob method)": [[17, "streamline.modeling.modeljob.ModelJob.run_model"]], "save_runtime() (streamline.modeling.modeljob.modeljob method)": [[17, "streamline.modeling.modeljob.ModelJob.save_runtime"]], "streamline.modeling.modeljob": [[17, "module-streamline.modeling.modeljob"]], "get_parameters() (in module streamline.modeling.parameters)": [[18, "streamline.modeling.parameters.get_parameters"]], "streamline.modeling.parameters": [[18, "module-streamline.modeling.parameters"]], "is_supported_model() (in module streamline.modeling.utils)": [[19, "streamline.modeling.utils.is_supported_model"]], "model_str_to_obj() (in module streamline.modeling.utils)": [[19, "streamline.modeling.utils.model_str_to_obj"]], "streamline.modeling.utils": [[19, "module-streamline.modeling.utils"]], "streamline.models": [[20, "module-streamline.models"]], "mlpclassifier (class in streamline.models.artificial_neural_network)": [[21, "streamline.models.artificial_neural_network.MLPClassifier"]], "color (streamline.models.artificial_neural_network.mlpclassifier attribute)": [[21, "streamline.models.artificial_neural_network.MLPClassifier.color"]], "model_name (streamline.models.artificial_neural_network.mlpclassifier attribute)": [[21, "streamline.models.artificial_neural_network.MLPClassifier.model_name"]], "objective() (streamline.models.artificial_neural_network.mlpclassifier method)": [[21, "streamline.models.artificial_neural_network.MLPClassifier.objective"]], "small_name (streamline.models.artificial_neural_network.mlpclassifier attribute)": [[21, "streamline.models.artificial_neural_network.MLPClassifier.small_name"]], "streamline.models.artificial_neural_network": [[21, "module-streamline.models.artificial_neural_network"]], "decisiontreeclassifier (class in streamline.models.decision_tree)": [[22, "streamline.models.decision_tree.DecisionTreeClassifier"]], "color (streamline.models.decision_tree.decisiontreeclassifier attribute)": [[22, "streamline.models.decision_tree.DecisionTreeClassifier.color"]], "model_name (streamline.models.decision_tree.decisiontreeclassifier attribute)": [[22, "streamline.models.decision_tree.DecisionTreeClassifier.model_name"]], "objective() (streamline.models.decision_tree.decisiontreeclassifier method)": [[22, "streamline.models.decision_tree.DecisionTreeClassifier.objective"]], "small_name (streamline.models.decision_tree.decisiontreeclassifier attribute)": [[22, "streamline.models.decision_tree.DecisionTreeClassifier.small_name"]], "streamline.models.decision_tree": [[22, "module-streamline.models.decision_tree"]], "elasticnetclassifier (class in streamline.models.elastic_net)": [[23, "streamline.models.elastic_net.ElasticNetClassifier"]], "color (streamline.models.elastic_net.elasticnetclassifier attribute)": [[23, "streamline.models.elastic_net.ElasticNetClassifier.color"]], "model_name (streamline.models.elastic_net.elasticnetclassifier attribute)": [[23, "streamline.models.elastic_net.ElasticNetClassifier.model_name"]], "objective() (streamline.models.elastic_net.elasticnetclassifier method)": [[23, "streamline.models.elastic_net.ElasticNetClassifier.objective"]], "small_name (streamline.models.elastic_net.elasticnetclassifier attribute)": [[23, "streamline.models.elastic_net.ElasticNetClassifier.small_name"]], "streamline.models.elastic_net": [[23, "module-streamline.models.elastic_net"]], "gpclassifier (class in streamline.models.genetic_programming)": [[24, "streamline.models.genetic_programming.GPClassifier"]], "color (streamline.models.genetic_programming.gpclassifier attribute)": [[24, "streamline.models.genetic_programming.GPClassifier.color"]], "model_name (streamline.models.genetic_programming.gpclassifier attribute)": [[24, "streamline.models.genetic_programming.GPClassifier.model_name"]], "objective() (streamline.models.genetic_programming.gpclassifier method)": [[24, "streamline.models.genetic_programming.GPClassifier.objective"]], "small_name (streamline.models.genetic_programming.gpclassifier attribute)": [[24, "streamline.models.genetic_programming.GPClassifier.small_name"]], "streamline.models.genetic_programming": [[24, "module-streamline.models.genetic_programming"]], "cgbclassifier (class in streamline.models.gradient_boosting)": [[25, "streamline.models.gradient_boosting.CGBClassifier"]], "gbclassifier (class in streamline.models.gradient_boosting)": [[25, "streamline.models.gradient_boosting.GBClassifier"]], "lgbclassifier (class in streamline.models.gradient_boosting)": [[25, "streamline.models.gradient_boosting.LGBClassifier"]], "xgbclassifier (class in streamline.models.gradient_boosting)": [[25, "streamline.models.gradient_boosting.XGBClassifier"]], "color (streamline.models.gradient_boosting.cgbclassifier attribute)": [[25, "streamline.models.gradient_boosting.CGBClassifier.color"]], "color (streamline.models.gradient_boosting.gbclassifier attribute)": [[25, "streamline.models.gradient_boosting.GBClassifier.color"]], "color (streamline.models.gradient_boosting.lgbclassifier attribute)": [[25, "streamline.models.gradient_boosting.LGBClassifier.color"]], "color (streamline.models.gradient_boosting.xgbclassifier attribute)": [[25, "streamline.models.gradient_boosting.XGBClassifier.color"]], "model_name (streamline.models.gradient_boosting.cgbclassifier attribute)": [[25, "streamline.models.gradient_boosting.CGBClassifier.model_name"]], "model_name (streamline.models.gradient_boosting.gbclassifier attribute)": [[25, "streamline.models.gradient_boosting.GBClassifier.model_name"]], "model_name (streamline.models.gradient_boosting.lgbclassifier attribute)": [[25, "streamline.models.gradient_boosting.LGBClassifier.model_name"]], "model_name (streamline.models.gradient_boosting.xgbclassifier attribute)": [[25, "streamline.models.gradient_boosting.XGBClassifier.model_name"]], "objective() (streamline.models.gradient_boosting.cgbclassifier method)": [[25, "streamline.models.gradient_boosting.CGBClassifier.objective"]], "objective() (streamline.models.gradient_boosting.gbclassifier method)": [[25, "streamline.models.gradient_boosting.GBClassifier.objective"]], "objective() (streamline.models.gradient_boosting.lgbclassifier method)": [[25, "streamline.models.gradient_boosting.LGBClassifier.objective"]], "objective() (streamline.models.gradient_boosting.xgbclassifier method)": [[25, "streamline.models.gradient_boosting.XGBClassifier.objective"]], "small_name (streamline.models.gradient_boosting.cgbclassifier attribute)": [[25, "streamline.models.gradient_boosting.CGBClassifier.small_name"]], "small_name (streamline.models.gradient_boosting.gbclassifier attribute)": [[25, "streamline.models.gradient_boosting.GBClassifier.small_name"]], "small_name (streamline.models.gradient_boosting.lgbclassifier attribute)": [[25, "streamline.models.gradient_boosting.LGBClassifier.small_name"]], "small_name (streamline.models.gradient_boosting.xgbclassifier attribute)": [[25, "streamline.models.gradient_boosting.XGBClassifier.small_name"]], "streamline.models.gradient_boosting": [[25, "module-streamline.models.gradient_boosting"]], "exstracsclassifier (class in streamline.models.learning_based)": [[26, "streamline.models.learning_based.ExSTraCSClassifier"]], "xcsclassifier (class in streamline.models.learning_based)": [[26, "streamline.models.learning_based.XCSClassifier"]], "color (streamline.models.learning_based.exstracsclassifier attribute)": [[26, "streamline.models.learning_based.ExSTraCSClassifier.color"]], "color (streamline.models.learning_based.xcsclassifier attribute)": [[26, "streamline.models.learning_based.XCSClassifier.color"]], "color (streamline.models.learning_based.elcsclassifier attribute)": [[26, "streamline.models.learning_based.eLCSClassifier.color"]], "elcsclassifier (class in streamline.models.learning_based)": [[26, "streamline.models.learning_based.eLCSClassifier"]], "model_name (streamline.models.learning_based.exstracsclassifier attribute)": [[26, "streamline.models.learning_based.ExSTraCSClassifier.model_name"]], "model_name (streamline.models.learning_based.xcsclassifier attribute)": [[26, "streamline.models.learning_based.XCSClassifier.model_name"]], "model_name (streamline.models.learning_based.elcsclassifier attribute)": [[26, "streamline.models.learning_based.eLCSClassifier.model_name"]], "objective() (streamline.models.learning_based.exstracsclassifier method)": [[26, "streamline.models.learning_based.ExSTraCSClassifier.objective"]], "objective() (streamline.models.learning_based.xcsclassifier method)": [[26, "streamline.models.learning_based.XCSClassifier.objective"]], "objective() (streamline.models.learning_based.elcsclassifier method)": [[26, "streamline.models.learning_based.eLCSClassifier.objective"]], "small_name (streamline.models.learning_based.exstracsclassifier attribute)": [[26, "streamline.models.learning_based.ExSTraCSClassifier.small_name"]], "small_name (streamline.models.learning_based.xcsclassifier attribute)": [[26, "streamline.models.learning_based.XCSClassifier.small_name"]], "small_name (streamline.models.learning_based.elcsclassifier attribute)": [[26, "streamline.models.learning_based.eLCSClassifier.small_name"]], "streamline.models.learning_based": [[26, "module-streamline.models.learning_based"]], "logisticregression (class in streamline.models.linear_model)": [[27, "streamline.models.linear_model.LogisticRegression"]], "color (streamline.models.linear_model.logisticregression attribute)": [[27, "streamline.models.linear_model.LogisticRegression.color"]], "model_name (streamline.models.linear_model.logisticregression attribute)": [[27, "streamline.models.linear_model.LogisticRegression.model_name"]], "objective() (streamline.models.linear_model.logisticregression method)": [[27, "streamline.models.linear_model.LogisticRegression.objective"]], "small_name (streamline.models.linear_model.logisticregression attribute)": [[27, "streamline.models.linear_model.LogisticRegression.small_name"]], "streamline.models.linear_model": [[27, "module-streamline.models.linear_model"]], "naivebayesclassifier (class in streamline.models.naive_bayes)": [[28, "streamline.models.naive_bayes.NaiveBayesClassifier"]], "color (streamline.models.naive_bayes.naivebayesclassifier attribute)": [[28, "streamline.models.naive_bayes.NaiveBayesClassifier.color"]], "model_name (streamline.models.naive_bayes.naivebayesclassifier attribute)": [[28, "streamline.models.naive_bayes.NaiveBayesClassifier.model_name"]], "objective() (streamline.models.naive_bayes.naivebayesclassifier method)": [[28, "streamline.models.naive_bayes.NaiveBayesClassifier.objective"]], "small_name (streamline.models.naive_bayes.naivebayesclassifier attribute)": [[28, "streamline.models.naive_bayes.NaiveBayesClassifier.small_name"]], "streamline.models.naive_bayes": [[28, "module-streamline.models.naive_bayes"]], "knnclassifier (class in streamline.models.neighbouring)": [[29, "streamline.models.neighbouring.KNNClassifier"]], "color (streamline.models.neighbouring.knnclassifier attribute)": [[29, "streamline.models.neighbouring.KNNClassifier.color"]], "model_name (streamline.models.neighbouring.knnclassifier attribute)": [[29, "streamline.models.neighbouring.KNNClassifier.model_name"]], "objective() (streamline.models.neighbouring.knnclassifier method)": [[29, "streamline.models.neighbouring.KNNClassifier.objective"]], "small_name (streamline.models.neighbouring.knnclassifier attribute)": [[29, "streamline.models.neighbouring.KNNClassifier.small_name"]], "streamline.models.neighbouring": [[29, "module-streamline.models.neighbouring"]], "randomforestclassifier (class in streamline.models.random_forest)": [[30, "streamline.models.random_forest.RandomForestClassifier"]], "color (streamline.models.random_forest.randomforestclassifier attribute)": [[30, "streamline.models.random_forest.RandomForestClassifier.color"]], "model_name (streamline.models.random_forest.randomforestclassifier attribute)": [[30, "streamline.models.random_forest.RandomForestClassifier.model_name"]], "objective() (streamline.models.random_forest.randomforestclassifier method)": [[30, "streamline.models.random_forest.RandomForestClassifier.objective"]], "small_name (streamline.models.random_forest.randomforestclassifier attribute)": [[30, "streamline.models.random_forest.RandomForestClassifier.small_name"]], "streamline.models.random_forest": [[30, "module-streamline.models.random_forest"]], "supportvectorclassifier (class in streamline.models.support_vector_machine)": [[31, "streamline.models.support_vector_machine.SupportVectorClassifier"]], "color (streamline.models.support_vector_machine.supportvectorclassifier attribute)": [[31, "streamline.models.support_vector_machine.SupportVectorClassifier.color"]], "model_name (streamline.models.support_vector_machine.supportvectorclassifier attribute)": [[31, "streamline.models.support_vector_machine.SupportVectorClassifier.model_name"]], "objective() (streamline.models.support_vector_machine.supportvectorclassifier method)": [[31, "streamline.models.support_vector_machine.SupportVectorClassifier.objective"]], "small_name (streamline.models.support_vector_machine.supportvectorclassifier attribute)": [[31, "streamline.models.support_vector_machine.SupportVectorClassifier.small_name"]], "streamline.models.support_vector_machine": [[31, "module-streamline.models.support_vector_machine"]], "streamline.postanalysis": [[32, "module-streamline.postanalysis"]], "comparejob (class in streamline.postanalysis.dataset_compare)": [[33, "streamline.postanalysis.dataset_compare.CompareJob"]], "best_kruscall_wallis() (streamline.postanalysis.dataset_compare.comparejob method)": [[33, "streamline.postanalysis.dataset_compare.CompareJob.best_kruscall_wallis"]], "best_mann_whitney_u() (streamline.postanalysis.dataset_compare.comparejob method)": [[33, "streamline.postanalysis.dataset_compare.CompareJob.best_mann_whitney_u"]], "best_wilcoxon_rank() (streamline.postanalysis.dataset_compare.comparejob method)": [[33, "streamline.postanalysis.dataset_compare.CompareJob.best_wilcoxon_rank"]], "data_compare_bp() (streamline.postanalysis.dataset_compare.comparejob method)": [[33, "streamline.postanalysis.dataset_compare.CompareJob.data_compare_bp"]], "data_compare_bp_all() (streamline.postanalysis.dataset_compare.comparejob method)": [[33, "streamline.postanalysis.dataset_compare.CompareJob.data_compare_bp_all"]], "inter_set_best_fn() (streamline.postanalysis.dataset_compare.comparejob method)": [[33, "streamline.postanalysis.dataset_compare.CompareJob.inter_set_best_fn"]], "inter_set_fn() (streamline.postanalysis.dataset_compare.comparejob method)": [[33, "streamline.postanalysis.dataset_compare.CompareJob.inter_set_fn"]], "kruscall_wallis() (streamline.postanalysis.dataset_compare.comparejob method)": [[33, "streamline.postanalysis.dataset_compare.CompareJob.kruscall_wallis"]], "mann_whitney_u() (streamline.postanalysis.dataset_compare.comparejob method)": [[33, "streamline.postanalysis.dataset_compare.CompareJob.mann_whitney_u"]], "run() (streamline.postanalysis.dataset_compare.comparejob method)": [[33, "streamline.postanalysis.dataset_compare.CompareJob.run"]], "save_runtime() (streamline.postanalysis.dataset_compare.comparejob method)": [[33, "streamline.postanalysis.dataset_compare.CompareJob.save_runtime"]], "streamline.postanalysis.dataset_compare": [[33, "module-streamline.postanalysis.dataset_compare"]], "temp_summary() (streamline.postanalysis.dataset_compare.comparejob method)": [[33, "streamline.postanalysis.dataset_compare.CompareJob.temp_summary"]], "wilcoxon_rank() (streamline.postanalysis.dataset_compare.comparejob method)": [[33, "streamline.postanalysis.dataset_compare.CompareJob.wilcoxon_rank"]], "reportjob (class in streamline.postanalysis.gererate_report)": [[34, "streamline.postanalysis.gererate_report.ReportJob"]], "footer() (streamline.postanalysis.gererate_report.reportjob method)": [[34, "streamline.postanalysis.gererate_report.ReportJob.footer"]], "format_fn() (streamline.postanalysis.gererate_report.reportjob method)": [[34, "streamline.postanalysis.gererate_report.ReportJob.format_fn"]], "job() (streamline.postanalysis.gererate_report.reportjob method)": [[34, "streamline.postanalysis.gererate_report.ReportJob.job"]], "list_to_string() (in module streamline.postanalysis.gererate_report)": [[34, "streamline.postanalysis.gererate_report.list_to_string"]], "ngi() (in module streamline.postanalysis.gererate_report)": [[34, "streamline.postanalysis.gererate_report.ngi"]], "pub_model_mean_stats() (streamline.postanalysis.gererate_report.reportjob method)": [[34, "streamline.postanalysis.gererate_report.ReportJob.pub_model_mean_stats"]], "pub_model_median_stats() (streamline.postanalysis.gererate_report.reportjob method)": [[34, "streamline.postanalysis.gererate_report.ReportJob.pub_model_median_stats"]], "pub_runtime() (streamline.postanalysis.gererate_report.reportjob method)": [[34, "streamline.postanalysis.gererate_report.ReportJob.pub_runtime"]], "pub_univariate() (streamline.postanalysis.gererate_report.reportjob method)": [[34, "streamline.postanalysis.gererate_report.ReportJob.pub_univariate"]], "run() (streamline.postanalysis.gererate_report.reportjob method)": [[34, "streamline.postanalysis.gererate_report.ReportJob.run"]], "streamline.postanalysis.gererate_report": [[34, "module-streamline.postanalysis.gererate_report"]], "replicatejob (class in streamline.postanalysis.model_replicate)": [[35, "streamline.postanalysis.model_replicate.ReplicateJob"]], "eval_model() (streamline.postanalysis.model_replicate.replicatejob method)": [[35, "streamline.postanalysis.model_replicate.ReplicateJob.eval_model"]], "impute_rep_data() (streamline.postanalysis.model_replicate.replicatejob method)": [[35, "streamline.postanalysis.model_replicate.ReplicateJob.impute_rep_data"]], "run() (streamline.postanalysis.model_replicate.replicatejob method)": [[35, "streamline.postanalysis.model_replicate.ReplicateJob.run"]], "scale_rep_data() (streamline.postanalysis.model_replicate.replicatejob method)": [[35, "streamline.postanalysis.model_replicate.ReplicateJob.scale_rep_data"]], "streamline.postanalysis.model_replicate": [[35, "module-streamline.postanalysis.model_replicate"]], "statsjob (class in streamline.postanalysis.statistics)": [[36, "streamline.postanalysis.statistics.StatsJob"]], "composite_fi_plot() (streamline.postanalysis.statistics.statsjob method)": [[36, "streamline.postanalysis.statistics.StatsJob.composite_fi_plot"]], "do_fi_boxplots() (streamline.postanalysis.statistics.statsjob method)": [[36, "streamline.postanalysis.statistics.StatsJob.do_fi_boxplots"]], "do_fi_histogram() (streamline.postanalysis.statistics.statsjob method)": [[36, "streamline.postanalysis.statistics.StatsJob.do_fi_histogram"]], "do_model_prc() (streamline.postanalysis.statistics.statsjob method)": [[36, "streamline.postanalysis.statistics.StatsJob.do_model_prc"]], "do_model_roc() (streamline.postanalysis.statistics.statsjob method)": [[36, "streamline.postanalysis.statistics.StatsJob.do_model_roc"]], "do_plot_prc() (streamline.postanalysis.statistics.statsjob method)": [[36, "streamline.postanalysis.statistics.StatsJob.do_plot_prc"]], "do_plot_roc() (streamline.postanalysis.statistics.statsjob method)": [[36, "streamline.postanalysis.statistics.StatsJob.do_plot_roc"]], "fi_stats() (streamline.postanalysis.statistics.statsjob method)": [[36, "streamline.postanalysis.statistics.StatsJob.fi_stats"]], "frac_fi() (streamline.postanalysis.statistics.statsjob static method)": [[36, "streamline.postanalysis.statistics.StatsJob.frac_fi"]], "get_fi_to_viz_sorted() (streamline.postanalysis.statistics.statsjob method)": [[36, "streamline.postanalysis.statistics.StatsJob.get_fi_to_viz_sorted"]], "kruskal_wallis() (streamline.postanalysis.statistics.statsjob method)": [[36, "streamline.postanalysis.statistics.StatsJob.kruskal_wallis"]], "mann_whitney_u() (streamline.postanalysis.statistics.statsjob method)": [[36, "streamline.postanalysis.statistics.StatsJob.mann_whitney_u"]], "metric_boxplots() (streamline.postanalysis.statistics.statsjob method)": [[36, "streamline.postanalysis.statistics.StatsJob.metric_boxplots"]], "parse_runtime() (streamline.postanalysis.statistics.statsjob method)": [[36, "streamline.postanalysis.statistics.StatsJob.parse_runtime"]], "prep_fi() (streamline.postanalysis.statistics.statsjob method)": [[36, "streamline.postanalysis.statistics.StatsJob.prep_fi"]], "preparation() (streamline.postanalysis.statistics.statsjob method)": [[36, "streamline.postanalysis.statistics.StatsJob.preparation"]], "primary_stats() (streamline.postanalysis.statistics.statsjob method)": [[36, "streamline.postanalysis.statistics.StatsJob.primary_stats"]], "run() (streamline.postanalysis.statistics.statsjob method)": [[36, "streamline.postanalysis.statistics.StatsJob.run"]], "save_fi() (streamline.postanalysis.statistics.statsjob method)": [[36, "streamline.postanalysis.statistics.StatsJob.save_fi"]], "save_metric_stats() (streamline.postanalysis.statistics.statsjob method)": [[36, "streamline.postanalysis.statistics.StatsJob.save_metric_stats"]], "save_runtime() (streamline.postanalysis.statistics.statsjob method)": [[36, "streamline.postanalysis.statistics.StatsJob.save_runtime"]], "select_for_composite_viz() (streamline.postanalysis.statistics.statsjob method)": [[36, "streamline.postanalysis.statistics.StatsJob.select_for_composite_viz"]], "streamline.postanalysis.statistics": [[36, "module-streamline.postanalysis.statistics"]], "weight_fi() (streamline.postanalysis.statistics.statsjob static method)": [[36, "streamline.postanalysis.statistics.StatsJob.weight_fi"]], "weight_frac_fi() (streamline.postanalysis.statistics.statsjob static method)": [[36, "streamline.postanalysis.statistics.StatsJob.weight_frac_fi"]], "wilcoxon_rank() (streamline.postanalysis.statistics.statsjob method)": [[36, "streamline.postanalysis.statistics.StatsJob.wilcoxon_rank"]], "streamline.runners": [[37, "module-streamline.runners"]], "cleanrunner (class in streamline.runners.clean_runner)": [[38, "streamline.runners.clean_runner.CleanRunner"]], "run() (streamline.runners.clean_runner.cleanrunner method)": [[38, "streamline.runners.clean_runner.CleanRunner.run"]], "streamline.runners.clean_runner": [[38, "module-streamline.runners.clean_runner"]], "comparerunner (class in streamline.runners.compare_runner)": [[39, "streamline.runners.compare_runner.CompareRunner"]], "get_cluster_params() (streamline.runners.compare_runner.comparerunner method)": [[39, "streamline.runners.compare_runner.CompareRunner.get_cluster_params"]], "run() (streamline.runners.compare_runner.comparerunner method)": [[39, "streamline.runners.compare_runner.CompareRunner.run"]], "streamline.runners.compare_runner": [[39, "module-streamline.runners.compare_runner"]], "submit_lsf_cluster_job() (streamline.runners.compare_runner.comparerunner method)": [[39, "streamline.runners.compare_runner.CompareRunner.submit_lsf_cluster_job"]], "submit_slurm_cluster_job() (streamline.runners.compare_runner.comparerunner method)": [[39, "streamline.runners.compare_runner.CompareRunner.submit_slurm_cluster_job"]], "dataprocessrunner (class in streamline.runners.dataprocess_runner)": [[40, "streamline.runners.dataprocess_runner.DataProcessRunner"]], "get_cluster_params() (streamline.runners.dataprocess_runner.dataprocessrunner method)": [[40, "streamline.runners.dataprocess_runner.DataProcessRunner.get_cluster_params"]], "run() (streamline.runners.dataprocess_runner.dataprocessrunner method)": [[40, "streamline.runners.dataprocess_runner.DataProcessRunner.run"]], "save_metadata() (streamline.runners.dataprocess_runner.dataprocessrunner method)": [[40, "streamline.runners.dataprocess_runner.DataProcessRunner.save_metadata"]], "streamline.runners.dataprocess_runner": [[40, "module-streamline.runners.dataprocess_runner"]], "submit_lsf_cluster_job() (streamline.runners.dataprocess_runner.dataprocessrunner method)": [[40, "streamline.runners.dataprocess_runner.DataProcessRunner.submit_lsf_cluster_job"]], "submit_slurm_cluster_job() (streamline.runners.dataprocess_runner.dataprocessrunner method)": [[40, "streamline.runners.dataprocess_runner.DataProcessRunner.submit_slurm_cluster_job"]], "edarunner (class in streamline.runners.eda_runner)": [[41, "streamline.runners.eda_runner.EDARunner"]], "get_cluster_params() (streamline.runners.eda_runner.edarunner method)": [[41, "streamline.runners.eda_runner.EDARunner.get_cluster_params"]], "make_dir_tree() (streamline.runners.eda_runner.edarunner method)": [[41, "streamline.runners.eda_runner.EDARunner.make_dir_tree"]], "run() (streamline.runners.eda_runner.edarunner method)": [[41, "streamline.runners.eda_runner.EDARunner.run"]], "run_kfold() (streamline.runners.eda_runner.edarunner method)": [[41, "streamline.runners.eda_runner.EDARunner.run_kfold"]], "save_metadata() (streamline.runners.eda_runner.edarunner method)": [[41, "streamline.runners.eda_runner.EDARunner.save_metadata"]], "streamline.runners.eda_runner": [[41, "module-streamline.runners.eda_runner"]], "submit_lsf_cluster_job() (streamline.runners.eda_runner.edarunner method)": [[41, "streamline.runners.eda_runner.EDARunner.submit_lsf_cluster_job"]], "submit_slurm_cluster_job() (streamline.runners.eda_runner.edarunner method)": [[41, "streamline.runners.eda_runner.EDARunner.submit_slurm_cluster_job"]], "featureimportancerunner (class in streamline.runners.feature_runner)": [[42, "streamline.runners.feature_runner.FeatureImportanceRunner"]], "featureselectionrunner (class in streamline.runners.feature_runner)": [[42, "streamline.runners.feature_runner.FeatureSelectionRunner"]], "get_cluster_params() (streamline.runners.feature_runner.featureimportancerunner method)": [[42, "streamline.runners.feature_runner.FeatureImportanceRunner.get_cluster_params"]], "get_cluster_params() (streamline.runners.feature_runner.featureselectionrunner method)": [[42, "streamline.runners.feature_runner.FeatureSelectionRunner.get_cluster_params"]], "run() (streamline.runners.feature_runner.featureimportancerunner method)": [[42, "streamline.runners.feature_runner.FeatureImportanceRunner.run"]], "run() (streamline.runners.feature_runner.featureselectionrunner method)": [[42, "streamline.runners.feature_runner.FeatureSelectionRunner.run"]], "save_metadata() (streamline.runners.feature_runner.featureimportancerunner method)": [[42, "streamline.runners.feature_runner.FeatureImportanceRunner.save_metadata"]], "save_metadata() (streamline.runners.feature_runner.featureselectionrunner method)": [[42, "streamline.runners.feature_runner.FeatureSelectionRunner.save_metadata"]], "streamline.runners.feature_runner": [[42, "module-streamline.runners.feature_runner"]], "submit_lsf_cluster_job() (streamline.runners.feature_runner.featureimportancerunner method)": [[42, "streamline.runners.feature_runner.FeatureImportanceRunner.submit_lsf_cluster_job"]], "submit_lsf_cluster_job() (streamline.runners.feature_runner.featureselectionrunner method)": [[42, "streamline.runners.feature_runner.FeatureSelectionRunner.submit_lsf_cluster_job"]], "submit_slurm_cluster_job() (streamline.runners.feature_runner.featureimportancerunner method)": [[42, "streamline.runners.feature_runner.FeatureImportanceRunner.submit_slurm_cluster_job"]], "submit_slurm_cluster_job() (streamline.runners.feature_runner.featureselectionrunner method)": [[42, "streamline.runners.feature_runner.FeatureSelectionRunner.submit_slurm_cluster_job"]], "modelexperimentrunner (class in streamline.runners.model_runner)": [[43, "streamline.runners.model_runner.ModelExperimentRunner"]], "get_cluster_params() (streamline.runners.model_runner.modelexperimentrunner method)": [[43, "streamline.runners.model_runner.ModelExperimentRunner.get_cluster_params"]], "run() (streamline.runners.model_runner.modelexperimentrunner method)": [[43, "streamline.runners.model_runner.ModelExperimentRunner.run"]], "save_alginfo() (streamline.runners.model_runner.modelexperimentrunner method)": [[43, "streamline.runners.model_runner.ModelExperimentRunner.save_alginfo"]], "save_metadata() (streamline.runners.model_runner.modelexperimentrunner method)": [[43, "streamline.runners.model_runner.ModelExperimentRunner.save_metadata"]], "streamline.runners.model_runner": [[43, "module-streamline.runners.model_runner"]], "submit_lsf_cluster_job() (streamline.runners.model_runner.modelexperimentrunner method)": [[43, "streamline.runners.model_runner.ModelExperimentRunner.submit_lsf_cluster_job"]], "submit_slurm_cluster_job() (streamline.runners.model_runner.modelexperimentrunner method)": [[43, "streamline.runners.model_runner.ModelExperimentRunner.submit_slurm_cluster_job"]], "replicationrunner (class in streamline.runners.replicate_runner)": [[44, "streamline.runners.replicate_runner.ReplicationRunner"]], "get_algorithms() (streamline.runners.replicate_runner.replicationrunner method)": [[44, "streamline.runners.replicate_runner.ReplicationRunner.get_algorithms"]], "get_cluster_params() (streamline.runners.replicate_runner.replicationrunner method)": [[44, "streamline.runners.replicate_runner.ReplicationRunner.get_cluster_params"]], "run() (streamline.runners.replicate_runner.replicationrunner method)": [[44, "streamline.runners.replicate_runner.ReplicationRunner.run"]], "save_metadata() (streamline.runners.replicate_runner.replicationrunner method)": [[44, "streamline.runners.replicate_runner.ReplicationRunner.save_metadata"]], "streamline.runners.replicate_runner": [[44, "module-streamline.runners.replicate_runner"]], "submit_lsf_cluster_job() (streamline.runners.replicate_runner.replicationrunner method)": [[44, "streamline.runners.replicate_runner.ReplicationRunner.submit_lsf_cluster_job"]], "submit_slurm_cluster_job() (streamline.runners.replicate_runner.replicationrunner method)": [[44, "streamline.runners.replicate_runner.ReplicationRunner.submit_slurm_cluster_job"]], "reportrunner (class in streamline.runners.report_runner)": [[45, "streamline.runners.report_runner.ReportRunner"]], "get_cluster_params() (streamline.runners.report_runner.reportrunner method)": [[45, "streamline.runners.report_runner.ReportRunner.get_cluster_params"]], "run() (streamline.runners.report_runner.reportrunner method)": [[45, "streamline.runners.report_runner.ReportRunner.run"]], "streamline.runners.report_runner": [[45, "module-streamline.runners.report_runner"]], "submit_lsf_cluster_job() (streamline.runners.report_runner.reportrunner method)": [[45, "streamline.runners.report_runner.ReportRunner.submit_lsf_cluster_job"]], "submit_slurm_cluster_job() (streamline.runners.report_runner.reportrunner method)": [[45, "streamline.runners.report_runner.ReportRunner.submit_slurm_cluster_job"]], "statsrunner (class in streamline.runners.stats_runner)": [[46, "streamline.runners.stats_runner.StatsRunner"]], "get_cluster_params() (streamline.runners.stats_runner.statsrunner method)": [[46, "streamline.runners.stats_runner.StatsRunner.get_cluster_params"]], "run() (streamline.runners.stats_runner.statsrunner method)": [[46, "streamline.runners.stats_runner.StatsRunner.run"]], "save_metadata() (streamline.runners.stats_runner.statsrunner method)": [[46, "streamline.runners.stats_runner.StatsRunner.save_metadata"]], "streamline.runners.stats_runner": [[46, "module-streamline.runners.stats_runner"]], "submit_lsf_cluster_job() (streamline.runners.stats_runner.statsrunner method)": [[46, "streamline.runners.stats_runner.StatsRunner.submit_lsf_cluster_job"]], "submit_slurm_cluster_job() (streamline.runners.stats_runner.statsrunner method)": [[46, "streamline.runners.stats_runner.StatsRunner.submit_slurm_cluster_job"]], "streamline.utils": [[47, "module-streamline.utils"]], "check_phase() (in module streamline.utils.checker)": [[48, "streamline.utils.checker.check_phase"]], "check_phase_1() (in module streamline.utils.checker)": [[48, "streamline.utils.checker.check_phase_1"]], "check_phase_10() (in module streamline.utils.checker)": [[48, "streamline.utils.checker.check_phase_10"]], "check_phase_2() (in module streamline.utils.checker)": [[48, "streamline.utils.checker.check_phase_2"]], "check_phase_3() (in module streamline.utils.checker)": [[48, "streamline.utils.checker.check_phase_3"]], "check_phase_4() (in module streamline.utils.checker)": [[48, "streamline.utils.checker.check_phase_4"]], "check_phase_5() (in module streamline.utils.checker)": [[48, "streamline.utils.checker.check_phase_5"]], "check_phase_6() (in module streamline.utils.checker)": [[48, "streamline.utils.checker.check_phase_6"]], "check_phase_7() (in module streamline.utils.checker)": [[48, "streamline.utils.checker.check_phase_7"]], "check_phase_8() (in module streamline.utils.checker)": [[48, "streamline.utils.checker.check_phase_8"]], "check_phase_9() (in module streamline.utils.checker)": [[48, "streamline.utils.checker.check_phase_9"]], "streamline.utils.checker": [[48, "module-streamline.utils.checker"]], "cleaner (class in streamline.utils.cleanup)": [[49, "streamline.utils.cleanup.Cleaner"]], "rm_tree() (streamline.utils.cleanup.cleaner static method)": [[49, "streamline.utils.cleanup.Cleaner.rm_tree"]], "run() (streamline.utils.cleanup.cleaner method)": [[49, "streamline.utils.cleanup.Cleaner.run"]], "streamline.utils.cleanup": [[49, "module-streamline.utils.cleanup"]], "get_cluster() (in module streamline.utils.cluster)": [[50, "streamline.utils.cluster.get_cluster"]], "streamline.utils.cluster": [[50, "module-streamline.utils.cluster"]], "dataset (class in streamline.utils.dataset)": [[51, "streamline.utils.dataset.Dataset"]], "clean_data() (streamline.utils.dataset.dataset method)": [[51, "streamline.utils.dataset.Dataset.clean_data"]], "feature_only_data() (streamline.utils.dataset.dataset method)": [[51, "streamline.utils.dataset.Dataset.feature_only_data"]], "get_outcome() (streamline.utils.dataset.dataset method)": [[51, "streamline.utils.dataset.Dataset.get_outcome"]], "load_data() (streamline.utils.dataset.dataset method)": [[51, "streamline.utils.dataset.Dataset.load_data"]], "non_feature_data() (streamline.utils.dataset.dataset method)": [[51, "streamline.utils.dataset.Dataset.non_feature_data"]], "set_headers() (streamline.utils.dataset.dataset method)": [[51, "streamline.utils.dataset.Dataset.set_headers"]], "streamline.utils.dataset": [[51, "module-streamline.utils.dataset"]], "class_eval() (in module streamline.utils.evaluation)": [[52, "streamline.utils.evaluation.class_eval"]], "streamline.utils.evaluation": [[52, "module-streamline.utils.evaluation"]], "job (class in streamline.utils.job)": [[53, "streamline.utils.job.Job"]], "run() (streamline.utils.job.job method)": [[53, "streamline.utils.job.Job.run"]], "run_cluster() (streamline.utils.job.job method)": [[53, "streamline.utils.job.Job.run_cluster"]], "streamline.utils.job": [[53, "module-streamline.utils.job"]], "comma_sep_choices() (in module streamline.utils.parser)": [[54, "streamline.utils.parser.comma_sep_choices"]], "parser_function() (in module streamline.utils.parser)": [[54, "streamline.utils.parser.parser_function"]], "streamline.utils.parser": [[54, "module-streamline.utils.parser"]], "model_runner_fn() (in module streamline.utils.runners)": [[55, "streamline.utils.runners.model_runner_fn"]], "parallel_eda_call() (in module streamline.utils.runners)": [[55, "streamline.utils.runners.parallel_eda_call"]], "parallel_kfold_call() (in module streamline.utils.runners)": [[55, "streamline.utils.runners.parallel_kfold_call"]], "run_jobs() (in module streamline.utils.runners)": [[55, "streamline.utils.runners.run_jobs"]], "runner_fn() (in module streamline.utils.runners)": [[55, "streamline.utils.runners.runner_fn"]], "streamline.utils.runners": [[55, "module-streamline.utils.runners"]], "sub_jobs() (in module streamline.utils.runners)": [[55, "streamline.utils.runners.sub_jobs"]]}})
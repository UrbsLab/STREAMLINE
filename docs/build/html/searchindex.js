Search.setIndex({"docnames": ["about", "citation", "development", "index", "installation", "modules", "sample", "streamline", "streamline.dataprep", "streamline.dataprep.data_process", "streamline.dataprep.exploratory_analysis", "streamline.dataprep.kfold_partitioning", "streamline.featurefns", "streamline.featurefns.importance", "streamline.featurefns.selection", "streamline.modeling", "streamline.modeling.basemodel", "streamline.modeling.load_models", "streamline.modeling.modeljob", "streamline.modeling.parameters", "streamline.modeling.utils", "streamline.models", "streamline.models.artificial_neural_network", "streamline.models.decision_tree", "streamline.models.elastic_net", "streamline.models.genetic_programming", "streamline.models.gradient_boosting", "streamline.models.learning_based", "streamline.models.linear_model", "streamline.models.naive_bayes", "streamline.models.neighbouring", "streamline.models.random_forest", "streamline.models.support_vector_machine", "streamline.postanalysis", "streamline.postanalysis.dataset_compare", "streamline.postanalysis.gererate_report", "streamline.postanalysis.model_replicate", "streamline.postanalysis.statistics", "streamline.runners", "streamline.runners.clean_runner", "streamline.runners.compare_runner", "streamline.runners.dataprocess_runner", "streamline.runners.eda_runner", "streamline.runners.feature_runner", "streamline.runners.model_runner", "streamline.runners.replicate_runner", "streamline.runners.report_runner", "streamline.runners.stats_runner", "streamline.utils", "streamline.utils.checker", "streamline.utils.cleanup", "streamline.utils.cluster", "streamline.utils.dataset", "streamline.utils.evaluation", "streamline.utils.job", "streamline.utils.parser", "streamline.utils.runners", "usage"], "filenames": ["about.md", "citation.md", "development.md", "index.rst", "installation.md", "modules.rst", "sample.md", "streamline.rst", "streamline.dataprep.rst", "streamline.dataprep.data_process.rst", "streamline.dataprep.exploratory_analysis.rst", "streamline.dataprep.kfold_partitioning.rst", "streamline.featurefns.rst", "streamline.featurefns.importance.rst", "streamline.featurefns.selection.rst", "streamline.modeling.rst", "streamline.modeling.basemodel.rst", "streamline.modeling.load_models.rst", "streamline.modeling.modeljob.rst", "streamline.modeling.parameters.rst", "streamline.modeling.utils.rst", "streamline.models.rst", "streamline.models.artificial_neural_network.rst", "streamline.models.decision_tree.rst", "streamline.models.elastic_net.rst", "streamline.models.genetic_programming.rst", "streamline.models.gradient_boosting.rst", "streamline.models.learning_based.rst", "streamline.models.linear_model.rst", "streamline.models.naive_bayes.rst", "streamline.models.neighbouring.rst", "streamline.models.random_forest.rst", "streamline.models.support_vector_machine.rst", "streamline.postanalysis.rst", "streamline.postanalysis.dataset_compare.rst", "streamline.postanalysis.gererate_report.rst", "streamline.postanalysis.model_replicate.rst", "streamline.postanalysis.statistics.rst", "streamline.runners.rst", "streamline.runners.clean_runner.rst", "streamline.runners.compare_runner.rst", "streamline.runners.dataprocess_runner.rst", "streamline.runners.eda_runner.rst", "streamline.runners.feature_runner.rst", "streamline.runners.model_runner.rst", "streamline.runners.replicate_runner.rst", "streamline.runners.report_runner.rst", "streamline.runners.stats_runner.rst", "streamline.utils.rst", "streamline.utils.checker.rst", "streamline.utils.cleanup.rst", "streamline.utils.cluster.rst", "streamline.utils.dataset.rst", "streamline.utils.evaluation.rst", "streamline.utils.job.rst", "streamline.utils.parser.rst", "streamline.utils.runners.rst", "usage.md"], "titles": ["About (FAQs)", "Citations", "Development notes", "STREAMLINE", "Installation", "Code Documentation", "Sample Outputs", "streamline package", "streamline.dataprep package", "streamline.dataprep.data_process module", "streamline.dataprep.exploratory_analysis module", "streamline.dataprep.kfold_partitioning module", "streamline.featurefns package", "streamline.featurefns.importance module", "streamline.featurefns.selection module", "streamline.modeling package", "streamline.modeling.basemodel module", "streamline.modeling.load_models module", "streamline.modeling.modeljob module", "streamline.modeling.parameters module", "streamline.modeling.utils module", "streamline.models package", "streamline.models.artificial_neural_network module", "streamline.models.decision_tree module", "streamline.models.elastic_net module", "streamline.models.genetic_programming module", "streamline.models.gradient_boosting module", "streamline.models.learning_based module", "streamline.models.linear_model module", "streamline.models.naive_bayes module", "streamline.models.neighbouring module", "streamline.models.random_forest module", "streamline.models.support_vector_machine module", "streamline.postanalysis package", "streamline.postanalysis.dataset_compare module", "streamline.postanalysis.gererate_report module", "streamline.postanalysis.model_replicate module", "streamline.postanalysis.statistics module", "streamline.runners package", "streamline.runners.clean_runner module", "streamline.runners.compare_runner module", "streamline.runners.dataprocess_runner module", "streamline.runners.eda_runner module", "streamline.runners.feature_runner module", "streamline.runners.model_runner module", "streamline.runners.replicate_runner module", "streamline.runners.report_runner module", "streamline.runners.stats_runner module", "streamline.utils package", "streamline.utils.checker module", "streamline.utils.cleanup module", "streamline.utils.cluster module", "streamline.utils.dataset module", "streamline.utils.evaluation module", "streamline.utils.job module", "streamline.utils.parser module", "streamline.utils.runners module", "Usage"], "terms": {"offer": [0, 1, 37], "varieti": 0, "option": [0, 2, 9, 10, 16, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 42, 44, 45, 47, 50], "make": [0, 3, 10], "access": 0, "those": [0, 14, 42], "littl": [0, 2], "code": [0, 2, 6], "experi": [0, 10, 11, 14, 40, 42, 43, 44, 45, 46, 47, 50], "well": [0, 1, 3, 10, 13, 37, 42, 52], "season": 0, "programm": 0, "data": [0, 1, 2, 3, 7, 9, 10, 11, 14, 16, 34, 37, 41, 42, 44, 45, 52], "scientist": 0, "while": [0, 1, 2, 10, 42], "current": [0, 1, 2, 3, 10, 14, 43], "graphic": 0, "user": [0, 2, 10, 42, 52], "interfac": [0, 10], "gui": 0, "most": [0, 2], "naiv": [0, 29], "need": [0, 10, 16, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "onli": [0, 2, 3, 6, 10, 14, 36, 37, 42, 43, 47, 52], "know": [0, 2], "navig": 0, "pc": 0, "file": [0, 6, 10, 11, 13, 14, 18, 37, 42, 50, 52], "system": 0, "specifi": [0, 2, 10, 42, 44, 52], "folder": [0, 10, 11, 34, 37, 42, 43, 50], "path": [0, 10, 11, 13, 14, 17, 40, 42, 43, 44, 45, 46, 47, 50, 52], "un": 0, "zip": 0, "have": [0, 1, 2, 14, 37, 42, 45, 46, 52], "set": [0, 1, 2, 3, 9, 10, 11, 14, 34, 37, 42, 44, 47, 52], "up": [0, 2], "googl": [0, 2, 6], "drive": [0, 6], "account": 0, "veri": [0, 1], "basic": [0, 10, 52], "knowledg": 0, "python": 0, "environ": 0, "appli": [0, 1, 2, 3, 9, 10, 13, 14, 34, 36, 37, 42, 43, 45], "colab": 0, "within": [0, 2, 5, 35, 42], "jupyt": [0, 6, 42], "notebook": [0, 6, 42], "bit": [0, 1], "more": [0, 2, 3, 14, 36, 37, 42, 45], "serial": [0, 42, 45], "command": [0, 2, 16], "line": 0, "parallel": [0, 2, 42, 45], "compat": [0, 1], "linux": [0, 42], "cluster": [0, 7, 42, 45, 48], "A": [0, 3], "quickli": [0, 6], "rigor": [0, 3], "ml": [0, 2, 3, 16, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 40, 44, 46, 47], "analysi": [0, 1, 2, 3, 10, 34, 35, 36, 42, 45, 46], "over": [0, 37, 43], "one": [0, 1, 2, 11, 14, 34, 36, 37, 45], "dataset": [0, 6, 7, 9, 10, 11, 13, 14, 18, 34, 35, 36, 37, 40, 42, 43, 45, 46, 48, 49, 50], "known": 0, "develop": [0, 1, 3, 5], "model": [0, 1, 2, 3, 5, 7, 9, 34, 36, 37, 40, 43, 44, 45, 46, 47, 52, 56], "algorithm": [0, 1, 3, 10, 13, 14, 18, 34, 35, 36, 37, 40, 43, 44, 45, 46, 47], "framework": [0, 3, 42], "compar": [0, 1, 34, 37, 40, 45, 46, 47], "establish": 0, "scikit": [0, 1, 9, 42, 44], "learn": [0, 2, 3, 7, 9, 42, 44], "each": [0, 1, 5, 10, 14, 34, 36, 37, 45, 47], "new": [0, 2, 9, 14, 36, 43, 44, 46], "baselin": 0, "standard": [0, 9, 34, 37, 53], "comparison": [0, 1, 9, 34, 37], "e": [0, 1, 2, 3, 9, 10, 14, 37, 42, 44], "posit": [0, 42, 53], "control": [0, 1, 9, 52], "which": [0, 1, 2, 5, 9, 34, 35, 37, 42, 45, 50], "evalu": [0, 1, 2, 7, 13, 16, 18, 34, 36, 37, 44, 45, 48], "seek": 0, "optim": [0, 2, 3, 15, 16, 44], "pipelin": [0, 2, 3, 7, 10, 13, 34, 35, 37, 42, 46, 50, 52], "assembli": 0, "part": [0, 36, 52], "methodologi": 0, "an": [0, 1, 2, 3, 6, 10, 14, 37, 42, 44], "exploratori": [0, 2, 10, 36, 42, 52], "featur": [0, 2, 3, 9, 10, 13, 14, 16, 18, 36, 37, 42, 43, 44, 45, 46, 47, 52], "import": [0, 2, 7, 12, 14, 16, 36, 37, 43, 44, 47], "estim": [0, 2, 36, 44], "select": [0, 2, 7, 10, 12, 13, 37, 42, 43], "prior": [0, 1, 2, 43], "some": [0, 2, 14, 52], "educ": [0, 1], "exampl": 0, "integr": [0, 1, 2], "mani": [0, 3], "amaz": 0, "base": [0, 2, 9, 10, 11, 13, 14, 16, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 52, 54], "scienc": 0, "avail": [0, 2, 3, 42, 44], "particular": 0, "panda": [0, 9], "scipi": 0, "optuna": [0, 2, 16, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 44], "creat": [0, 2, 13, 14, 37, 52], "expand": [0, 2, 3], "adapt": 0, "modifi": 0, "test": [0, 2, 9, 10, 11, 14, 34, 37, 45, 46, 50], "identifi": [0, 1, 2, 3, 10, 14, 37, 52], "less": [0, 10, 44], "obviou": 0, "bug": [0, 2], "don": 0, "t": [0, 37], "prevent": [0, 2], "complet": [0, 2, 3, 34, 37, 44], "The": [0, 1, 3, 5, 9, 10, 37, 42], "autom": [0, 1, 3, 7], "element": [0, 9, 13, 14], "clean": [0, 10, 52], "cross": [0, 11, 13, 14, 42, 43, 44, 52], "valid": [0, 11, 13, 14, 42, 43, 44, 52], "cv": [0, 2, 9, 11, 13, 14, 16, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 41, 42, 43, 45, 47, 50, 56], "partit": [0, 2, 9, 11, 42, 43, 52], "scale": [0, 9], "imput": [0, 9], "filter": [0, 1, 14, 43], "collect": [0, 14], "hyperparamet": [0, 2, 18, 44], "across": [0, 10, 14, 34, 37, 42], "15": [0, 1, 44], "implement": [0, 1], "classif": [0, 3, 7, 37, 42, 53], "metric": [0, 18, 34, 37, 42, 44, 45, 47, 53], "automat": [0, 2, 10, 35], "save": [0, 9, 10, 11, 13, 14, 18, 34, 37, 42, 50], "all": [0, 1, 2, 9, 10, 13, 14, 16, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 42, 44, 45, 46, 47, 50], "result": [0, 2, 10, 14, 35, 37, 42, 45, 47], "public": [0, 1], "readi": 0, "plot": [0, 10, 16, 37, 40, 42, 44, 45, 47], "propos": 0, "composit": [0, 37, 47], "non": [0, 34, 37, 52], "parametr": [0, 34, 37], "statist": [0, 2, 7, 10, 33, 34, 47], "analyz": [0, 42], "gener": [0, 2, 10, 14, 34, 35, 36, 37, 42, 44, 46], "pdf": [0, 35, 46], "summari": [0, 16, 35, 37, 45, 46, 47, 50], "report": [0, 10, 14, 35], "follow": [0, 1, 6, 9, 50], "ar": [0, 1, 2, 10, 14, 34, 37, 42], "bay": [0, 29], "nb": [0, 29], "logist": [0, 28], "regress": [0, 2, 28], "lr": [0, 2, 28], "decis": [0, 23], "tree": [0, 23], "dt": [0, 23], "random": [0, 10, 11, 31, 42, 43], "forest": [0, 31], "rf": [0, 31], "gradient": [0, 26], "boost": [0, 26], "gb": [0, 26], "xgboost": 0, "xgb": [0, 26, 44], "lgboost": 0, "lgb": [0, 26], "catboost": [0, 2], "cgb": [0, 26], "support": [0, 2, 32, 47], "vector": [0, 32], "machin": [0, 1, 2, 3, 7, 32], "svm": [0, 32, 44], "artifici": [0, 22], "neural": [0, 22], "network": [0, 22], "ann": [0, 22, 44], "k": [0, 11, 30], "nearest": [0, 30], "neighbor": [0, 30], "nn": 0, "genet": [0, 1, 2, 25], "program": [0, 2, 25], "gp": [0, 2, 25], "educt": 0, "classifi": 0, "elc": [0, 1, 2, 27, 34, 35, 36, 40, 44, 45, 46, 47], "x": [0, 10, 34], "xc": [0, 2, 27, 34, 35, 36, 40, 44, 45, 46, 47], "extend": [0, 2, 42], "supervis": [0, 1, 3, 7], "track": 0, "exstrac": [0, 1, 2, 27], "relev": [0, 1, 42], "valu": [0, 2, 9, 10, 37, 42, 44, 52, 53, 55], "rang": [0, 19, 44], "carefulli": 0, "pre": [0, 1, 2, 6], "driven": 0, "sweep": [0, 2, 44], "format": [0, 35, 42], "intend": [0, 2, 3], "give": [0, 2, 37, 42], "brief": 0, "kei": [0, 2, 35], "contain": [0, 42, 45, 46], "analys": 0, "figur": [0, 14, 36, 37, 43, 47], "output": [0, 1, 3, 10, 13, 14, 18, 40, 42, 43, 44, 45, 46, 47, 49, 50], "allow": [0, 2, 42], "examin": 0, "aspect": 0, "perform": [0, 1, 2, 3, 34, 37, 43], "we": [0, 1, 2, 3, 14, 37, 52], "also": [0, 1, 10, 34, 36, 42], "design": 0, "oper": [0, 2, 10, 11, 52], "thi": [0, 1, 2, 3, 6, 9, 10, 18, 34, 35, 36, 37, 42, 45, 50], "quick": 0, "do": [0, 2, 10, 42, 44], "even": [0, 2], "1": [0, 1, 2, 10, 34, 37, 42, 44], "predict": [0, 3, 15, 16, 52, 53], "probabl": [0, 2], "2": [0, 1, 2], "regener": 0, "custom": [0, 2], "tweak": 0, "3": [0, 14, 16, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36], "try": 0, "out": [0, 1, 2, 35, 36, 43, 45, 46], "effect": [0, 3, 13], "threshold": 0, "interact": [0, 1, 2, 3, 10, 13], "slider": 0, "4": [0, 13, 35, 40, 41, 42, 43, 44, 45, 46, 47, 51], "re": [0, 53], "5": [0, 37, 49], "rank": [0, 14, 34, 37], "visual": [0, 1, 2, 10, 37], "reproduc": [0, 2, 3, 10, 11, 42, 43], "when": [0, 2, 6, 35, 37, 42], "timeout": [0, 2, 16, 18, 44], "paramet": [0, 2, 3, 7, 9, 10, 11, 13, 14, 15, 16, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 37, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53], "none": [0, 2, 9, 10, 11, 13, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 49, 52], "ensur": [0, 3], "train": [0, 1, 2, 9, 11, 13, 14, 16, 18, 35, 36, 37, 44, 45, 46, 50], "same": [0, 9, 37, 42, 45, 46, 47, 52], "whenev": 0, "seed": [0, 10, 11, 42, 43], "vari": 0, "somewhat": 0, "particularli": 0, "sinc": [0, 2], "mai": [0, 10, 14, 42, 44], "number": [0, 1, 2, 9, 10, 11, 14, 16, 37, 42, 43, 44, 47], "trial": [0, 2, 16, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 44], "time": [0, 16, 50], "limit": [0, 3, 14], "resourc": [0, 1], "howev": [0, 42], "help": 0, "reason": 0, "frame": [0, 11], "along": [0, 2], "object": [0, 10, 11, 15, 16, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 52, 54, 56], "so": [0, 2, 9, 10, 14, 37], "easili": [0, 2, 3], "own": [0, 1], "outsid": [0, 2], "NOT": 0, "thei": [0, 1, 2, 37, 42], "still": 0, "best": [0, 1, 3, 18, 34, 37], "human": [0, 1], "expert": 0, "engin": 0, "construct": 0, "encod": [0, 42], "g": [0, 1, 3, 42], "hot": 0, "categor": [0, 2, 9, 10, 42], "numer": [0, 42], "text": [0, 10, 11, 42], "bia": [0, 1, 3], "anyth": 0, "beyond": 0, "simpl": [0, 1, 7, 9, 10], "remov": [0, 9, 13, 18], "instanc": [0, 10, 13, 18, 42, 45, 52], "class": [0, 9, 10, 11, 13, 14, 16, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 52, 54], "label": [0, 9, 10, 11, 13, 14, 16, 18, 42, 45, 46, 52, 53], "where": [0, 42], "miss": [0, 2, 9, 10, 42, 52], "recommend": [0, 10, 44, 47], "consid": [0, 2, 10, 14, 42], "conduct": [0, 9, 10, 36, 42], "item": 0, "unlik": 0, "wa": [0, 1, 14, 37], "them": [0, 2, 5, 37], "oppos": 0, "attempt": 0, "configur": [0, 2], "itself": 0, "adopt": [0, 1], "fix": [0, 2, 44], "seri": 0, "purposefulli": 0, "step": [0, 10], "phase": [0, 2, 5, 9, 10, 13, 14, 18, 34, 37, 42, 43, 45, 49, 50, 52], "practic": 0, "It": [0, 2, 35, 36, 37, 52], "domain": 0, "generaliz": 0, "specif": [0, 1, 9, 42, 53], "focu": [0, 42], "biomed": [0, 1], "mine": [0, 1, 3], "challeng": 0, "util": [0, 1, 5, 7, 10, 11, 15], "wai": [0, 3, 6, 34, 37], "suit": 0, "problem": [0, 1, 3], "complex": [0, 1, 3], "multi": 0, "ha": [0, 1, 37], "been": [0, 2, 52], "four": 0, "colaboratori": 0, "almost": [0, 2], "anyon": [0, 3], "advantag": 0, "No": [0, 42], "directli": [0, 1], "cloud": [0, 2, 42], "click": 0, "whole": [0, 35], "disadvantag": 0, "slowest": 0, "note": [0, 6, 37, 42, 44], "free": 0, "easi": [0, 6], "customiz": [0, 3], "nearli": 0, "minim": [0, 44], "view": 0, "document": [0, 2], "slower": 0, "runtim": [0, 9, 10, 13, 14, 18, 34, 35, 37], "than": [0, 2, 10, 14, 34, 37], "anaconda3": 0, "python3": 0, "sever": 0, "minor": 0, "packag": [0, 1, 2, 5], "instal": [0, 6], "local": [0, 42, 45], "typic": 0, "faster": 0, "easier": [0, 3], "versatil": 0, "By": 0, "far": 0, "fastest": 0, "effici": 0, "separ": [0, 13, 18, 34, 37, 42, 55], "occur": 0, "individu": [0, 10, 11, 34, 37, 45, 47, 50], "must": [0, 10, 11, 42, 45, 46], "sequenc": [0, 2], "were": [0, 37], "dask": 0, "jobqu": 0, "7": 0, "type": [0, 10], "describ": [0, 1, 42], "reliabl": 0, "default": [0, 2, 10, 11, 14, 19, 40, 42, 43, 44, 45, 46, 47, 50], "adjust": 0, "further": [0, 2, 5], "between": [0, 1, 10, 14, 34, 37], "multipl": [0, 42], "target": [0, 9, 10, 13, 18, 34, 37, 42, 45, 46], "subset": [0, 43], "dimens": 0, "stat": [0, 37], "count": [0, 10, 14], "balanc": [0, 37, 53], "detect": [0, 2, 3, 13], "v": [0, 10, 14, 42], "quanti": 0, "correl": [0, 10, 42, 45], "heatmap": [0, 10, 45], "univari": [0, 1, 10, 13, 35, 42], "chi": [0, 10], "squar": [0, 10], "mann": [0, 10, 34, 37], "whitnei": [0, 10, 34, 37], "u": [0, 34, 37], "quantit": [0, 2, 9, 10, 42], "manual": 0, "treat": [0, 2, 42], "load": [0, 9, 13, 14, 18, 37, 52], "ignor": [0, 10, 42], "match": [0, 11, 42, 45, 52], "case": [0, 1, 52], "pair": [0, 1, 9, 34, 37], "group": [0, 11, 42, 52], "covari": 0, "kept": [0, 14], "togeth": [0, 5], "variabl": [0, 9, 10, 42], "first": [0, 1], "mice": [0, 9], "iter": [0, 9, 27, 44], "quantita": 0, "There": 0, "mean": [0, 9, 37], "cost": 0, "prohibit": 0, "larg": [0, 1, 10], "respect": [0, 9, 10, 42], "leakag": 0, "seen": [0, 2], "ani": [0, 6, 10, 44, 50, 52], "until": [0, 14, 44], "final": [0, 2, 14, 50], "transform": [0, 9, 37], "pickl": [0, 9, 13], "futur": [0, 1, 2, 3, 9], "replic": [0, 2, 36, 37, 44, 45, 46], "both": [0, 2, 9, 11, 13, 42], "mutual": [0, 13], "inform": [0, 2, 13, 14], "profici": 0, "associ": [0, 1, 3, 10, 13, 37], "multisurf": [0, 1, 13], "relief": [0, 13], "epistat": [0, 1], "consider": 0, "fail": [0, 2], "signal": 0, "score": [0, 13, 14, 18, 34, 37, 43, 44, 53], "0": [0, 1, 2, 10, 14, 34, 36, 37, 40, 42, 44, 47], "averag": [0, 14, 34, 37, 43, 45, 47], "bar": [0, 10, 37], "linearli": 0, "quadrat": 0, "reduc": [0, 14, 50], "burden": 0, "rule": [0, 1, 2, 44, 52], "These": 0, "demonstr": [0, 1, 6], "abl": [0, 1, 2, 6, 13], "provid": [0, 1, 2, 3], "interpret": [0, 1, 2, 3, 36, 37], "form": [0, 52], "IF": 0, "THEN": 0, "our": [0, 1, 2, 3], "research": [0, 5], "handl": 0, "scalabl": [0, 1], "nois": [0, 44], "epistasi": 0, "heterogen": [0, 52], "bayesian": [0, 44], "dure": 0, "summar": [0, 1, 37, 43], "sought": 0, "comprehens": 0, "build": 0, "strategi": [0, 2], "gather": [0, 16], "place": [0, 37], "permut": [0, 44], "use_uniform_fi": [0, 44], "fals": [0, 2, 10, 11, 14, 18, 34, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 53], "reli": 0, "16": 0, "accuraci": [0, 37, 53], "f1": [0, 53], "sensit": [0, 1], "recal": [0, 18, 53], "precis": [0, 53], "ppv": 0, "true": [0, 9, 11, 13, 14, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 49, 50, 53], "tp": [0, 53], "neg": [0, 42, 53], "tn": [0, 53], "fp": [0, 53], "fn": [0, 34, 53], "npv": [0, 53], "likeliehood": 0, "ratio": [0, 53], "roc": [0, 37, 45, 47], "auc": [0, 37], "prc": [0, 37, 42, 45, 47], "ap": 0, "reappli": 0, "displai": 0, "n": [0, 1, 27, 35], "fold": [0, 11], "curv": [0, 45, 47], "boxplot": [0, 10, 34, 37, 47], "consist": 0, "lack": 0, "For": [0, 34], "kruskal": [0, 34, 37], "walli": [0, 34, 37], "subsequ": [0, 2], "pairwis": [0, 34, 37], "signific": [0, 2, 10, 34, 37, 40, 42, 47], "given": [0, 2, 3, 5, 10, 34, 37], "either": [0, 1, 13, 42, 44], "singl": [0, 35, 37], "snapshot": 0, "script": [0, 34, 35, 36, 37, 42, 45, 50], "extern": 0, "determin": [0, 1, 9, 34, 37], "yield": [0, 3, 45], "version": [0, 1, 2, 50, 52], "aforement": 0, "To": [1, 6, 7, 14], "cite": 1, "streamlin": [1, 2, 5], "preprint": 1, "arxiv": [1, 3], "pleas": 1, "us": [1, 2, 3, 5, 9, 10, 11, 13, 14, 37, 42, 44, 47, 52], "articl": 1, "urbanowicz2022streamlin": 1, "titl": 1, "transpar": [1, 3, 7], "end": [1, 3, 7], "facilit": 1, "author": 1, "urbanowicz": 1, "ryan": 1, "j": 1, "zhang": 1, "robert": 1, "cui": 1, "yuhan": 1, "suri": 1, "pranshu": 1, "journal": 1, "2206": 1, "12002v1": 1, "year": 1, "2022": 1, "If": [1, 10, 14, 37, 42, 44], "you": [1, 6], "wish": [1, 2], "codebas": [1, 2], "misc": 1, "streamline2022": 1, "publish": 1, "github": [1, 2, 6], "repositori": [1, 2], "howpublish": 1, "url": 1, "http": [1, 2, 6], "com": [1, 2, 6], "urbslab": [1, 2], "In": [1, 2, 37], "method": [1, 9, 11, 42, 44], "lesson": 1, "from": [1, 2, 3, 13, 14, 18, 34, 37, 43, 44], "": [1, 2, 11, 35, 36, 42, 45], "previou": 1, "briefli": 1, "earli": 1, "what": [1, 6], "would": 1, "becom": 1, "pancreat": 1, "cancer": 1, "urbanowicz2020rigor": 1, "applic": [1, 3, 9, 46], "nest": 1, "studi": [1, 36, 45], "implic": 1, "assess": 1, "moor": 1, "jason": 1, "h": 1, "ruth": 1, "karen": 1, "stolzenberg": 1, "solomon": 1, "rachael": 1, "lynch": 1, "shannon": 1, "m": [1, 11, 13, 42, 43], "2008": 1, "12829v2": 1, "2020": 1, "One": [1, 42], "two": 1, "i": [1, 2, 3, 5, 6, 9, 10, 14, 34, 35, 36, 37, 42, 43, 44, 50, 52], "can": [1, 2, 5, 6, 9, 37], "priorit": 1, "involv": 1, "multivari": 1, "outcom": [1, 10, 42, 52], "believ": 1, "least": [1, 45, 46], "paper": 1, "below": [1, 5, 10, 44], "introduct": 1, "review": 1, "urbanowicz2018relief": 1, "meeker": 1, "melissa": 1, "la": 1, "cava": 1, "william": 1, "olson": 1, "randal": 1, "informat": 1, "volum": 1, "85": 1, "page": [1, 35], "189": 1, "203": 1, "2018": 1, "elsevi": 1, "next": [1, 2], "overal": [1, 2, 3, 14, 34], "second": [1, 44], "introduc": [1, 3], "rebat": 1, "releif": 1, "urbanowicz2018benchmark": 1, "benchmark": 1, "bioinformat": 1, "schmitt": 1, "peter": 1, "168": 1, "188": 1, "ensembl": [1, 2], "approach": [1, 2], "kind": 1, "verma2018collect": 1, "crucial": 1, "variant": 1, "verma": 1, "shefali": 1, "luca": 1, "anastasia": 1, "xinyuan": 1, "veturi": 1, "yogasudha": 1, "dudek": 1, "scott": 1, "li": 1, "binglan": 1, "ruowang": 1, "kim": 1, "dokyoon": 1, "other": [1, 2, 3, 34, 37, 42, 43], "biodata": 1, "11": [1, 50], "22": 1, "springer": 1, "incorpor": 1, "run": [1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 54, 56], "close": 1, "subfield": 1, "evolutionari": [1, 2], "discov": 1, "constitut": 1, "appeal": 1, "gear": 1, "toward": 1, "tackl": 1, "long": [1, 44], "stand": 1, "135": 1, "multiplex": 1, "due": [1, 10], "abil": 1, "guid": 1, "search": 1, "urbanowicz2015exstrac": 1, "descript": [1, 10, 42], "intellig": [1, 2], "8": 1, "89": 1, "116": 1, "2015": 1, "print": 1, "lc": [1, 44], "dive": 1, "take": [1, 10, 11, 14, 37, 44], "character": 1, "differ": [1, 2, 34, 37], "pattern": 1, "work": [1, 37, 43], "how": [1, 2], "link": [1, 6], "better": [1, 37], "understand": 1, "relationship": 1, "captur": [1, 3], "zhang2021lc": 1, "2104": 1, "12844": 1, "2021": 1, "direct": [1, 44], "descend": [1, 37], "uc": 1, "inproceed": 1, "zhang2020scikit": 1, "f": 1, "booktitl": 1, "proceed": 1, "comput": [1, 2, 10, 42], "confer": 1, "companion": 1, "1816": 1, "1823": 1, "origin": [1, 9, 34, 37, 45, 46, 52], "primarili": [1, 13], "textbook": 1, "book": 1, "urbanowicz2017introduct": 1, "brown": 1, "Will": [1, 2], "2017": 1, "idea": 2, "welcom": [2, 3], "suggest": [2, 3], "contribut": [2, 3], "collabor": 2, "initi": [2, 10, 11, 13, 42], "function": [2, 10, 14, 16, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 52, 55, 56], "reorgan": 2, "name": [2, 9, 10, 11, 13, 14, 16, 19, 37, 40, 42, 43, 44, 45, 46, 47, 50], "rebrand": 2, "automlpip": 2, "bc": 2, "remain": 2, "repair": 2, "intention": 2, "unless": [2, 10], "explicitli": 2, "turn": 2, "through": 2, "guarante": 2, "explain": 2, "inher": 2, "possibl": [2, 3, 42, 47], "found": [2, 37], "greater": [2, 14], "altern": [2, 14], "correctli": 2, "under": [2, 3], "certain": [2, 3], "situat": 2, "often": 2, "look": 2, "like": 2, "updat": [2, 42], "accordingli": 2, "simplifi": 2, "io": 2, "heavy_check_mark": 2, "modular": 2, "ad": 2, "pypi": 2, "aw": 2, "azur": 2, "docker": 2, "progress": 2, "todo": 2, "rather": 2, "requir": 2, "being": [2, 10, 42], "multiclass": 2, "endpoint": 2, "includ": [2, 3, 6, 9, 10, 14, 34, 37, 42, 45, 47, 53], "shaplei": 2, "calcul": [2, 10, 53], "hold": [2, 36, 45, 46], "opportun": 2, "intern": 2, "list": [2, 10, 11, 14, 18, 35, 37, 40, 42, 44, 46, 47, 52, 53, 56], "post": 2, "clearli": 2, "present": [2, 42], "doe": [2, 6, 36, 42], "impute_data": [2, 9, 36, 41], "yet": 2, "fulli": 2, "smarter": 2, "avoid": [2, 3], "combin": [2, 37], "invalid": [2, 42], "exclud": [2, 34, 35, 36, 40, 44, 45, 46, 47], "get": [2, 6, 19, 37, 52], "larger": [2, 34, 37, 44], "defin": [2, 10], "after": 2, "alwai": 2, "benefit": 2, "popul": [2, 44], "size": [2, 44], "cycl": 2, "slow": 2, "down": 2, "process": [2, 9, 14, 41], "gain": 2, "addit": 2, "refin": 2, "flexibl": 2, "high": 2, "order": [2, 37, 53], "automl": 3, "empow": 3, "notabl": [3, 37], "tool": 3, "tabular": [3, 7, 52], "binari": [3, 7, 42], "continu": [3, 10], "focus": 3, "sourc": [3, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56], "enhanc": 3, "goal": 3, "strength": 3, "weak": 3, "now": 3, "claim": 3, "viabl": 3, "assembl": 3, "nor": 3, "expans": 3, "improv": 3, "hopefulli": 3, "feedback": 3, "architectur": 5, "divid": [5, 37], "independ": [5, 10], "runner": [5, 7, 48], "api": 5, "complement": 5, "subpackag": 5, "dataprep": [5, 7], "submodul": [5, 7], "featurefn": [5, 7], "postanalysi": [5, 7], "without": 6, "whatsoev": 6, "open": 6, "raptor419": 6, "streamline_dev": 6, "blob": 6, "main": [6, 42, 45, 50], "ipynb": [6, 42], "perman": 6, "edit": 6, "feel": 6, "1dgaxnjnzdthtxp914aldrb4ibhjjdm1a": 6, "usp": 6, "share": 6, "data_process": [7, 8], "modul": [7, 8, 12, 15, 21, 33, 38, 48], "dataprocess": [7, 8, 9], "exploratory_analysi": [7, 8], "edajob": [7, 8, 10], "kfold_partit": [7, 8], "kfoldpartition": [7, 8, 11], "featureimport": [7, 12, 13], "featureselect": [7, 12, 14], "basemodel": [7, 15, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "load_model": [7, 15], "load_class_from_fold": [7, 15, 17], "modeljob": [7, 15], "get_paramet": [7, 15, 19], "is_supported_model": [7, 15, 20], "model_str_to_obj": [7, 15, 20], "artificial_neural_network": [7, 21], "mlpclassifi": [7, 21, 22], "decision_tre": [7, 21], "decisiontreeclassifi": [7, 21, 23], "elastic_net": [7, 21], "elasticnetclassifi": [7, 21, 24], "genetic_program": [7, 21], "gpclassifi": [7, 21, 25], "gradient_boost": [7, 21], "cgbclassifi": [7, 21, 26], "gbclassifi": [7, 21, 26], "lgbclassifi": [7, 21, 26], "xgbclassifi": [7, 21, 26], "learning_bas": [7, 21], "exstracsclassifi": [7, 21, 27], "xcsclassifi": [7, 21, 27], "elcsclassifi": [7, 21, 27], "linear_model": [7, 21], "logisticregress": [7, 21, 28], "naive_bay": [7, 21], "naivebayesclassifi": [7, 21, 29], "neighbour": [7, 21], "knnclassifi": [7, 21, 30], "random_forest": [7, 21], "randomforestclassifi": [7, 21, 31], "support_vector_machin": [7, 21], "supportvectorclassifi": [7, 21, 32], "dataset_compar": [7, 33], "comparejob": [7, 33, 34], "gererate_report": [7, 33], "reportjob": [7, 33, 35], "list_to_str": [7, 33, 35], "ngi": [7, 33, 35], "model_repl": [7, 33], "replicatejob": [7, 33, 36], "statsjob": [7, 33, 37], "clean_runn": [7, 38], "cleanrunn": [7, 38, 39], "compare_runn": [7, 38], "comparerunn": [7, 38, 40], "dataprocess_runn": [7, 38], "dataprocessrunn": [7, 38, 41], "eda_runn": [7, 38], "edarunn": [7, 38, 42], "feature_runn": [7, 38], "featureimportancerunn": [7, 38, 43], "featureselectionrunn": [7, 38, 43], "model_runn": [7, 38], "modelexperimentrunn": [7, 38, 44], "replicate_runn": [7, 38], "replicationrunn": [7, 38, 45], "report_runn": [7, 38], "reportrunn": [7, 38, 46], "stats_runn": [7, 38], "statsrunn": [7, 38, 47], "checker": [7, 48], "check_phas": [7, 48, 49], "check_phase_1": [7, 48, 49], "check_phase_10": [7, 48, 49], "check_phase_2": [7, 48, 49], "check_phase_3": [7, 48, 49], "check_phase_4": [7, 48, 49], "check_phase_5": [7, 48, 49], "check_phase_6": [7, 48, 49], "check_phase_7": [7, 48, 49], "check_phase_8": [7, 48, 49], "check_phase_9": [7, 48, 49], "cleanup": [7, 48], "cleaner": [7, 48, 50], "get_clust": [7, 48, 51], "class_ev": [7, 48, 53], "job": [7, 9, 10, 11, 13, 14, 18, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 48, 56], "parser": [7, 48], "comma_sep_choic": [7, 48, 55], "parser_funct": [7, 48, 55], "model_runner_fn": [7, 48, 56], "parallel_eda_cal": [7, 48, 56], "parallel_kfold_cal": [7, 48, 56], "run_job": [7, 48, 56], "runner_fn": [7, 48, 56], "sub_job": [7, 48, 56], "data_sc": [8, 9], "impute_cv_data": [8, 9], "load_data": [8, 9, 48, 52], "save_runtim": [8, 9, 10, 12, 13, 14, 15, 18, 33, 34, 37], "write_cv_fil": [8, 9], "counts_summari": [8, 10], "describe_data": [8, 10], "drop_ignored_rowcol": [8, 10], "feature_correlation_plot": [8, 10], "graph_selector": [8, 10], "identify_feature_typ": [8, 10], "join": [8, 10, 56], "make_log_fold": [8, 10], "missing_count_plot": [8, 10], "missingness_count": [8, 10], "run_explor": [8, 10], "start": [8, 10, 44, 56], "test_selector": [8, 10], "univariate_analysi": [8, 10], "univariate_plot": [8, 10], "cv_partition": [8, 11], "save_dataset": [8, 11], "cv_train_path": [9, 13, 41, 43], "cv_test_path": [9, 41], "experiment_path": [9, 10, 11, 13, 34, 35, 40, 43, 46, 52], "scale_data": [9, 36, 37, 41, 47], "multi_imput": [9, 36, 41], "overwrite_cv": [9, 14, 41, 43], "class_label": [9, 13, 14, 18, 34, 36, 37, 40, 41, 42, 43, 44, 45, 47, 52], "instance_label": [9, 13, 14, 18, 34, 36, 37, 40, 41, 42, 43, 44, 45, 47, 52], "random_st": [9, 10, 11, 13, 16, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 41, 42, 43, 44], "x_train": [9, 16], "x_test": [9, 16, 36], "standardscalar": 9, "featuer": 9, "unit": 9, "varianc": 9, "fit": [9, 15, 16], "alon": 9, "ident": 9, "datafram": [9, 10, 11, 52], "return": [9, 10, 11, 13, 14, 16, 18, 19, 42, 43, 52, 53, 55], "begin": 9, "mode": 9, "header": [9, 16, 42, 52], "preprocess": 9, "data_train": 9, "data_test": 9, "export": [9, 10, 14, 18, 37, 43, 44, 45, 52], "overwrit": [9, 14, 43], "space": [9, 35, 40, 42, 44, 45, 46, 47, 50], "preserv": [9, 14, 50], "copi": 9, "cvonli": 9, "qualiti": 9, "ignore_featur": [10, 42, 52], "categorical_featur": [10, 42], "explor": 10, "categorical_cutoff": [10, 36, 42], "10": [10, 11, 36, 42, 44], "sig_cutoff": [10, 34, 36, 37, 40, 42, 47], "05": [10, 34, 36, 37, 40, 42, 47], "eda": [10, 42, 56], "log": [10, 11, 14], "directori": [10, 11, 37, 40, 42, 44, 45, 46, 47, 50], "row": [10, 42], "y": [10, 34], "cut": 10, "off": 10, "cutoff": [10, 40, 42, 47], "state": 10, "total_miss": 10, "show": [10, 14, 37, 40, 47], "variou": 10, "total": [10, 37], "graph": 10, "again": 10, "flag": [10, 11, 14, 40, 47], "column": [10, 11, 42, 45, 52], "int64": 10, "float64": 10, "uniqu": [10, 42, 52], "drop": [10, 52], "x_data": [10, 52], "via": 10, "pearson": 10, "expens": 10, "difficult": 10, "read": 10, "feature_nam": [10, 16], "assum": 10, "barplot": [10, 14], "histogram": [10, 37, 47], "missing": 10, "top_featur": [10, 14, 37, 42, 43, 47], "20": [10, 14, 42], "wrapper": 10, "top": [10, 14, 37, 43, 47], "accord": 10, "appropri": 10, "p": 10, "sorted_p_list": 10, "check": [10, 42, 55], "whether": [10, 46], "equal": [10, 37], "call": [10, 34, 35], "sort": [10, 13, 14], "partition_method": [11, 42], "n_split": [11, 14, 42], "kfold": 11, "crossvalid": 11, "stratifi": [11, 42], "split": [11, 14, 41, 42, 43, 44, 55], "return_df": 11, "save_df": 11, "r": 11, "empti": [11, 42], "overrid": [11, 44], "train_df": 11, "test_df": 11, "csv": [11, 14, 37, 42, 52], "pickle_scor": [12, 13], "prepare_data": [12, 13], "run_multi_surf": [12, 13], "run_mutual_inform": [12, 13], "sort_save_fi_scor": [12, 13], "gen_filtered_dataset": [12, 14], "report_ave_f": [12, 14], "report_informative_featur": [12, 14], "select_featur": [12, 14], "instance_subset": [13, 43], "2000": [13, 14, 43, 44], "use_turf": [13, 43], "turf_pct": [13, 43], "n_job": [13, 16, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 44], "output_nam": 13, "score_dict": 13, "score_sorted_featur": 13, "dictionari": [13, 14], "param": [13, 14, 16, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 44, 50, 56], "tag": 13, "ordered_feature_nam": 13, "alg_nam": 13, "decreas": 13, "full_path": [14, 18, 36, 37, 43, 44, 47], "export_scor": [14, 43], "max_features_to_keep": [14, 43], "filter_poor_featur": [14, 43], "maximum": [14, 16, 35, 37, 44], "keep": [14, 43, 52], "poor": 14, "last": [14, 43, 44], "cv_selected_list": 14, "path_to_csv": 14, "dataset_nam": 14, "renam": 14, "old": 14, "algorithmlabel": 14, "selected_feature_list": 14, "meta_feature_rank": 14, "store": [14, 37], "evid": 14, "storag": 14, "informative_feature_count": 14, "uninformative_feature_count": 14, "uninform": 14, "full": 14, "union": 14, "max": [14, 43], "grab": 14, "reach": 14, "fpr": [14, 18], "feature_import": [15, 16], "hyper_ev": [15, 16], "model_evalu": [15, 16], "data_prep": [15, 18], "export_best_param": [15, 18], "run_model": [15, 18], "model_nam": [16, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "cv_fold": [16, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "scoring_metr": [16, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 44, 47], "balanced_accuraci": [16, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 44, 47], "metric_direct": [16, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 44], "maxim": [16, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 44], "sampler": [16, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "unimpl": [16, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "stub": [16, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "y_train": 16, "n_trail": 16, "caller": 16, "hyper": [16, 44], "eval": 16, "y_test": [16, 36], "later": [16, 52], "overridden": [16, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "dict": [16, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "common": 16, "x_in": 16, "input": 16, "y_pred": [16, 53], "output_path": [18, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51], "experiment_nam": [18, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50], "cv_count": [18, 36, 44], "n_trial": [18, 44], "200": [18, 44], "900": [18, 44], "uniform_fi": 18, "save_plot": [18, 44], "static": [18, 37, 50], "file_nam": 18, "param_grid": 18, "metric_list": 18, "tpr": [18, 37], "roc_auc": [18, 47], "prec": [18, 37], "prec_rec_auc": 18, "ave_prec": 18, "fi": [18, 37, 43, 47], "proba": 18, "algorithm_nam": 19, "grid": 19, "string": [20, 35, 42], "color": [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "small_nam": [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "abc": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "red": 22, "yellow": 23, "aquamarin": 24, "elast": 24, "net": 24, "en": 24, "purpl": 25, "magenta": 26, "categori": 26, "cornflowerblu": 26, "pink": 26, "light": 26, "cyan": 26, "extrem": 26, "nu": [27, 44], "lawngreen": 27, "oliv": 27, "green": 27, "dimgrei": 28, "silver": 29, "chocol": 30, "knn": [30, 44], "blue": 31, "orang": 32, "best_kruscall_w": [33, 34], "best_mann_whitney_u": [33, 34], "best_wilcoxon_rank": [33, 34], "data_compare_bp": [33, 34], "data_compare_bp_al": [33, 34], "inter_set_best_fn": [33, 34], "inter_set_fn": [33, 34], "kruscall_w": [33, 34], "mann_whitney_u": [33, 34, 37], "temp_summari": [33, 34], "wilcoxon_rank": [33, 34, 37], "footer": [33, 35], "format_fn": [33, 35], "pub_model_mean_stat": [33, 35], "pub_model_median_stat": [33, 35], "pub_runtim": [33, 35], "pub_univari": [33, 35], "eval_model": [33, 36], "impute_rep_data": [33, 36], "scale_rep_data": [33, 36], "composite_fi_plot": [33, 37], "do_fi_boxplot": [33, 37], "do_fi_histogram": [33, 37], "do_model_prc": [33, 37], "do_model_roc": [33, 37], "do_plot_prc": [33, 37], "do_plot_roc": [33, 37], "fi_stat": [33, 37], "frac_fi": [33, 37], "get_fi_to_viz_sort": [33, 37], "kruskal_w": [33, 37], "metric_boxplot": [33, 37], "parse_runtim": [33, 37], "prep_fi": [33, 37], "prepar": [33, 37, 52], "primary_stat": [33, 37], "save_fi": [33, 37], "save_metric_stat": [33, 37], "select_for_composite_viz": [33, 37], "weight_fi": [33, 37], "weight_frac_fi": [33, 37], "show_plot": [34, 36, 37, 40, 47], "datacomparemain": 34, "py": [34, 35, 42, 45], "onc": [34, 35, 36], "entir": [34, 37, 42], "anova": [34, 37], "global_data": 34, "zero": [34, 37], "set1": 34, "set2": 34, "wilcoxon": [34, 37], "sum": [34, 37], "data_path": [35, 37, 42], "rep_data_path": [35, 36, 45, 46, 49], "load_algo": [35, 45], "pdf_reportmain": 35, "stats_d": 35, "best_metric_list": 35, "metric_name_list": 35, "ds2": 35, "result_limit": 35, "page_count": 35, "move": 35, "anoth": 35, "convert": 35, "list1": 35, "find": 35, "greatest": 35, "integ": [35, 44], "dataset_filenam": [36, 45], "dataset_for_rep": [36, 45, 46, 49], "match_label": [36, 42, 45, 52], "cv_partit": [36, 37], "export_feature_correl": [36, 45], "plot_roc": [36, 37, 45, 47], "plot_prc": [36, 37, 45, 47], "plot_metric_boxplot": [36, 37, 45, 47], "previous": [36, 45], "unseen": [36, 45], "deal": 36, "cv_rep_data": 36, "all_train_feature_list": 36, "40": [37, 43, 47], "metric_weight": [37, 47], "plot_fi_box": [37, 47], "deviat": 37, "fi_list": 37, "all_feature_list_to_viz": 37, "fig_nam": 37, "y_label_text": 37, "normal": 37, "fi_df_list": 37, "fi_med_list": 37, "distribut": 37, "median": 37, "prauc": 37, "mean_recal": 37, "alg_result_t": 37, "rep_data": 37, "mean_fpr": 37, "result_t": 37, "metric_dict": 37, "top_fi_med_norm_list": 37, "fracion": 37, "area": 37, "everi": 37, "intuit": 37, "here": 37, "won": 37, "overli": 37, "repres": 37, "might": 37, "lead": [37, 42], "impress": 37, "instead": [37, 44], "real": 37, "estat": 37, "potenti": [37, 42], "alter": 37, "height": 37, "features_to_viz": 37, "all_feature_list": 37, "fi_med_norm_list": 37, "visualis": 37, "index": 37, "weight": [37, 47], "becaus": 37, "perfectli": 37, "kruskal_summari": 37, "pars": 37, "organ": 37, "decod": 37, "master_list": 37, "fi_al": 37, "global_feature_list": 37, "std": 37, "dev": 37, "non_zero_union_featur": 37, "non_zero_union_index": 37, "ave_metric_list": 37, "fi_ave_norm_list": 37, "chosen": 37, "frac": 37, "plai": 37, "role": 37, "viz": 37, "fewer": 37, "top_model_featur": 37, "med_metric_list": 37, "want": 37, "frac_list": 37, "fraction": 37, "sign": 37, "get_cluster_param": [38, 40, 41, 42, 43, 44, 45, 46, 47], "submit_lsf_cluster_job": [38, 40, 41, 42, 43, 44, 45, 46, 47], "submit_slurm_cluster_job": [38, 40, 41, 42, 43, 44, 45, 46, 47], "save_metadata": [38, 41, 42, 43, 44, 45, 47], "make_dir_tre": [38, 42], "run_kfold": [38, 42], "save_alginfo": [38, 44], "get_algorithm": [38, 45], "del_tim": [39, 50], "del_old_cv": [39, 50], "run_clust": [40, 41, 42, 43, 44, 45, 46, 47, 48, 54], "queue": [40, 41, 42, 43, 44, 45, 46, 47, 51], "defq": [40, 41, 42, 43, 44, 45, 46, 47, 51], "reserved_memori": [40, 41, 42, 43, 44, 45, 46, 47], "collat": [40, 46, 47], "str": [40, 44, 46, 47], "run_parallel": [40, 41, 42, 43, 44, 45, 46, 47], "exploration_list": 42, "plot_list": 42, "manag": [42, 45], "metadata": 42, "submit": [42, 45], "exploratoryanalysisjob": 42, "see": 42, "warn": 42, "befor": 42, "sure": 42, "desir": 42, "should": 42, "comma": [42, 55], "txt": [42, 52], "indic": [42, 46], "na": 42, "accept": 42, "critic": 42, "filenam": 42, "liter": 42, "export_exploratory_analysi": 42, "differenti": 42, "id": [42, 45], "throughout": 42, "dataset_path": [42, 47, 52], "exist": 42, "alreadi": 42, "Then": 42, "hierarchi": 42, "eda_obj_list": 42, "mi": 43, "worst": 43, "illustr": [43, 47], "multiprocess": 43, "n_dataset": 43, "training_subsampl": 44, "do_lcs_sweep": 44, "lcs_nu": 44, "lcs_n": 44, "lcs_iter": 44, "200000": 44, "lcs_timeout": 44, "1200": 44, "resubmit": 44, "primari": 44, "algo": 44, "subsampl": 44, "permutation_import": 44, "uniformli": 44, "stop": 44, "longer": 44, "finish": 44, "sec": 44, "minut": 44, "tune": 44, "9": 45, "applymodeljob": 45, "box": [45, 47], "followup": 46, "primary_metr": 47, "len_cv": 47, "rm_tree": [48, 50], "clean_data": [48, 52], "feature_only_data": [48, 52], "get_outcom": [48, 52], "non_feature_data": [48, 52], "set_head": [48, 52], "len_onli": 49, "delet": 50, "temporari": 50, "necessari": 50, "serv": 50, "conveni": 50, "clutter": 50, "older": 50, "overwritten": 50, "cluster_typ": 51, "slurm": 51, "memori": 51, "tsv": 52, "co": 52, "variat": 52, "realli": 52, "mostli": 52, "learner": 52, "trace": 52, "back": 52, "subgroup": 52, "y_data": 52, "refer": 52, "y_true": 53, "likelihood": 53, "bac": 53, "ac": 53, "sp": 53, "pr": 53, "lrp": 53, "lrm": 53, "choic": 55, "argv": 55, "eda_job": 56, "kfold_job": 56, "job_list": 56}, "objects": {"": [[7, 0, 0, "-", "streamline"]], "streamline": [[8, 0, 0, "-", "dataprep"], [12, 0, 0, "-", "featurefns"], [15, 0, 0, "-", "modeling"], [21, 0, 0, "-", "models"], [33, 0, 0, "-", "postanalysis"], [38, 0, 0, "-", "runners"], [48, 0, 0, "-", "utils"]], "streamline.dataprep": [[9, 0, 0, "-", "data_process"], [10, 0, 0, "-", "exploratory_analysis"], [11, 0, 0, "-", "kfold_partitioning"]], "streamline.dataprep.data_process": [[9, 1, 1, "", "DataProcessing"]], "streamline.dataprep.data_process.DataProcessing": [[9, 2, 1, "", "data_scaling"], [9, 2, 1, "", "impute_cv_data"], [9, 2, 1, "", "load_data"], [9, 2, 1, "", "run"], [9, 2, 1, "", "save_runtime"], [9, 2, 1, "", "write_cv_files"]], "streamline.dataprep.exploratory_analysis": [[10, 1, 1, "", "EDAJob"]], "streamline.dataprep.exploratory_analysis.EDAJob": [[10, 2, 1, "", "counts_summary"], [10, 2, 1, "", "describe_data"], [10, 2, 1, "", "drop_ignored_rowcols"], [10, 2, 1, "", "feature_correlation_plot"], [10, 2, 1, "", "graph_selector"], [10, 2, 1, "", "identify_feature_types"], [10, 2, 1, "", "join"], [10, 2, 1, "", "make_log_folders"], [10, 2, 1, "", "missing_count_plot"], [10, 2, 1, "", "missingness_counts"], [10, 2, 1, "", "run"], [10, 2, 1, "", "run_explore"], [10, 2, 1, "", "save_runtime"], [10, 2, 1, "", "start"], [10, 2, 1, "", "test_selector"], [10, 2, 1, "", "univariate_analysis"], [10, 2, 1, "", "univariate_plots"]], "streamline.dataprep.kfold_partitioning": [[11, 1, 1, "", "KFoldPartitioner"]], "streamline.dataprep.kfold_partitioning.KFoldPartitioner": [[11, 2, 1, "", "cv_partitioner"], [11, 2, 1, "", "run"], [11, 2, 1, "", "save_datasets"]], "streamline.featurefns": [[13, 0, 0, "-", "importance"], [14, 0, 0, "-", "selection"]], "streamline.featurefns.importance": [[13, 1, 1, "", "FeatureImportance"]], "streamline.featurefns.importance.FeatureImportance": [[13, 2, 1, "", "pickle_scores"], [13, 2, 1, "", "prepare_data"], [13, 2, 1, "", "run"], [13, 2, 1, "", "run_multi_surf"], [13, 2, 1, "", "run_mutual_information"], [13, 2, 1, "", "save_runtime"], [13, 2, 1, "", "sort_save_fi_scores"]], "streamline.featurefns.selection": [[14, 1, 1, "", "FeatureSelection"]], "streamline.featurefns.selection.FeatureSelection": [[14, 2, 1, "", "gen_filtered_datasets"], [14, 2, 1, "", "report_ave_fs"], [14, 2, 1, "", "report_informative_features"], [14, 2, 1, "", "run"], [14, 2, 1, "", "save_runtime"], [14, 2, 1, "", "select_features"]], "streamline.modeling": [[16, 0, 0, "-", "basemodel"], [17, 0, 0, "-", "load_models"], [18, 0, 0, "-", "modeljob"], [19, 0, 0, "-", "parameters"], [20, 0, 0, "-", "utils"]], "streamline.modeling.basemodel": [[16, 1, 1, "", "BaseModel"]], "streamline.modeling.basemodel.BaseModel": [[16, 2, 1, "", "feature_importance"], [16, 2, 1, "", "fit"], [16, 2, 1, "", "hyper_eval"], [16, 2, 1, "", "model_evaluation"], [16, 2, 1, "", "objective"], [16, 2, 1, "", "optimize"], [16, 2, 1, "", "predict"]], "streamline.modeling.load_models": [[17, 3, 1, "", "load_class_from_folder"]], "streamline.modeling.modeljob": [[18, 1, 1, "", "ModelJob"]], "streamline.modeling.modeljob.ModelJob": [[18, 2, 1, "", "data_prep"], [18, 2, 1, "", "export_best_params"], [18, 2, 1, "", "run"], [18, 2, 1, "", "run_model"], [18, 2, 1, "", "save_runtime"]], "streamline.modeling.parameters": [[19, 3, 1, "", "get_parameters"]], "streamline.modeling.utils": [[20, 3, 1, "", "is_supported_model"], [20, 3, 1, "", "model_str_to_obj"]], "streamline.models": [[22, 0, 0, "-", "artificial_neural_network"], [23, 0, 0, "-", "decision_tree"], [24, 0, 0, "-", "elastic_net"], [25, 0, 0, "-", "genetic_programming"], [26, 0, 0, "-", "gradient_boosting"], [27, 0, 0, "-", "learning_based"], [28, 0, 0, "-", "linear_model"], [29, 0, 0, "-", "naive_bayes"], [30, 0, 0, "-", "neighbouring"], [31, 0, 0, "-", "random_forest"], [32, 0, 0, "-", "support_vector_machine"]], "streamline.models.artificial_neural_network": [[22, 1, 1, "", "MLPClassifier"]], "streamline.models.artificial_neural_network.MLPClassifier": [[22, 4, 1, "", "color"], [22, 4, 1, "", "model_name"], [22, 2, 1, "", "objective"], [22, 4, 1, "", "small_name"]], "streamline.models.decision_tree": [[23, 1, 1, "", "DecisionTreeClassifier"]], "streamline.models.decision_tree.DecisionTreeClassifier": [[23, 4, 1, "", "color"], [23, 4, 1, "", "model_name"], [23, 2, 1, "", "objective"], [23, 4, 1, "", "small_name"]], "streamline.models.elastic_net": [[24, 1, 1, "", "ElasticNetClassifier"]], "streamline.models.elastic_net.ElasticNetClassifier": [[24, 4, 1, "", "color"], [24, 4, 1, "", "model_name"], [24, 2, 1, "", "objective"], [24, 4, 1, "", "small_name"]], "streamline.models.genetic_programming": [[25, 1, 1, "", "GPClassifier"]], "streamline.models.genetic_programming.GPClassifier": [[25, 4, 1, "", "color"], [25, 4, 1, "", "model_name"], [25, 2, 1, "", "objective"], [25, 4, 1, "", "small_name"]], "streamline.models.gradient_boosting": [[26, 1, 1, "", "CGBClassifier"], [26, 1, 1, "", "GBClassifier"], [26, 1, 1, "", "LGBClassifier"], [26, 1, 1, "", "XGBClassifier"]], "streamline.models.gradient_boosting.CGBClassifier": [[26, 4, 1, "", "color"], [26, 4, 1, "", "model_name"], [26, 2, 1, "", "objective"], [26, 4, 1, "", "small_name"]], "streamline.models.gradient_boosting.GBClassifier": [[26, 4, 1, "", "color"], [26, 4, 1, "", "model_name"], [26, 2, 1, "", "objective"], [26, 4, 1, "", "small_name"]], "streamline.models.gradient_boosting.LGBClassifier": [[26, 4, 1, "", "color"], [26, 4, 1, "", "model_name"], [26, 2, 1, "", "objective"], [26, 4, 1, "", "small_name"]], "streamline.models.gradient_boosting.XGBClassifier": [[26, 4, 1, "", "color"], [26, 4, 1, "", "model_name"], [26, 2, 1, "", "objective"], [26, 4, 1, "", "small_name"]], "streamline.models.learning_based": [[27, 1, 1, "", "ExSTraCSClassifier"], [27, 1, 1, "", "XCSClassifier"], [27, 1, 1, "", "eLCSClassifier"]], "streamline.models.learning_based.ExSTraCSClassifier": [[27, 4, 1, "", "color"], [27, 4, 1, "", "model_name"], [27, 2, 1, "", "objective"], [27, 4, 1, "", "small_name"]], "streamline.models.learning_based.XCSClassifier": [[27, 4, 1, "", "color"], [27, 4, 1, "", "model_name"], [27, 2, 1, "", "objective"], [27, 4, 1, "", "small_name"]], "streamline.models.learning_based.eLCSClassifier": [[27, 4, 1, "", "color"], [27, 4, 1, "", "model_name"], [27, 2, 1, "", "objective"], [27, 4, 1, "", "small_name"]], "streamline.models.linear_model": [[28, 1, 1, "", "LogisticRegression"]], "streamline.models.linear_model.LogisticRegression": [[28, 4, 1, "", "color"], [28, 4, 1, "", "model_name"], [28, 2, 1, "", "objective"], [28, 4, 1, "", "small_name"]], "streamline.models.naive_bayes": [[29, 1, 1, "", "NaiveBayesClassifier"]], "streamline.models.naive_bayes.NaiveBayesClassifier": [[29, 4, 1, "", "color"], [29, 4, 1, "", "model_name"], [29, 2, 1, "", "objective"], [29, 4, 1, "", "small_name"]], "streamline.models.neighbouring": [[30, 1, 1, "", "KNNClassifier"]], "streamline.models.neighbouring.KNNClassifier": [[30, 4, 1, "", "color"], [30, 4, 1, "", "model_name"], [30, 2, 1, "", "objective"], [30, 4, 1, "", "small_name"]], "streamline.models.random_forest": [[31, 1, 1, "", "RandomForestClassifier"]], "streamline.models.random_forest.RandomForestClassifier": [[31, 4, 1, "", "color"], [31, 4, 1, "", "model_name"], [31, 2, 1, "", "objective"], [31, 4, 1, "", "small_name"]], "streamline.models.support_vector_machine": [[32, 1, 1, "", "SupportVectorClassifier"]], "streamline.models.support_vector_machine.SupportVectorClassifier": [[32, 4, 1, "", "color"], [32, 4, 1, "", "model_name"], [32, 2, 1, "", "objective"], [32, 4, 1, "", "small_name"]], "streamline.postanalysis": [[34, 0, 0, "-", "dataset_compare"], [35, 0, 0, "-", "gererate_report"], [36, 0, 0, "-", "model_replicate"], [37, 0, 0, "-", "statistics"]], "streamline.postanalysis.dataset_compare": [[34, 1, 1, "", "CompareJob"]], "streamline.postanalysis.dataset_compare.CompareJob": [[34, 2, 1, "", "best_kruscall_wallis"], [34, 2, 1, "", "best_mann_whitney_u"], [34, 2, 1, "", "best_wilcoxon_rank"], [34, 2, 1, "", "data_compare_bp"], [34, 2, 1, "", "data_compare_bp_all"], [34, 2, 1, "", "inter_set_best_fn"], [34, 2, 1, "", "inter_set_fn"], [34, 2, 1, "", "kruscall_wallis"], [34, 2, 1, "", "mann_whitney_u"], [34, 2, 1, "", "run"], [34, 2, 1, "", "save_runtime"], [34, 2, 1, "", "temp_summary"], [34, 2, 1, "", "wilcoxon_rank"]], "streamline.postanalysis.gererate_report": [[35, 1, 1, "", "ReportJob"], [35, 3, 1, "", "list_to_string"], [35, 3, 1, "", "ngi"]], "streamline.postanalysis.gererate_report.ReportJob": [[35, 2, 1, "", "footer"], [35, 2, 1, "", "format_fn"], [35, 2, 1, "", "job"], [35, 2, 1, "", "pub_model_mean_stats"], [35, 2, 1, "", "pub_model_median_stats"], [35, 2, 1, "", "pub_runtime"], [35, 2, 1, "", "pub_univariate"], [35, 2, 1, "", "run"]], "streamline.postanalysis.model_replicate": [[36, 1, 1, "", "ReplicateJob"]], "streamline.postanalysis.model_replicate.ReplicateJob": [[36, 2, 1, "", "eval_model"], [36, 2, 1, "", "impute_rep_data"], [36, 2, 1, "", "run"], [36, 2, 1, "", "scale_rep_data"]], "streamline.postanalysis.statistics": [[37, 1, 1, "", "StatsJob"]], "streamline.postanalysis.statistics.StatsJob": [[37, 2, 1, "", "composite_fi_plot"], [37, 2, 1, "", "do_fi_boxplots"], [37, 2, 1, "", "do_fi_histogram"], [37, 2, 1, "", "do_model_prc"], [37, 2, 1, "", "do_model_roc"], [37, 2, 1, "", "do_plot_prc"], [37, 2, 1, "", "do_plot_roc"], [37, 2, 1, "", "fi_stats"], [37, 2, 1, "", "frac_fi"], [37, 2, 1, "", "get_fi_to_viz_sorted"], [37, 2, 1, "", "kruskal_wallis"], [37, 2, 1, "", "mann_whitney_u"], [37, 2, 1, "", "metric_boxplots"], [37, 2, 1, "", "parse_runtime"], [37, 2, 1, "", "prep_fi"], [37, 2, 1, "", "preparation"], [37, 2, 1, "", "primary_stats"], [37, 2, 1, "", "run"], [37, 2, 1, "", "save_fi"], [37, 2, 1, "", "save_metric_stats"], [37, 2, 1, "", "save_runtime"], [37, 2, 1, "", "select_for_composite_viz"], [37, 2, 1, "", "weight_fi"], [37, 2, 1, "", "weight_frac_fi"], [37, 2, 1, "", "wilcoxon_rank"]], "streamline.runners": [[39, 0, 0, "-", "clean_runner"], [40, 0, 0, "-", "compare_runner"], [41, 0, 0, "-", "dataprocess_runner"], [42, 0, 0, "-", "eda_runner"], [43, 0, 0, "-", "feature_runner"], [44, 0, 0, "-", "model_runner"], [45, 0, 0, "-", "replicate_runner"], [46, 0, 0, "-", "report_runner"], [47, 0, 0, "-", "stats_runner"]], "streamline.runners.clean_runner": [[39, 1, 1, "", "CleanRunner"]], "streamline.runners.clean_runner.CleanRunner": [[39, 2, 1, "", "run"]], "streamline.runners.compare_runner": [[40, 1, 1, "", "CompareRunner"]], "streamline.runners.compare_runner.CompareRunner": [[40, 2, 1, "", "get_cluster_params"], [40, 2, 1, "", "run"], [40, 2, 1, "", "submit_lsf_cluster_job"], [40, 2, 1, "", "submit_slurm_cluster_job"]], "streamline.runners.dataprocess_runner": [[41, 1, 1, "", "DataProcessRunner"]], "streamline.runners.dataprocess_runner.DataProcessRunner": [[41, 2, 1, "", "get_cluster_params"], [41, 2, 1, "", "run"], [41, 2, 1, "", "save_metadata"], [41, 2, 1, "", "submit_lsf_cluster_job"], [41, 2, 1, "", "submit_slurm_cluster_job"]], "streamline.runners.eda_runner": [[42, 1, 1, "", "EDARunner"]], "streamline.runners.eda_runner.EDARunner": [[42, 2, 1, "", "get_cluster_params"], [42, 2, 1, "", "make_dir_tree"], [42, 2, 1, "", "run"], [42, 2, 1, "", "run_kfold"], [42, 2, 1, "", "save_metadata"], [42, 2, 1, "", "submit_lsf_cluster_job"], [42, 2, 1, "", "submit_slurm_cluster_job"]], "streamline.runners.feature_runner": [[43, 1, 1, "", "FeatureImportanceRunner"], [43, 1, 1, "", "FeatureSelectionRunner"]], "streamline.runners.feature_runner.FeatureImportanceRunner": [[43, 2, 1, "", "get_cluster_params"], [43, 2, 1, "", "run"], [43, 2, 1, "", "save_metadata"], [43, 2, 1, "", "submit_lsf_cluster_job"], [43, 2, 1, "", "submit_slurm_cluster_job"]], "streamline.runners.feature_runner.FeatureSelectionRunner": [[43, 2, 1, "", "get_cluster_params"], [43, 2, 1, "", "run"], [43, 2, 1, "", "save_metadata"], [43, 2, 1, "", "submit_lsf_cluster_job"], [43, 2, 1, "", "submit_slurm_cluster_job"]], "streamline.runners.model_runner": [[44, 1, 1, "", "ModelExperimentRunner"]], "streamline.runners.model_runner.ModelExperimentRunner": [[44, 2, 1, "", "get_cluster_params"], [44, 2, 1, "", "run"], [44, 2, 1, "", "save_alginfo"], [44, 2, 1, "", "save_metadata"], [44, 2, 1, "", "submit_lsf_cluster_job"], [44, 2, 1, "", "submit_slurm_cluster_job"]], "streamline.runners.replicate_runner": [[45, 1, 1, "", "ReplicationRunner"]], "streamline.runners.replicate_runner.ReplicationRunner": [[45, 2, 1, "", "get_algorithms"], [45, 2, 1, "", "get_cluster_params"], [45, 2, 1, "", "run"], [45, 2, 1, "", "save_metadata"], [45, 2, 1, "", "submit_lsf_cluster_job"], [45, 2, 1, "", "submit_slurm_cluster_job"]], "streamline.runners.report_runner": [[46, 1, 1, "", "ReportRunner"]], "streamline.runners.report_runner.ReportRunner": [[46, 2, 1, "", "get_cluster_params"], [46, 2, 1, "", "run"], [46, 2, 1, "", "submit_lsf_cluster_job"], [46, 2, 1, "", "submit_slurm_cluster_job"]], "streamline.runners.stats_runner": [[47, 1, 1, "", "StatsRunner"]], "streamline.runners.stats_runner.StatsRunner": [[47, 2, 1, "", "get_cluster_params"], [47, 2, 1, "", "run"], [47, 2, 1, "", "save_metadata"], [47, 2, 1, "", "submit_lsf_cluster_job"], [47, 2, 1, "", "submit_slurm_cluster_job"]], "streamline.utils": [[49, 0, 0, "-", "checker"], [50, 0, 0, "-", "cleanup"], [51, 0, 0, "-", "cluster"], [52, 0, 0, "-", "dataset"], [53, 0, 0, "-", "evaluation"], [54, 0, 0, "-", "job"], [55, 0, 0, "-", "parser"], [56, 0, 0, "-", "runners"]], "streamline.utils.checker": [[49, 3, 1, "", "check_phase"], [49, 3, 1, "", "check_phase_1"], [49, 3, 1, "", "check_phase_10"], [49, 3, 1, "", "check_phase_2"], [49, 3, 1, "", "check_phase_3"], [49, 3, 1, "", "check_phase_4"], [49, 3, 1, "", "check_phase_5"], [49, 3, 1, "", "check_phase_6"], [49, 3, 1, "", "check_phase_7"], [49, 3, 1, "", "check_phase_8"], [49, 3, 1, "", "check_phase_9"]], "streamline.utils.cleanup": [[50, 1, 1, "", "Cleaner"]], "streamline.utils.cleanup.Cleaner": [[50, 2, 1, "", "rm_tree"], [50, 2, 1, "", "run"]], "streamline.utils.cluster": [[51, 3, 1, "", "get_cluster"]], "streamline.utils.dataset": [[52, 1, 1, "", "Dataset"]], "streamline.utils.dataset.Dataset": [[52, 2, 1, "", "clean_data"], [52, 2, 1, "", "feature_only_data"], [52, 2, 1, "", "get_outcome"], [52, 2, 1, "", "load_data"], [52, 2, 1, "", "non_feature_data"], [52, 2, 1, "", "set_headers"]], "streamline.utils.evaluation": [[53, 3, 1, "", "class_eval"]], "streamline.utils.job": [[54, 1, 1, "", "Job"]], "streamline.utils.job.Job": [[54, 2, 1, "", "run"], [54, 2, 1, "", "run_cluster"]], "streamline.utils.parser": [[55, 3, 1, "", "comma_sep_choices"], [55, 3, 1, "", "parser_function"]], "streamline.utils.runners": [[56, 3, 1, "", "model_runner_fn"], [56, 3, 1, "", "parallel_eda_call"], [56, 3, 1, "", "parallel_kfold_call"], [56, 3, 1, "", "run_jobs"], [56, 3, 1, "", "runner_fn"], [56, 3, 1, "", "sub_jobs"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"about": [0, 57], "faq": 0, "what": 0, "level": 0, "comput": 0, "skill": 0, "i": 0, "requir": 0, "us": [0, 57], "can": 0, "doe": 0, "streamlin": [0, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "includ": 0, "how": 0, "differ": 0, "from": 0, "other": 0, "automl": 0, "tool": 0, "run": 0, "mode": 0, "uniqu": 0, "characterist": 0, "citat": 1, "urb": 1, "lab": 1, "relat": 1, "research": 1, "A": 1, "rigor": 1, "ml": 1, "pipelin": [1, 6], "binari": 1, "classif": 1, "relief": 1, "base": 1, "featur": 1, "import": [1, 13], "estim": 1, "collect": 1, "select": [1, 14], "learn": 1, "classifi": 1, "system": 1, "develop": 2, "note": 2, "histori": 2, "plan": 2, "extens": 2, "improv": 2, "known": 2, "issu": 2, "logist": 2, "capabl": 2, "algorithm": 2, "overview": 3, "preprint": 3, "disclaim": 3, "instal": 4, "code": 5, "document": 5, "sampl": 6, "output": 6, "view": 6, "folder": 6, "figur": 6, "gener": 6, "packag": [7, 8, 12, 15, 21, 33, 38, 48], "subpackag": 7, "dataprep": [8, 9, 10, 11], "submodul": [8, 12, 15, 21, 33, 38, 48], "data_process": 9, "modul": [9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56], "exploratory_analysi": 10, "kfold_partit": 11, "featurefn": [12, 13, 14], "model": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 57], "basemodel": 16, "load_model": 17, "modeljob": 18, "paramet": 19, "util": [20, 48, 49, 50, 51, 52, 53, 54, 55, 56], "artificial_neural_network": 22, "decision_tre": 23, "elastic_net": 24, "genetic_program": 25, "gradient_boost": 26, "learning_bas": 27, "linear_model": 28, "naive_bay": 29, "neighbour": 30, "random_forest": 31, "support_vector_machin": 32, "postanalysi": [33, 34, 35, 36, 37], "dataset_compar": 34, "gererate_report": 35, "model_repl": 36, "statist": 37, "runner": [38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 56], "clean_runn": 39, "compare_runn": 40, "dataprocess_runn": 41, "eda_runn": 42, "feature_runn": 43, "model_runn": 44, "replicate_runn": 45, "report_runn": 46, "stats_runn": 47, "checker": 49, "cleanup": 50, "cluster": 51, "dataset": [52, 57], "evalu": 53, "job": 54, "parser": 55, "usag": 57, "jupyt": 57, "notebook": 57, "commandlin": 57, "demonstr": 57, "custom": 57}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"About (FAQs)": [[0, "about-faqs"]], "What level of computing skill is required for use?": [[0, "what-level-of-computing-skill-is-required-for-use"]], "What can it be used for?": [[0, "what-can-it-be-used-for"]], "What does STREAMLINE include?": [[0, "what-does-streamline-include"]], "How is STREAMLINE different from other AutoML tools?": [[0, "how-is-streamline-different-from-other-automl-tools"]], "STREAMLINE Run Modes": [[0, "streamline-run-modes"]], "Unique Characteristics of STREAMLINE": [[0, "unique-characteristics-of-streamline"]], "Citations": [[1, "citations"]], "URBS-lab related research": [[1, "urbs-lab-related-research"]], "A rigorous ML pipeline for binary classification": [[1, "a-rigorous-ml-pipeline-for-binary-classification"]], "Relief-based feature importance estimation": [[1, "relief-based-feature-importance-estimation"]], "Collective feature selection": [[1, "collective-feature-selection"]], "Learning classifier systems": [[1, "learning-classifier-systems"]], "Development notes": [[2, "development-notes"]], "History": [[2, "history"]], "Planned extensions/improvements": [[2, "planned-extensions-improvements"]], "Known issues": [[2, "known-issues"]], "Logistical extensions": [[2, "logistical-extensions"]], "Capabilities extensions": [[2, "capabilities-extensions"]], "Algorithmic extensions": [[2, "algorithmic-extensions"]], "STREAMLINE": [[3, "streamline"]], "Overview": [[3, "overview"]], "Preprint": [[3, "preprint"]], "Disclaimer": [[3, "disclaimer"]], "Installation": [[4, "installation"]], "Code Documentation": [[5, "code-documentation"]], "Sample Outputs": [[6, "sample-outputs"]], "View pipeline and output folders": [[6, "view-pipeline-and-output-folders"]], "Sample Figures generated by STREAMLINE": [[6, "sample-figures-generated-by-streamline"]], "streamline package": [[7, "module-streamline"]], "Subpackages": [[7, "subpackages"]], "streamline.dataprep package": [[8, "module-streamline.dataprep"]], "Submodules": [[8, "submodules"], [12, "submodules"], [15, "submodules"], [21, "submodules"], [33, "submodules"], [38, "submodules"], [48, "submodules"]], "streamline.dataprep.data_process module": [[9, "module-streamline.dataprep.data_process"]], "streamline.dataprep.exploratory_analysis module": [[10, "module-streamline.dataprep.exploratory_analysis"]], "streamline.dataprep.kfold_partitioning module": [[11, "module-streamline.dataprep.kfold_partitioning"]], "streamline.featurefns package": [[12, "module-streamline.featurefns"]], "streamline.featurefns.importance module": [[13, "module-streamline.featurefns.importance"]], "streamline.featurefns.selection module": [[14, "module-streamline.featurefns.selection"]], "streamline.modeling package": [[15, "module-streamline.modeling"]], "streamline.modeling.basemodel module": [[16, "module-streamline.modeling.basemodel"]], "streamline.modeling.load_models module": [[17, "module-streamline.modeling.load_models"]], "streamline.modeling.modeljob module": [[18, "module-streamline.modeling.modeljob"]], "streamline.modeling.parameters module": [[19, "module-streamline.modeling.parameters"]], "streamline.modeling.utils module": [[20, "module-streamline.modeling.utils"]], "streamline.models package": [[21, "module-streamline.models"]], "streamline.models.artificial_neural_network module": [[22, "module-streamline.models.artificial_neural_network"]], "streamline.models.decision_tree module": [[23, "module-streamline.models.decision_tree"]], "streamline.models.elastic_net module": [[24, "module-streamline.models.elastic_net"]], "streamline.models.genetic_programming module": [[25, "module-streamline.models.genetic_programming"]], "streamline.models.gradient_boosting module": [[26, "module-streamline.models.gradient_boosting"]], "streamline.models.learning_based module": [[27, "module-streamline.models.learning_based"]], "streamline.models.linear_model module": [[28, "module-streamline.models.linear_model"]], "streamline.models.naive_bayes module": [[29, "module-streamline.models.naive_bayes"]], "streamline.models.neighbouring module": [[30, "module-streamline.models.neighbouring"]], "streamline.models.random_forest module": [[31, "module-streamline.models.random_forest"]], "streamline.models.support_vector_machine module": [[32, "module-streamline.models.support_vector_machine"]], "streamline.postanalysis package": [[33, "module-streamline.postanalysis"]], "streamline.postanalysis.dataset_compare module": [[34, "module-streamline.postanalysis.dataset_compare"]], "streamline.postanalysis.gererate_report module": [[35, "module-streamline.postanalysis.gererate_report"]], "streamline.postanalysis.model_replicate module": [[36, "module-streamline.postanalysis.model_replicate"]], "streamline.postanalysis.statistics module": [[37, "module-streamline.postanalysis.statistics"]], "streamline.runners package": [[38, "module-streamline.runners"]], "streamline.runners.clean_runner module": [[39, "module-streamline.runners.clean_runner"]], "streamline.runners.compare_runner module": [[40, "module-streamline.runners.compare_runner"]], "streamline.runners.dataprocess_runner module": [[41, "module-streamline.runners.dataprocess_runner"]], "streamline.runners.eda_runner module": [[42, "module-streamline.runners.eda_runner"]], "streamline.runners.feature_runner module": [[43, "module-streamline.runners.feature_runner"]], "streamline.runners.model_runner module": [[44, "module-streamline.runners.model_runner"]], "streamline.runners.replicate_runner module": [[45, "module-streamline.runners.replicate_runner"]], "streamline.runners.report_runner module": [[46, "module-streamline.runners.report_runner"]], "streamline.runners.stats_runner module": [[47, "module-streamline.runners.stats_runner"]], "streamline.utils package": [[48, "module-streamline.utils"]], "streamline.utils.checker module": [[49, "module-streamline.utils.checker"]], "streamline.utils.cleanup module": [[50, "module-streamline.utils.cleanup"]], "streamline.utils.cluster module": [[51, "module-streamline.utils.cluster"]], "streamline.utils.dataset module": [[52, "module-streamline.utils.dataset"]], "streamline.utils.evaluation module": [[53, "module-streamline.utils.evaluation"]], "streamline.utils.job module": [[54, "module-streamline.utils.job"]], "streamline.utils.parser module": [[55, "module-streamline.utils.parser"]], "streamline.utils.runners module": [[56, "module-streamline.utils.runners"]], "Usage": [[57, "usage"]], "Jupyter Notebook": [[57, "jupyter-notebook"]], "Commandline Demonstration": [[57, "commandline-demonstration"]], "Using Custom Models": [[57, "using-custom-models"]], "About Demonstration Dataset": [[57, "about-demonstration-dataset"]]}, "indexentries": {"module": [[7, "module-streamline"], [8, "module-streamline.dataprep"], [9, "module-streamline.dataprep.data_process"], [10, "module-streamline.dataprep.exploratory_analysis"], [11, "module-streamline.dataprep.kfold_partitioning"], [12, "module-streamline.featurefns"], [13, "module-streamline.featurefns.importance"], [14, "module-streamline.featurefns.selection"], [15, "module-streamline.modeling"], [16, "module-streamline.modeling.basemodel"], [17, "module-streamline.modeling.load_models"], [18, "module-streamline.modeling.modeljob"], [19, "module-streamline.modeling.parameters"], [20, "module-streamline.modeling.utils"], [21, "module-streamline.models"], [22, "module-streamline.models.artificial_neural_network"], [23, "module-streamline.models.decision_tree"], [24, "module-streamline.models.elastic_net"], [25, "module-streamline.models.genetic_programming"], [26, "module-streamline.models.gradient_boosting"], [27, "module-streamline.models.learning_based"], [28, "module-streamline.models.linear_model"], [29, "module-streamline.models.naive_bayes"], [30, "module-streamline.models.neighbouring"], [31, "module-streamline.models.random_forest"], [32, "module-streamline.models.support_vector_machine"], [33, "module-streamline.postanalysis"], [34, "module-streamline.postanalysis.dataset_compare"], [35, "module-streamline.postanalysis.gererate_report"], [36, "module-streamline.postanalysis.model_replicate"], [37, "module-streamline.postanalysis.statistics"], [38, "module-streamline.runners"], [39, "module-streamline.runners.clean_runner"], [40, "module-streamline.runners.compare_runner"], [41, "module-streamline.runners.dataprocess_runner"], [42, "module-streamline.runners.eda_runner"], [43, "module-streamline.runners.feature_runner"], [44, "module-streamline.runners.model_runner"], [45, "module-streamline.runners.replicate_runner"], [46, "module-streamline.runners.report_runner"], [47, "module-streamline.runners.stats_runner"], [48, "module-streamline.utils"], [49, "module-streamline.utils.checker"], [50, "module-streamline.utils.cleanup"], [51, "module-streamline.utils.cluster"], [52, "module-streamline.utils.dataset"], [53, "module-streamline.utils.evaluation"], [54, "module-streamline.utils.job"], [55, "module-streamline.utils.parser"], [56, "module-streamline.utils.runners"]], "streamline": [[7, "module-streamline"]], "streamline.dataprep": [[8, "module-streamline.dataprep"]], "dataprocessing (class in streamline.dataprep.data_process)": [[9, "streamline.dataprep.data_process.DataProcessing"]], "data_scaling() (streamline.dataprep.data_process.dataprocessing method)": [[9, "streamline.dataprep.data_process.DataProcessing.data_scaling"]], "impute_cv_data() (streamline.dataprep.data_process.dataprocessing method)": [[9, "streamline.dataprep.data_process.DataProcessing.impute_cv_data"]], "load_data() (streamline.dataprep.data_process.dataprocessing method)": [[9, "streamline.dataprep.data_process.DataProcessing.load_data"]], "run() (streamline.dataprep.data_process.dataprocessing method)": [[9, "streamline.dataprep.data_process.DataProcessing.run"]], "save_runtime() (streamline.dataprep.data_process.dataprocessing method)": [[9, "streamline.dataprep.data_process.DataProcessing.save_runtime"]], "streamline.dataprep.data_process": [[9, "module-streamline.dataprep.data_process"]], "write_cv_files() (streamline.dataprep.data_process.dataprocessing method)": [[9, "streamline.dataprep.data_process.DataProcessing.write_cv_files"]], "edajob (class in streamline.dataprep.exploratory_analysis)": [[10, "streamline.dataprep.exploratory_analysis.EDAJob"]], "counts_summary() (streamline.dataprep.exploratory_analysis.edajob method)": [[10, "streamline.dataprep.exploratory_analysis.EDAJob.counts_summary"]], "describe_data() (streamline.dataprep.exploratory_analysis.edajob method)": [[10, "streamline.dataprep.exploratory_analysis.EDAJob.describe_data"]], "drop_ignored_rowcols() (streamline.dataprep.exploratory_analysis.edajob method)": [[10, "streamline.dataprep.exploratory_analysis.EDAJob.drop_ignored_rowcols"]], "feature_correlation_plot() (streamline.dataprep.exploratory_analysis.edajob method)": [[10, "streamline.dataprep.exploratory_analysis.EDAJob.feature_correlation_plot"]], "graph_selector() (streamline.dataprep.exploratory_analysis.edajob method)": [[10, "streamline.dataprep.exploratory_analysis.EDAJob.graph_selector"]], "identify_feature_types() (streamline.dataprep.exploratory_analysis.edajob method)": [[10, "streamline.dataprep.exploratory_analysis.EDAJob.identify_feature_types"]], "join() (streamline.dataprep.exploratory_analysis.edajob method)": [[10, "streamline.dataprep.exploratory_analysis.EDAJob.join"]], "make_log_folders() (streamline.dataprep.exploratory_analysis.edajob method)": [[10, "streamline.dataprep.exploratory_analysis.EDAJob.make_log_folders"]], "missing_count_plot() (streamline.dataprep.exploratory_analysis.edajob method)": [[10, "streamline.dataprep.exploratory_analysis.EDAJob.missing_count_plot"]], "missingness_counts() (streamline.dataprep.exploratory_analysis.edajob method)": [[10, "streamline.dataprep.exploratory_analysis.EDAJob.missingness_counts"]], "run() (streamline.dataprep.exploratory_analysis.edajob method)": [[10, "streamline.dataprep.exploratory_analysis.EDAJob.run"]], "run_explore() (streamline.dataprep.exploratory_analysis.edajob method)": [[10, "streamline.dataprep.exploratory_analysis.EDAJob.run_explore"]], "save_runtime() (streamline.dataprep.exploratory_analysis.edajob method)": [[10, "streamline.dataprep.exploratory_analysis.EDAJob.save_runtime"]], "start() (streamline.dataprep.exploratory_analysis.edajob method)": [[10, "streamline.dataprep.exploratory_analysis.EDAJob.start"]], "streamline.dataprep.exploratory_analysis": [[10, "module-streamline.dataprep.exploratory_analysis"]], "test_selector() (streamline.dataprep.exploratory_analysis.edajob method)": [[10, "streamline.dataprep.exploratory_analysis.EDAJob.test_selector"]], "univariate_analysis() (streamline.dataprep.exploratory_analysis.edajob method)": [[10, "streamline.dataprep.exploratory_analysis.EDAJob.univariate_analysis"]], "univariate_plots() (streamline.dataprep.exploratory_analysis.edajob method)": [[10, "streamline.dataprep.exploratory_analysis.EDAJob.univariate_plots"]], "kfoldpartitioner (class in streamline.dataprep.kfold_partitioning)": [[11, "streamline.dataprep.kfold_partitioning.KFoldPartitioner"]], "cv_partitioner() (streamline.dataprep.kfold_partitioning.kfoldpartitioner method)": [[11, "streamline.dataprep.kfold_partitioning.KFoldPartitioner.cv_partitioner"]], "run() (streamline.dataprep.kfold_partitioning.kfoldpartitioner method)": [[11, "streamline.dataprep.kfold_partitioning.KFoldPartitioner.run"]], "save_datasets() (streamline.dataprep.kfold_partitioning.kfoldpartitioner method)": [[11, "streamline.dataprep.kfold_partitioning.KFoldPartitioner.save_datasets"]], "streamline.dataprep.kfold_partitioning": [[11, "module-streamline.dataprep.kfold_partitioning"]], "streamline.featurefns": [[12, "module-streamline.featurefns"]], "featureimportance (class in streamline.featurefns.importance)": [[13, "streamline.featurefns.importance.FeatureImportance"]], "pickle_scores() (streamline.featurefns.importance.featureimportance method)": [[13, "streamline.featurefns.importance.FeatureImportance.pickle_scores"]], "prepare_data() (streamline.featurefns.importance.featureimportance method)": [[13, "streamline.featurefns.importance.FeatureImportance.prepare_data"]], "run() (streamline.featurefns.importance.featureimportance method)": [[13, "streamline.featurefns.importance.FeatureImportance.run"]], "run_multi_surf() (streamline.featurefns.importance.featureimportance method)": [[13, "streamline.featurefns.importance.FeatureImportance.run_multi_surf"]], "run_mutual_information() (streamline.featurefns.importance.featureimportance method)": [[13, "streamline.featurefns.importance.FeatureImportance.run_mutual_information"]], "save_runtime() (streamline.featurefns.importance.featureimportance method)": [[13, "streamline.featurefns.importance.FeatureImportance.save_runtime"]], "sort_save_fi_scores() (streamline.featurefns.importance.featureimportance method)": [[13, "streamline.featurefns.importance.FeatureImportance.sort_save_fi_scores"]], "streamline.featurefns.importance": [[13, "module-streamline.featurefns.importance"]], "featureselection (class in streamline.featurefns.selection)": [[14, "streamline.featurefns.selection.FeatureSelection"]], "gen_filtered_datasets() (streamline.featurefns.selection.featureselection method)": [[14, "streamline.featurefns.selection.FeatureSelection.gen_filtered_datasets"]], "report_ave_fs() (streamline.featurefns.selection.featureselection method)": [[14, "streamline.featurefns.selection.FeatureSelection.report_ave_fs"]], "report_informative_features() (streamline.featurefns.selection.featureselection method)": [[14, "streamline.featurefns.selection.FeatureSelection.report_informative_features"]], "run() (streamline.featurefns.selection.featureselection method)": [[14, "streamline.featurefns.selection.FeatureSelection.run"]], "save_runtime() (streamline.featurefns.selection.featureselection method)": [[14, "streamline.featurefns.selection.FeatureSelection.save_runtime"]], "select_features() (streamline.featurefns.selection.featureselection method)": [[14, "streamline.featurefns.selection.FeatureSelection.select_features"]], "streamline.featurefns.selection": [[14, "module-streamline.featurefns.selection"]], "streamline.modeling": [[15, "module-streamline.modeling"]], "basemodel (class in streamline.modeling.basemodel)": [[16, "streamline.modeling.basemodel.BaseModel"]], "feature_importance() (streamline.modeling.basemodel.basemodel method)": [[16, "streamline.modeling.basemodel.BaseModel.feature_importance"]], "fit() (streamline.modeling.basemodel.basemodel method)": [[16, "streamline.modeling.basemodel.BaseModel.fit"]], "hyper_eval() (streamline.modeling.basemodel.basemodel method)": [[16, "streamline.modeling.basemodel.BaseModel.hyper_eval"]], "model_evaluation() (streamline.modeling.basemodel.basemodel method)": [[16, "streamline.modeling.basemodel.BaseModel.model_evaluation"]], "objective() (streamline.modeling.basemodel.basemodel method)": [[16, "streamline.modeling.basemodel.BaseModel.objective"]], "optimize() (streamline.modeling.basemodel.basemodel method)": [[16, "streamline.modeling.basemodel.BaseModel.optimize"]], "predict() (streamline.modeling.basemodel.basemodel method)": [[16, "streamline.modeling.basemodel.BaseModel.predict"]], "streamline.modeling.basemodel": [[16, "module-streamline.modeling.basemodel"]], "load_class_from_folder() (in module streamline.modeling.load_models)": [[17, "streamline.modeling.load_models.load_class_from_folder"]], "streamline.modeling.load_models": [[17, "module-streamline.modeling.load_models"]], "modeljob (class in streamline.modeling.modeljob)": [[18, "streamline.modeling.modeljob.ModelJob"]], "data_prep() (streamline.modeling.modeljob.modeljob method)": [[18, "streamline.modeling.modeljob.ModelJob.data_prep"]], "export_best_params() (streamline.modeling.modeljob.modeljob static method)": [[18, "streamline.modeling.modeljob.ModelJob.export_best_params"]], "run() (streamline.modeling.modeljob.modeljob method)": [[18, "streamline.modeling.modeljob.ModelJob.run"]], "run_model() (streamline.modeling.modeljob.modeljob method)": [[18, "streamline.modeling.modeljob.ModelJob.run_model"]], "save_runtime() (streamline.modeling.modeljob.modeljob method)": [[18, "streamline.modeling.modeljob.ModelJob.save_runtime"]], "streamline.modeling.modeljob": [[18, "module-streamline.modeling.modeljob"]], "get_parameters() (in module streamline.modeling.parameters)": [[19, "streamline.modeling.parameters.get_parameters"]], "streamline.modeling.parameters": [[19, "module-streamline.modeling.parameters"]], "is_supported_model() (in module streamline.modeling.utils)": [[20, "streamline.modeling.utils.is_supported_model"]], "model_str_to_obj() (in module streamline.modeling.utils)": [[20, "streamline.modeling.utils.model_str_to_obj"]], "streamline.modeling.utils": [[20, "module-streamline.modeling.utils"]], "streamline.models": [[21, "module-streamline.models"]], "mlpclassifier (class in streamline.models.artificial_neural_network)": [[22, "streamline.models.artificial_neural_network.MLPClassifier"]], "color (streamline.models.artificial_neural_network.mlpclassifier attribute)": [[22, "streamline.models.artificial_neural_network.MLPClassifier.color"]], "model_name (streamline.models.artificial_neural_network.mlpclassifier attribute)": [[22, "streamline.models.artificial_neural_network.MLPClassifier.model_name"]], "objective() (streamline.models.artificial_neural_network.mlpclassifier method)": [[22, "streamline.models.artificial_neural_network.MLPClassifier.objective"]], "small_name (streamline.models.artificial_neural_network.mlpclassifier attribute)": [[22, "streamline.models.artificial_neural_network.MLPClassifier.small_name"]], "streamline.models.artificial_neural_network": [[22, "module-streamline.models.artificial_neural_network"]], "decisiontreeclassifier (class in streamline.models.decision_tree)": [[23, "streamline.models.decision_tree.DecisionTreeClassifier"]], "color (streamline.models.decision_tree.decisiontreeclassifier attribute)": [[23, "streamline.models.decision_tree.DecisionTreeClassifier.color"]], "model_name (streamline.models.decision_tree.decisiontreeclassifier attribute)": [[23, "streamline.models.decision_tree.DecisionTreeClassifier.model_name"]], "objective() (streamline.models.decision_tree.decisiontreeclassifier method)": [[23, "streamline.models.decision_tree.DecisionTreeClassifier.objective"]], "small_name (streamline.models.decision_tree.decisiontreeclassifier attribute)": [[23, "streamline.models.decision_tree.DecisionTreeClassifier.small_name"]], "streamline.models.decision_tree": [[23, "module-streamline.models.decision_tree"]], "elasticnetclassifier (class in streamline.models.elastic_net)": [[24, "streamline.models.elastic_net.ElasticNetClassifier"]], "color (streamline.models.elastic_net.elasticnetclassifier attribute)": [[24, "streamline.models.elastic_net.ElasticNetClassifier.color"]], "model_name (streamline.models.elastic_net.elasticnetclassifier attribute)": [[24, "streamline.models.elastic_net.ElasticNetClassifier.model_name"]], "objective() (streamline.models.elastic_net.elasticnetclassifier method)": [[24, "streamline.models.elastic_net.ElasticNetClassifier.objective"]], "small_name (streamline.models.elastic_net.elasticnetclassifier attribute)": [[24, "streamline.models.elastic_net.ElasticNetClassifier.small_name"]], "streamline.models.elastic_net": [[24, "module-streamline.models.elastic_net"]], "gpclassifier (class in streamline.models.genetic_programming)": [[25, "streamline.models.genetic_programming.GPClassifier"]], "color (streamline.models.genetic_programming.gpclassifier attribute)": [[25, "streamline.models.genetic_programming.GPClassifier.color"]], "model_name (streamline.models.genetic_programming.gpclassifier attribute)": [[25, "streamline.models.genetic_programming.GPClassifier.model_name"]], "objective() (streamline.models.genetic_programming.gpclassifier method)": [[25, "streamline.models.genetic_programming.GPClassifier.objective"]], "small_name (streamline.models.genetic_programming.gpclassifier attribute)": [[25, "streamline.models.genetic_programming.GPClassifier.small_name"]], "streamline.models.genetic_programming": [[25, "module-streamline.models.genetic_programming"]], "cgbclassifier (class in streamline.models.gradient_boosting)": [[26, "streamline.models.gradient_boosting.CGBClassifier"]], "gbclassifier (class in streamline.models.gradient_boosting)": [[26, "streamline.models.gradient_boosting.GBClassifier"]], "lgbclassifier (class in streamline.models.gradient_boosting)": [[26, "streamline.models.gradient_boosting.LGBClassifier"]], "xgbclassifier (class in streamline.models.gradient_boosting)": [[26, "streamline.models.gradient_boosting.XGBClassifier"]], "color (streamline.models.gradient_boosting.cgbclassifier attribute)": [[26, "streamline.models.gradient_boosting.CGBClassifier.color"]], "color (streamline.models.gradient_boosting.gbclassifier attribute)": [[26, "streamline.models.gradient_boosting.GBClassifier.color"]], "color (streamline.models.gradient_boosting.lgbclassifier attribute)": [[26, "streamline.models.gradient_boosting.LGBClassifier.color"]], "color (streamline.models.gradient_boosting.xgbclassifier attribute)": [[26, "streamline.models.gradient_boosting.XGBClassifier.color"]], "model_name (streamline.models.gradient_boosting.cgbclassifier attribute)": [[26, "streamline.models.gradient_boosting.CGBClassifier.model_name"]], "model_name (streamline.models.gradient_boosting.gbclassifier attribute)": [[26, "streamline.models.gradient_boosting.GBClassifier.model_name"]], "model_name (streamline.models.gradient_boosting.lgbclassifier attribute)": [[26, "streamline.models.gradient_boosting.LGBClassifier.model_name"]], "model_name (streamline.models.gradient_boosting.xgbclassifier attribute)": [[26, "streamline.models.gradient_boosting.XGBClassifier.model_name"]], "objective() (streamline.models.gradient_boosting.cgbclassifier method)": [[26, "streamline.models.gradient_boosting.CGBClassifier.objective"]], "objective() (streamline.models.gradient_boosting.gbclassifier method)": [[26, "streamline.models.gradient_boosting.GBClassifier.objective"]], "objective() (streamline.models.gradient_boosting.lgbclassifier method)": [[26, "streamline.models.gradient_boosting.LGBClassifier.objective"]], "objective() (streamline.models.gradient_boosting.xgbclassifier method)": [[26, "streamline.models.gradient_boosting.XGBClassifier.objective"]], "small_name (streamline.models.gradient_boosting.cgbclassifier attribute)": [[26, "streamline.models.gradient_boosting.CGBClassifier.small_name"]], "small_name (streamline.models.gradient_boosting.gbclassifier attribute)": [[26, "streamline.models.gradient_boosting.GBClassifier.small_name"]], "small_name (streamline.models.gradient_boosting.lgbclassifier attribute)": [[26, "streamline.models.gradient_boosting.LGBClassifier.small_name"]], "small_name (streamline.models.gradient_boosting.xgbclassifier attribute)": [[26, "streamline.models.gradient_boosting.XGBClassifier.small_name"]], "streamline.models.gradient_boosting": [[26, "module-streamline.models.gradient_boosting"]], "exstracsclassifier (class in streamline.models.learning_based)": [[27, "streamline.models.learning_based.ExSTraCSClassifier"]], "xcsclassifier (class in streamline.models.learning_based)": [[27, "streamline.models.learning_based.XCSClassifier"]], "color (streamline.models.learning_based.exstracsclassifier attribute)": [[27, "streamline.models.learning_based.ExSTraCSClassifier.color"]], "color (streamline.models.learning_based.xcsclassifier attribute)": [[27, "streamline.models.learning_based.XCSClassifier.color"]], "color (streamline.models.learning_based.elcsclassifier attribute)": [[27, "streamline.models.learning_based.eLCSClassifier.color"]], "elcsclassifier (class in streamline.models.learning_based)": [[27, "streamline.models.learning_based.eLCSClassifier"]], "model_name (streamline.models.learning_based.exstracsclassifier attribute)": [[27, "streamline.models.learning_based.ExSTraCSClassifier.model_name"]], "model_name (streamline.models.learning_based.xcsclassifier attribute)": [[27, "streamline.models.learning_based.XCSClassifier.model_name"]], "model_name (streamline.models.learning_based.elcsclassifier attribute)": [[27, "streamline.models.learning_based.eLCSClassifier.model_name"]], "objective() (streamline.models.learning_based.exstracsclassifier method)": [[27, "streamline.models.learning_based.ExSTraCSClassifier.objective"]], "objective() (streamline.models.learning_based.xcsclassifier method)": [[27, "streamline.models.learning_based.XCSClassifier.objective"]], "objective() (streamline.models.learning_based.elcsclassifier method)": [[27, "streamline.models.learning_based.eLCSClassifier.objective"]], "small_name (streamline.models.learning_based.exstracsclassifier attribute)": [[27, "streamline.models.learning_based.ExSTraCSClassifier.small_name"]], "small_name (streamline.models.learning_based.xcsclassifier attribute)": [[27, "streamline.models.learning_based.XCSClassifier.small_name"]], "small_name (streamline.models.learning_based.elcsclassifier attribute)": [[27, "streamline.models.learning_based.eLCSClassifier.small_name"]], "streamline.models.learning_based": [[27, "module-streamline.models.learning_based"]], "logisticregression (class in streamline.models.linear_model)": [[28, "streamline.models.linear_model.LogisticRegression"]], "color (streamline.models.linear_model.logisticregression attribute)": [[28, "streamline.models.linear_model.LogisticRegression.color"]], "model_name (streamline.models.linear_model.logisticregression attribute)": [[28, "streamline.models.linear_model.LogisticRegression.model_name"]], "objective() (streamline.models.linear_model.logisticregression method)": [[28, "streamline.models.linear_model.LogisticRegression.objective"]], "small_name (streamline.models.linear_model.logisticregression attribute)": [[28, "streamline.models.linear_model.LogisticRegression.small_name"]], "streamline.models.linear_model": [[28, "module-streamline.models.linear_model"]], "naivebayesclassifier (class in streamline.models.naive_bayes)": [[29, "streamline.models.naive_bayes.NaiveBayesClassifier"]], "color (streamline.models.naive_bayes.naivebayesclassifier attribute)": [[29, "streamline.models.naive_bayes.NaiveBayesClassifier.color"]], "model_name (streamline.models.naive_bayes.naivebayesclassifier attribute)": [[29, "streamline.models.naive_bayes.NaiveBayesClassifier.model_name"]], "objective() (streamline.models.naive_bayes.naivebayesclassifier method)": [[29, "streamline.models.naive_bayes.NaiveBayesClassifier.objective"]], "small_name (streamline.models.naive_bayes.naivebayesclassifier attribute)": [[29, "streamline.models.naive_bayes.NaiveBayesClassifier.small_name"]], "streamline.models.naive_bayes": [[29, "module-streamline.models.naive_bayes"]], "knnclassifier (class in streamline.models.neighbouring)": [[30, "streamline.models.neighbouring.KNNClassifier"]], "color (streamline.models.neighbouring.knnclassifier attribute)": [[30, "streamline.models.neighbouring.KNNClassifier.color"]], "model_name (streamline.models.neighbouring.knnclassifier attribute)": [[30, "streamline.models.neighbouring.KNNClassifier.model_name"]], "objective() (streamline.models.neighbouring.knnclassifier method)": [[30, "streamline.models.neighbouring.KNNClassifier.objective"]], "small_name (streamline.models.neighbouring.knnclassifier attribute)": [[30, "streamline.models.neighbouring.KNNClassifier.small_name"]], "streamline.models.neighbouring": [[30, "module-streamline.models.neighbouring"]], "randomforestclassifier (class in streamline.models.random_forest)": [[31, "streamline.models.random_forest.RandomForestClassifier"]], "color (streamline.models.random_forest.randomforestclassifier attribute)": [[31, "streamline.models.random_forest.RandomForestClassifier.color"]], "model_name (streamline.models.random_forest.randomforestclassifier attribute)": [[31, "streamline.models.random_forest.RandomForestClassifier.model_name"]], "objective() (streamline.models.random_forest.randomforestclassifier method)": [[31, "streamline.models.random_forest.RandomForestClassifier.objective"]], "small_name (streamline.models.random_forest.randomforestclassifier attribute)": [[31, "streamline.models.random_forest.RandomForestClassifier.small_name"]], "streamline.models.random_forest": [[31, "module-streamline.models.random_forest"]], "supportvectorclassifier (class in streamline.models.support_vector_machine)": [[32, "streamline.models.support_vector_machine.SupportVectorClassifier"]], "color (streamline.models.support_vector_machine.supportvectorclassifier attribute)": [[32, "streamline.models.support_vector_machine.SupportVectorClassifier.color"]], "model_name (streamline.models.support_vector_machine.supportvectorclassifier attribute)": [[32, "streamline.models.support_vector_machine.SupportVectorClassifier.model_name"]], "objective() (streamline.models.support_vector_machine.supportvectorclassifier method)": [[32, "streamline.models.support_vector_machine.SupportVectorClassifier.objective"]], "small_name (streamline.models.support_vector_machine.supportvectorclassifier attribute)": [[32, "streamline.models.support_vector_machine.SupportVectorClassifier.small_name"]], "streamline.models.support_vector_machine": [[32, "module-streamline.models.support_vector_machine"]], "streamline.postanalysis": [[33, "module-streamline.postanalysis"]], "comparejob (class in streamline.postanalysis.dataset_compare)": [[34, "streamline.postanalysis.dataset_compare.CompareJob"]], "best_kruscall_wallis() (streamline.postanalysis.dataset_compare.comparejob method)": [[34, "streamline.postanalysis.dataset_compare.CompareJob.best_kruscall_wallis"]], "best_mann_whitney_u() (streamline.postanalysis.dataset_compare.comparejob method)": [[34, "streamline.postanalysis.dataset_compare.CompareJob.best_mann_whitney_u"]], "best_wilcoxon_rank() (streamline.postanalysis.dataset_compare.comparejob method)": [[34, "streamline.postanalysis.dataset_compare.CompareJob.best_wilcoxon_rank"]], "data_compare_bp() (streamline.postanalysis.dataset_compare.comparejob method)": [[34, "streamline.postanalysis.dataset_compare.CompareJob.data_compare_bp"]], "data_compare_bp_all() (streamline.postanalysis.dataset_compare.comparejob method)": [[34, "streamline.postanalysis.dataset_compare.CompareJob.data_compare_bp_all"]], "inter_set_best_fn() (streamline.postanalysis.dataset_compare.comparejob method)": [[34, "streamline.postanalysis.dataset_compare.CompareJob.inter_set_best_fn"]], "inter_set_fn() (streamline.postanalysis.dataset_compare.comparejob method)": [[34, "streamline.postanalysis.dataset_compare.CompareJob.inter_set_fn"]], "kruscall_wallis() (streamline.postanalysis.dataset_compare.comparejob method)": [[34, "streamline.postanalysis.dataset_compare.CompareJob.kruscall_wallis"]], "mann_whitney_u() (streamline.postanalysis.dataset_compare.comparejob method)": [[34, "streamline.postanalysis.dataset_compare.CompareJob.mann_whitney_u"]], "run() (streamline.postanalysis.dataset_compare.comparejob method)": [[34, "streamline.postanalysis.dataset_compare.CompareJob.run"]], "save_runtime() (streamline.postanalysis.dataset_compare.comparejob method)": [[34, "streamline.postanalysis.dataset_compare.CompareJob.save_runtime"]], "streamline.postanalysis.dataset_compare": [[34, "module-streamline.postanalysis.dataset_compare"]], "temp_summary() (streamline.postanalysis.dataset_compare.comparejob method)": [[34, "streamline.postanalysis.dataset_compare.CompareJob.temp_summary"]], "wilcoxon_rank() (streamline.postanalysis.dataset_compare.comparejob method)": [[34, "streamline.postanalysis.dataset_compare.CompareJob.wilcoxon_rank"]], "reportjob (class in streamline.postanalysis.gererate_report)": [[35, "streamline.postanalysis.gererate_report.ReportJob"]], "footer() (streamline.postanalysis.gererate_report.reportjob method)": [[35, "streamline.postanalysis.gererate_report.ReportJob.footer"]], "format_fn() (streamline.postanalysis.gererate_report.reportjob method)": [[35, "streamline.postanalysis.gererate_report.ReportJob.format_fn"]], "job() (streamline.postanalysis.gererate_report.reportjob method)": [[35, "streamline.postanalysis.gererate_report.ReportJob.job"]], "list_to_string() (in module streamline.postanalysis.gererate_report)": [[35, "streamline.postanalysis.gererate_report.list_to_string"]], "ngi() (in module streamline.postanalysis.gererate_report)": [[35, "streamline.postanalysis.gererate_report.ngi"]], "pub_model_mean_stats() (streamline.postanalysis.gererate_report.reportjob method)": [[35, "streamline.postanalysis.gererate_report.ReportJob.pub_model_mean_stats"]], "pub_model_median_stats() (streamline.postanalysis.gererate_report.reportjob method)": [[35, "streamline.postanalysis.gererate_report.ReportJob.pub_model_median_stats"]], "pub_runtime() (streamline.postanalysis.gererate_report.reportjob method)": [[35, "streamline.postanalysis.gererate_report.ReportJob.pub_runtime"]], "pub_univariate() (streamline.postanalysis.gererate_report.reportjob method)": [[35, "streamline.postanalysis.gererate_report.ReportJob.pub_univariate"]], "run() (streamline.postanalysis.gererate_report.reportjob method)": [[35, "streamline.postanalysis.gererate_report.ReportJob.run"]], "streamline.postanalysis.gererate_report": [[35, "module-streamline.postanalysis.gererate_report"]], "replicatejob (class in streamline.postanalysis.model_replicate)": [[36, "streamline.postanalysis.model_replicate.ReplicateJob"]], "eval_model() (streamline.postanalysis.model_replicate.replicatejob method)": [[36, "streamline.postanalysis.model_replicate.ReplicateJob.eval_model"]], "impute_rep_data() (streamline.postanalysis.model_replicate.replicatejob method)": [[36, "streamline.postanalysis.model_replicate.ReplicateJob.impute_rep_data"]], "run() (streamline.postanalysis.model_replicate.replicatejob method)": [[36, "streamline.postanalysis.model_replicate.ReplicateJob.run"]], "scale_rep_data() (streamline.postanalysis.model_replicate.replicatejob method)": [[36, "streamline.postanalysis.model_replicate.ReplicateJob.scale_rep_data"]], "streamline.postanalysis.model_replicate": [[36, "module-streamline.postanalysis.model_replicate"]], "statsjob (class in streamline.postanalysis.statistics)": [[37, "streamline.postanalysis.statistics.StatsJob"]], "composite_fi_plot() (streamline.postanalysis.statistics.statsjob method)": [[37, "streamline.postanalysis.statistics.StatsJob.composite_fi_plot"]], "do_fi_boxplots() (streamline.postanalysis.statistics.statsjob method)": [[37, "streamline.postanalysis.statistics.StatsJob.do_fi_boxplots"]], "do_fi_histogram() (streamline.postanalysis.statistics.statsjob method)": [[37, "streamline.postanalysis.statistics.StatsJob.do_fi_histogram"]], "do_model_prc() (streamline.postanalysis.statistics.statsjob method)": [[37, "streamline.postanalysis.statistics.StatsJob.do_model_prc"]], "do_model_roc() (streamline.postanalysis.statistics.statsjob method)": [[37, "streamline.postanalysis.statistics.StatsJob.do_model_roc"]], "do_plot_prc() (streamline.postanalysis.statistics.statsjob method)": [[37, "streamline.postanalysis.statistics.StatsJob.do_plot_prc"]], "do_plot_roc() (streamline.postanalysis.statistics.statsjob method)": [[37, "streamline.postanalysis.statistics.StatsJob.do_plot_roc"]], "fi_stats() (streamline.postanalysis.statistics.statsjob method)": [[37, "streamline.postanalysis.statistics.StatsJob.fi_stats"]], "frac_fi() (streamline.postanalysis.statistics.statsjob static method)": [[37, "streamline.postanalysis.statistics.StatsJob.frac_fi"]], "get_fi_to_viz_sorted() (streamline.postanalysis.statistics.statsjob method)": [[37, "streamline.postanalysis.statistics.StatsJob.get_fi_to_viz_sorted"]], "kruskal_wallis() (streamline.postanalysis.statistics.statsjob method)": [[37, "streamline.postanalysis.statistics.StatsJob.kruskal_wallis"]], "mann_whitney_u() (streamline.postanalysis.statistics.statsjob method)": [[37, "streamline.postanalysis.statistics.StatsJob.mann_whitney_u"]], "metric_boxplots() (streamline.postanalysis.statistics.statsjob method)": [[37, "streamline.postanalysis.statistics.StatsJob.metric_boxplots"]], "parse_runtime() (streamline.postanalysis.statistics.statsjob method)": [[37, "streamline.postanalysis.statistics.StatsJob.parse_runtime"]], "prep_fi() (streamline.postanalysis.statistics.statsjob method)": [[37, "streamline.postanalysis.statistics.StatsJob.prep_fi"]], "preparation() (streamline.postanalysis.statistics.statsjob method)": [[37, "streamline.postanalysis.statistics.StatsJob.preparation"]], "primary_stats() (streamline.postanalysis.statistics.statsjob method)": [[37, "streamline.postanalysis.statistics.StatsJob.primary_stats"]], "run() (streamline.postanalysis.statistics.statsjob method)": [[37, "streamline.postanalysis.statistics.StatsJob.run"]], "save_fi() (streamline.postanalysis.statistics.statsjob method)": [[37, "streamline.postanalysis.statistics.StatsJob.save_fi"]], "save_metric_stats() (streamline.postanalysis.statistics.statsjob method)": [[37, "streamline.postanalysis.statistics.StatsJob.save_metric_stats"]], "save_runtime() (streamline.postanalysis.statistics.statsjob method)": [[37, "streamline.postanalysis.statistics.StatsJob.save_runtime"]], "select_for_composite_viz() (streamline.postanalysis.statistics.statsjob method)": [[37, "streamline.postanalysis.statistics.StatsJob.select_for_composite_viz"]], "streamline.postanalysis.statistics": [[37, "module-streamline.postanalysis.statistics"]], "weight_fi() (streamline.postanalysis.statistics.statsjob static method)": [[37, "streamline.postanalysis.statistics.StatsJob.weight_fi"]], "weight_frac_fi() (streamline.postanalysis.statistics.statsjob static method)": [[37, "streamline.postanalysis.statistics.StatsJob.weight_frac_fi"]], "wilcoxon_rank() (streamline.postanalysis.statistics.statsjob method)": [[37, "streamline.postanalysis.statistics.StatsJob.wilcoxon_rank"]], "streamline.runners": [[38, "module-streamline.runners"]], "cleanrunner (class in streamline.runners.clean_runner)": [[39, "streamline.runners.clean_runner.CleanRunner"]], "run() (streamline.runners.clean_runner.cleanrunner method)": [[39, "streamline.runners.clean_runner.CleanRunner.run"]], "streamline.runners.clean_runner": [[39, "module-streamline.runners.clean_runner"]], "comparerunner (class in streamline.runners.compare_runner)": [[40, "streamline.runners.compare_runner.CompareRunner"]], "get_cluster_params() (streamline.runners.compare_runner.comparerunner method)": [[40, "streamline.runners.compare_runner.CompareRunner.get_cluster_params"]], "run() (streamline.runners.compare_runner.comparerunner method)": [[40, "streamline.runners.compare_runner.CompareRunner.run"]], "streamline.runners.compare_runner": [[40, "module-streamline.runners.compare_runner"]], "submit_lsf_cluster_job() (streamline.runners.compare_runner.comparerunner method)": [[40, "streamline.runners.compare_runner.CompareRunner.submit_lsf_cluster_job"]], "submit_slurm_cluster_job() (streamline.runners.compare_runner.comparerunner method)": [[40, "streamline.runners.compare_runner.CompareRunner.submit_slurm_cluster_job"]], "dataprocessrunner (class in streamline.runners.dataprocess_runner)": [[41, "streamline.runners.dataprocess_runner.DataProcessRunner"]], "get_cluster_params() (streamline.runners.dataprocess_runner.dataprocessrunner method)": [[41, "streamline.runners.dataprocess_runner.DataProcessRunner.get_cluster_params"]], "run() (streamline.runners.dataprocess_runner.dataprocessrunner method)": [[41, "streamline.runners.dataprocess_runner.DataProcessRunner.run"]], "save_metadata() (streamline.runners.dataprocess_runner.dataprocessrunner method)": [[41, "streamline.runners.dataprocess_runner.DataProcessRunner.save_metadata"]], "streamline.runners.dataprocess_runner": [[41, "module-streamline.runners.dataprocess_runner"]], "submit_lsf_cluster_job() (streamline.runners.dataprocess_runner.dataprocessrunner method)": [[41, "streamline.runners.dataprocess_runner.DataProcessRunner.submit_lsf_cluster_job"]], "submit_slurm_cluster_job() (streamline.runners.dataprocess_runner.dataprocessrunner method)": [[41, "streamline.runners.dataprocess_runner.DataProcessRunner.submit_slurm_cluster_job"]], "edarunner (class in streamline.runners.eda_runner)": [[42, "streamline.runners.eda_runner.EDARunner"]], "get_cluster_params() (streamline.runners.eda_runner.edarunner method)": [[42, "streamline.runners.eda_runner.EDARunner.get_cluster_params"]], "make_dir_tree() (streamline.runners.eda_runner.edarunner method)": [[42, "streamline.runners.eda_runner.EDARunner.make_dir_tree"]], "run() (streamline.runners.eda_runner.edarunner method)": [[42, "streamline.runners.eda_runner.EDARunner.run"]], "run_kfold() (streamline.runners.eda_runner.edarunner method)": [[42, "streamline.runners.eda_runner.EDARunner.run_kfold"]], "save_metadata() (streamline.runners.eda_runner.edarunner method)": [[42, "streamline.runners.eda_runner.EDARunner.save_metadata"]], "streamline.runners.eda_runner": [[42, "module-streamline.runners.eda_runner"]], "submit_lsf_cluster_job() (streamline.runners.eda_runner.edarunner method)": [[42, "streamline.runners.eda_runner.EDARunner.submit_lsf_cluster_job"]], "submit_slurm_cluster_job() (streamline.runners.eda_runner.edarunner method)": [[42, "streamline.runners.eda_runner.EDARunner.submit_slurm_cluster_job"]], "featureimportancerunner (class in streamline.runners.feature_runner)": [[43, "streamline.runners.feature_runner.FeatureImportanceRunner"]], "featureselectionrunner (class in streamline.runners.feature_runner)": [[43, "streamline.runners.feature_runner.FeatureSelectionRunner"]], "get_cluster_params() (streamline.runners.feature_runner.featureimportancerunner method)": [[43, "streamline.runners.feature_runner.FeatureImportanceRunner.get_cluster_params"]], "get_cluster_params() (streamline.runners.feature_runner.featureselectionrunner method)": [[43, "streamline.runners.feature_runner.FeatureSelectionRunner.get_cluster_params"]], "run() (streamline.runners.feature_runner.featureimportancerunner method)": [[43, "streamline.runners.feature_runner.FeatureImportanceRunner.run"]], "run() (streamline.runners.feature_runner.featureselectionrunner method)": [[43, "streamline.runners.feature_runner.FeatureSelectionRunner.run"]], "save_metadata() (streamline.runners.feature_runner.featureimportancerunner method)": [[43, "streamline.runners.feature_runner.FeatureImportanceRunner.save_metadata"]], "save_metadata() (streamline.runners.feature_runner.featureselectionrunner method)": [[43, "streamline.runners.feature_runner.FeatureSelectionRunner.save_metadata"]], "streamline.runners.feature_runner": [[43, "module-streamline.runners.feature_runner"]], "submit_lsf_cluster_job() (streamline.runners.feature_runner.featureimportancerunner method)": [[43, "streamline.runners.feature_runner.FeatureImportanceRunner.submit_lsf_cluster_job"]], "submit_lsf_cluster_job() (streamline.runners.feature_runner.featureselectionrunner method)": [[43, "streamline.runners.feature_runner.FeatureSelectionRunner.submit_lsf_cluster_job"]], "submit_slurm_cluster_job() (streamline.runners.feature_runner.featureimportancerunner method)": [[43, "streamline.runners.feature_runner.FeatureImportanceRunner.submit_slurm_cluster_job"]], "submit_slurm_cluster_job() (streamline.runners.feature_runner.featureselectionrunner method)": [[43, "streamline.runners.feature_runner.FeatureSelectionRunner.submit_slurm_cluster_job"]], "modelexperimentrunner (class in streamline.runners.model_runner)": [[44, "streamline.runners.model_runner.ModelExperimentRunner"]], "get_cluster_params() (streamline.runners.model_runner.modelexperimentrunner method)": [[44, "streamline.runners.model_runner.ModelExperimentRunner.get_cluster_params"]], "run() (streamline.runners.model_runner.modelexperimentrunner method)": [[44, "streamline.runners.model_runner.ModelExperimentRunner.run"]], "save_alginfo() (streamline.runners.model_runner.modelexperimentrunner method)": [[44, "streamline.runners.model_runner.ModelExperimentRunner.save_alginfo"]], "save_metadata() (streamline.runners.model_runner.modelexperimentrunner method)": [[44, "streamline.runners.model_runner.ModelExperimentRunner.save_metadata"]], "streamline.runners.model_runner": [[44, "module-streamline.runners.model_runner"]], "submit_lsf_cluster_job() (streamline.runners.model_runner.modelexperimentrunner method)": [[44, "streamline.runners.model_runner.ModelExperimentRunner.submit_lsf_cluster_job"]], "submit_slurm_cluster_job() (streamline.runners.model_runner.modelexperimentrunner method)": [[44, "streamline.runners.model_runner.ModelExperimentRunner.submit_slurm_cluster_job"]], "replicationrunner (class in streamline.runners.replicate_runner)": [[45, "streamline.runners.replicate_runner.ReplicationRunner"]], "get_algorithms() (streamline.runners.replicate_runner.replicationrunner method)": [[45, "streamline.runners.replicate_runner.ReplicationRunner.get_algorithms"]], "get_cluster_params() (streamline.runners.replicate_runner.replicationrunner method)": [[45, "streamline.runners.replicate_runner.ReplicationRunner.get_cluster_params"]], "run() (streamline.runners.replicate_runner.replicationrunner method)": [[45, "streamline.runners.replicate_runner.ReplicationRunner.run"]], "save_metadata() (streamline.runners.replicate_runner.replicationrunner method)": [[45, "streamline.runners.replicate_runner.ReplicationRunner.save_metadata"]], "streamline.runners.replicate_runner": [[45, "module-streamline.runners.replicate_runner"]], "submit_lsf_cluster_job() (streamline.runners.replicate_runner.replicationrunner method)": [[45, "streamline.runners.replicate_runner.ReplicationRunner.submit_lsf_cluster_job"]], "submit_slurm_cluster_job() (streamline.runners.replicate_runner.replicationrunner method)": [[45, "streamline.runners.replicate_runner.ReplicationRunner.submit_slurm_cluster_job"]], "reportrunner (class in streamline.runners.report_runner)": [[46, "streamline.runners.report_runner.ReportRunner"]], "get_cluster_params() (streamline.runners.report_runner.reportrunner method)": [[46, "streamline.runners.report_runner.ReportRunner.get_cluster_params"]], "run() (streamline.runners.report_runner.reportrunner method)": [[46, "streamline.runners.report_runner.ReportRunner.run"]], "streamline.runners.report_runner": [[46, "module-streamline.runners.report_runner"]], "submit_lsf_cluster_job() (streamline.runners.report_runner.reportrunner method)": [[46, "streamline.runners.report_runner.ReportRunner.submit_lsf_cluster_job"]], "submit_slurm_cluster_job() (streamline.runners.report_runner.reportrunner method)": [[46, "streamline.runners.report_runner.ReportRunner.submit_slurm_cluster_job"]], "statsrunner (class in streamline.runners.stats_runner)": [[47, "streamline.runners.stats_runner.StatsRunner"]], "get_cluster_params() (streamline.runners.stats_runner.statsrunner method)": [[47, "streamline.runners.stats_runner.StatsRunner.get_cluster_params"]], "run() (streamline.runners.stats_runner.statsrunner method)": [[47, "streamline.runners.stats_runner.StatsRunner.run"]], "save_metadata() (streamline.runners.stats_runner.statsrunner method)": [[47, "streamline.runners.stats_runner.StatsRunner.save_metadata"]], "streamline.runners.stats_runner": [[47, "module-streamline.runners.stats_runner"]], "submit_lsf_cluster_job() (streamline.runners.stats_runner.statsrunner method)": [[47, "streamline.runners.stats_runner.StatsRunner.submit_lsf_cluster_job"]], "submit_slurm_cluster_job() (streamline.runners.stats_runner.statsrunner method)": [[47, "streamline.runners.stats_runner.StatsRunner.submit_slurm_cluster_job"]], "streamline.utils": [[48, "module-streamline.utils"]], "check_phase() (in module streamline.utils.checker)": [[49, "streamline.utils.checker.check_phase"]], "check_phase_1() (in module streamline.utils.checker)": [[49, "streamline.utils.checker.check_phase_1"]], "check_phase_10() (in module streamline.utils.checker)": [[49, "streamline.utils.checker.check_phase_10"]], "check_phase_2() (in module streamline.utils.checker)": [[49, "streamline.utils.checker.check_phase_2"]], "check_phase_3() (in module streamline.utils.checker)": [[49, "streamline.utils.checker.check_phase_3"]], "check_phase_4() (in module streamline.utils.checker)": [[49, "streamline.utils.checker.check_phase_4"]], "check_phase_5() (in module streamline.utils.checker)": [[49, "streamline.utils.checker.check_phase_5"]], "check_phase_6() (in module streamline.utils.checker)": [[49, "streamline.utils.checker.check_phase_6"]], "check_phase_7() (in module streamline.utils.checker)": [[49, "streamline.utils.checker.check_phase_7"]], "check_phase_8() (in module streamline.utils.checker)": [[49, "streamline.utils.checker.check_phase_8"]], "check_phase_9() (in module streamline.utils.checker)": [[49, "streamline.utils.checker.check_phase_9"]], "streamline.utils.checker": [[49, "module-streamline.utils.checker"]], "cleaner (class in streamline.utils.cleanup)": [[50, "streamline.utils.cleanup.Cleaner"]], "rm_tree() (streamline.utils.cleanup.cleaner static method)": [[50, "streamline.utils.cleanup.Cleaner.rm_tree"]], "run() (streamline.utils.cleanup.cleaner method)": [[50, "streamline.utils.cleanup.Cleaner.run"]], "streamline.utils.cleanup": [[50, "module-streamline.utils.cleanup"]], "get_cluster() (in module streamline.utils.cluster)": [[51, "streamline.utils.cluster.get_cluster"]], "streamline.utils.cluster": [[51, "module-streamline.utils.cluster"]], "dataset (class in streamline.utils.dataset)": [[52, "streamline.utils.dataset.Dataset"]], "clean_data() (streamline.utils.dataset.dataset method)": [[52, "streamline.utils.dataset.Dataset.clean_data"]], "feature_only_data() (streamline.utils.dataset.dataset method)": [[52, "streamline.utils.dataset.Dataset.feature_only_data"]], "get_outcome() (streamline.utils.dataset.dataset method)": [[52, "streamline.utils.dataset.Dataset.get_outcome"]], "load_data() (streamline.utils.dataset.dataset method)": [[52, "streamline.utils.dataset.Dataset.load_data"]], "non_feature_data() (streamline.utils.dataset.dataset method)": [[52, "streamline.utils.dataset.Dataset.non_feature_data"]], "set_headers() (streamline.utils.dataset.dataset method)": [[52, "streamline.utils.dataset.Dataset.set_headers"]], "streamline.utils.dataset": [[52, "module-streamline.utils.dataset"]], "class_eval() (in module streamline.utils.evaluation)": [[53, "streamline.utils.evaluation.class_eval"]], "streamline.utils.evaluation": [[53, "module-streamline.utils.evaluation"]], "job (class in streamline.utils.job)": [[54, "streamline.utils.job.Job"]], "run() (streamline.utils.job.job method)": [[54, "streamline.utils.job.Job.run"]], "run_cluster() (streamline.utils.job.job method)": [[54, "streamline.utils.job.Job.run_cluster"]], "streamline.utils.job": [[54, "module-streamline.utils.job"]], "comma_sep_choices() (in module streamline.utils.parser)": [[55, "streamline.utils.parser.comma_sep_choices"]], "parser_function() (in module streamline.utils.parser)": [[55, "streamline.utils.parser.parser_function"]], "streamline.utils.parser": [[55, "module-streamline.utils.parser"]], "model_runner_fn() (in module streamline.utils.runners)": [[56, "streamline.utils.runners.model_runner_fn"]], "parallel_eda_call() (in module streamline.utils.runners)": [[56, "streamline.utils.runners.parallel_eda_call"]], "parallel_kfold_call() (in module streamline.utils.runners)": [[56, "streamline.utils.runners.parallel_kfold_call"]], "run_jobs() (in module streamline.utils.runners)": [[56, "streamline.utils.runners.run_jobs"]], "runner_fn() (in module streamline.utils.runners)": [[56, "streamline.utils.runners.runner_fn"]], "streamline.utils.runners": [[56, "module-streamline.utils.runners"]], "sub_jobs() (in module streamline.utils.runners)": [[56, "streamline.utils.runners.sub_jobs"]]}})